---
# Source: crds/admin.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 70424b0e23051c75
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: workspaces.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    shortNames:
    - ws
    singular: workspace
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `Workspace` describes a logical grouping of Kubernetes namespaces within the clusters that are part of
              a virtual mesh. Workspace can be treated as a boundary for configuration and service discovery.
              The specification describes how to select namespaces or/and clusters for a given workspace.

              The workspace-wide settings such as `importFrom`, `exportTo` are configured in the `WorkspaceSettings`
              object. Refer to the `WorkspaceSettings` documentation for details.

              The following example creates the `web` workspace that selects all workload clusters and all namespaces
              within those clusters to be part of the workspace.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
              spec:
                workloadClusters:
                  - name: "*"
                    namespaces:
                    - name: "*"
              ```

              The following configuration creates the `web` workspace that selects the `web` namespace from all workload
              clusters that have the label of `region: us-east` to be part of the workspace. Refer to the `KubernetesCluster`
              documentation for examples on how to label your KubernetesCluster resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
              spec:
                workloadClusters:
                  - selector:
                      region: us-east
                    namespaces:
                      - name: web
              ```

              The following example creates the `policy` namespace that does NOT have any workload clusters.
              This workspace also has the `gloo.solo.io/global` label which other workspaces
              can use to import this workspace by label in their `WorkspaceSettings` resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: policy
                namespace: gloo-mesh
                labels:
                  gloo.solo.io/global: 'true'
              ```

              The example below creates the `backend` workspace that select any namespace that starts with `ns1` in `cluster1`
              and any namespace that starts with `ns2` in `cluster2`. It has the `gloo.solo.io/exportToGateway` label,
              which other workspaces can use to import this workspace by label in their `WorkspaceSettings` resource.
              Refer to the `KubernetesCluster` documentation for examples on how to name your KubernetesCluster resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: backend
                namespace: gloo-mesh
                labels:
                  gloo.solo.io/exportToGateway: tier1
                  team: backend
              spec:
                workloadClusters:
                  - name: cluster1
                    namespaces:
                      - name: ns1*
                  - name: cluster2
                    namespaces:
                      - name: ns2*
              ```
            properties:
              workloadClusters:
                description: |-
                  Optional: Select workload clusters and namespaces for the workload clusters that are part of the workspace.
                  When this is not specified, the workspace contains no workload clusters.
                items:
                  properties:
                    configEnabled:
                      description: 'Optional: Enable configuration from this workload
                        cluster. (default: true unless explicitly enabled for any
                        selected clusters or namespaces)'
                      type: boolean
                    name:
                      description: |-
                        Optional: Name of the cluster to select.
                        Use * to match name patterns in multiple clusters name.
                      type: string
                    namespaces:
                      description: Select the namespaces in the cluster(s) to include
                        in the workspace. If you do not select any namespaces, the
                        workspace is empty and results in an error.
                      items:
                        properties:
                          configEnabled:
                            description: 'Optional: Enable configuration from this
                              namespace. (default: true unless explicitly enabled
                              for any selected clusters or namespaces)'
                            type: boolean
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select groups of namespaces via labels.
                              Leaving this field empty will NOT select all namespaces, but rather be ignored.
                              Note: When this field is used in conjunction with "name", both conditions are ANDed together.
                            type: object
                          name:
                            description: |-
                              Name of the namespace to select.
                              Can use * to match name patterns in multiple namespaces.
                              Note: When this field is used in conjunction with "labels", both conditions are ANDed together.
                            type: string
                        type: object
                      type: array
                    selector:
                      additionalProperties:
                        type: string
                      description: |-
                        Optional: Include workload clusters in the workspace by using a selector.
                        The selector matches the selector values in the KubernetesCluster resource on the management cluster.
                        Selector is a map of {key,value} pairs. A single {key,value} in the selector
                        map is equivalent to an element of labelRequirements, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the workspace
            properties:
              clusters:
                description: Clusters that this workspace selects. These cluster objects
                  contain the namespaces that the workspace owns within them.
                items:
                  properties:
                    name:
                      description: Name of a cluster that this workspace selects
                      type: string
                    namespaces:
                      description: Namespaces inside the cluster that this workspace
                        owns.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              destinationCounts:
                additionalProperties:
                  format: int32
                  type: integer
                description: destination resource counts in this workspace by type
                  (k8s service, virtual destination, external service)
                type: object
              generic:
                properties:
                  message:
                    description: Additional information about the current state of
                      the resource.
                    type: string
                  observedGeneration:
                    description: |-
                      The most recent generation observed in the the object's metadata.
                      If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                      has not processed the most recent version of this object.
                    format: int64
                    type: integer
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in the Gloo
                      Mesh config translation.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              importedWorkspaces:
                description: list of workspaces imported into this workspace
                items:
                  type: string
                type: array
              policyCounts:
                additionalProperties:
                  format: int32
                  type: integer
                description: policy resource counts in this workspace by type (security,
                  trafficcontrol, resilience, observability)
                type: object
              resources:
                additionalProperties:
                  properties:
                    exported:
                      properties:
                        objectReferences:
                          items:
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                          type: array
                      type: object
                    imported:
                      properties:
                        objectReferences:
                          items:
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                          type: array
                      type: object
                    private:
                      properties:
                        objectReferences:
                          items:
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                description: gvk -> private/export/import reference
                type: object
              workspaceSettings:
                description: The workspacesettings object configuring this workspace.
                properties:
                  cluster:
                    description: the cluster of the object. if the field is omitted,
                      Gloo Mesh will use the same cluster as the parent object containing
                      this reference.
                    type: string
                  name:
                    description: the name of the object
                    type: string
                  namespace:
                    description: the namespace of the object. if the field is omitted,
                      Gloo Mesh will use the same namespace as the parent object containing
                      this reference.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: d9f70aeed95e8c09
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: workspacesettings.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WorkspaceSettings
    listKind: WorkspaceSettingsList
    plural: workspacesettings
    shortNames:
    - wss
    singular: workspacesettings
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `WorkspaceSettings` define a set of workspace-wide parameters such as `importFrom` and `exportTo` for the workspace.
              These settings are commonly defined by the workspace admin. There are 3 key configurations related to `WorkspaceSettings`:

              - importFrom: To import resources from another workspace to your workspace, configure the
              `importFrom` field in the `WorkspaceSettings` resource for your workspace.

              - exportTo: To export resources in your workspace to other workspaces, configure the `exportTo`
              field in the `WorkspaceSettings` resource for your workspace.

              - options: Configure service isolation, federation and other options for the workspace.

              You can specify your workspace's `importFrom` or `exportTo` or other workspace configuration options in your
              `WorkspaceSettings` resource for your workspace. Only one `WorkspaceSettings` resource can be defined for
              each workspace. The resource can be deployed to any of your workspace's namespaces in your workload cluster(s).

              Export:
              Only the resources below can be exported to other workspaces:
              - Kubernetes Service
              - VirtualDestination
              - ExternalService
              - RouteTable
              - APISchema
              - GraphQLResolverMap

              You can use the `exportTo` field in the `WorkspaceSettings` resource for the workspace to configure what resources
              are exported to which other workspaces. For example, the `web` application developer can export the RouteTable resource
              from the `web` workspace to an admin-owned gateway workspace.

              The following workspace example defines the `backend` workspace. The workspace settings example
              exports the `backend` workspace to any workspaces that matches the label `team: web`.
              In addition, all exported resources from the `backend` workspace are made available
              for any workspace that has the label `team: web` to import.

              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: backend
                namespace: gloo-mesh
                labels:
                  team: backend
              spec:
                workloadClusters:
                  - namespaces:
                    - name: backend*
              ---
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: backend-namespace
              spec:
                exportTo:
                  - workspaces:
                    - selector:
                        team: web
              ```

              Import:
              To import exported resources from other workspaces, configure the `importFrom` field in
              the `WorkspaceSettings` resource for your workspace.

              For example, by importing the `web` workspace, the admin-owned gateway workspace can delegate routing for a subset
              of the gateway traffic to a RouteTable resource in the `web` workspace.

              The following workspace defines the `web` workspace. The workspace settings example imports
              the exported resources from the `backend` workspace into the `web` workspace. The exported resources from the
              `backend` workspace is available to the `web` workspace for imports because the `web` workspace
              has the `team:web` label.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
                labels:
                  team: web
              spec:
                workloadClusters:
                  - namespaces:
                    - name: web*
              ---
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: web-namespace
              spec:
                importFrom:
                  - workspaces:
                    - name: backend
              ```

              The following example imports any workspaces that are available for the `web` workspace to import and
              has the `team: backend` label into the `web` workspace. After this is deployed
              in the `web-namepsace` namespace of a given workload cluster that are part of the workspace,
              all exported resources from the `backend` workspaces which has the label `team: backend`
              are imported into the `web` workspace and available for use by anything in the `web` workspace.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: web-namepsace
              spec:
                importFrom:
                  - workspaces:
                    - selector:
                        team: backend
              ```

              WorkspaceSettings defined in the admin namespace for Gloo Mesh will override settings defined in individual workspaces. Must have the name "global" to be picked up by Gloo Mesh.
            properties:
              exportTo:
                description: |-
                  A workspace can specify resources to export for use by other workspaces.
                  Currently the following types of objects can be exported across workspaces:
                  - Kubernetes services
                  - virtual destinations
                  - external destinations
                  - route tables
                  - API schemas
                  - GraphQL resolver maps
                  You can select workspace using labels, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                          - selector:
                              team: backend
                  ```
                  Or select workspace name using exact name match, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                          - name: backend
                  ```
                  Or exportTo all other workspaces, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                          - name: *
                  ```
                  Or select workspace using labels and name using simple regex, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                          - selector:
                              team: backend
                              name: backend*
                  ```
                  Or select workspace name using labels or select name using simple regex, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                           - selector:
                               team: backend
                           - name: backend
                  ```
                items:
                  properties:
                    resources:
                      description: the resources (and types of those resources) which
                        will be imported from or exported to the selected workspaces.
                      items:
                        properties:
                          cluster:
                            description: |-
                              Only select objects in the exactly matching cluster. If the field is omitted, Gloo Mesh will select
                              matching objects across all clusters available in the workspace.
                            type: string
                          kind:
                            description: |-
                              the type of the resource to import or export.
                              The type must be a valid importable/exportable Kubernetes or Gloo Mesh resource type.
                              Supported types:
                              - `RouteTable`
                              - `Service`
                              - `VirtualDestination`
                              - `ExternalService`
                              - `APISchema`
                              - `GraphQLResolverMap`
                              - `All` (all types)
                            enum:
                            - ALL
                            - ROUTE_TABLE
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            - API_SCHEMA
                            - GRAPHQL_RESOLVER_MAP
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: labels matching those of the object
                            type: object
                          name:
                            description: |-
                              Only select objects exactly matching the name. If the field is omitted, Gloo Mesh will select
                              matching objects with any name available in the workspace.
                            type: string
                          namespace:
                            description: |-
                              Only select objects exactly matching the namespace. If the field is omitted, Gloo Mesh will select
                              matching objects across all namespaces available in the workspace.
                            type: string
                        type: object
                      type: array
                    workspaces:
                      description: the workspaces with the resources to export to
                        or import.
                      items:
                        properties:
                          name:
                            description: |-
                              Optional: Name of the workspace to select.
                              Use * to match name patterns in multiple workspace names.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select workspaces based on their labels
                              The example below select workspaces based on the label `team: backend`:
                              ```yaml
                               - selector:
                                   team: backend
                              ```
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
              importFrom:
                description: |-
                  Select the workspaces whose objects will be imported into this workspace.
                  Objects must both be exported by the workspace that is being imported and imported into this workspace in order to be shared across workspaces.
                  Imported objects allow the creation of routes and outbound-communication from one workspace to another.
                  Currently the following types of objects can be imported across workspaces:
                  - kubernetes services
                  - virtual destinations
                  - external destinations
                  - route tables
                  - API schemas
                  - GraphQL resolver maps
                  You can select workspace using labels, for example:
                  ```yaml
                      importFrom:
                        - workspaces:
                          - selector:
                              team: backend
                          services:
                          - {} # select all services
                  ```
                  Or select workspace name using exact name match, for example:
                  ```yaml
                      importFrom:
                        # import all importable objects from the workspace named "backend"
                        - workspaces:
                          - name: backend
                  ```
                  Or select workspace using labels and name using simple regex, for example:
                  ```yaml
                      importFrom:
                        - workspaces:
                          - selector:
                              team: backend
                            name: backend*
                  ```
                  Or select workspace name using labels or select name using simple regex, for example:
                  ```yaml
                      importFrom:
                        - workspaces:
                          - selector:
                              team: backend
                          - name: backend
                  ```
                items:
                  properties:
                    resources:
                      description: the resources (and types of those resources) which
                        will be imported from or exported to the selected workspaces.
                      items:
                        properties:
                          cluster:
                            description: |-
                              Only select objects in the exactly matching cluster. If the field is omitted, Gloo Mesh will select
                              matching objects across all clusters available in the workspace.
                            type: string
                          kind:
                            description: |-
                              the type of the resource to import or export.
                              The type must be a valid importable/exportable Kubernetes or Gloo Mesh resource type.
                              Supported types:
                              - `RouteTable`
                              - `Service`
                              - `VirtualDestination`
                              - `ExternalService`
                              - `APISchema`
                              - `GraphQLResolverMap`
                              - `All` (all types)
                            enum:
                            - ALL
                            - ROUTE_TABLE
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            - API_SCHEMA
                            - GRAPHQL_RESOLVER_MAP
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: labels matching those of the object
                            type: object
                          name:
                            description: |-
                              Only select objects exactly matching the name. If the field is omitted, Gloo Mesh will select
                              matching objects with any name available in the workspace.
                            type: string
                          namespace:
                            description: |-
                              Only select objects exactly matching the namespace. If the field is omitted, Gloo Mesh will select
                              matching objects across all namespaces available in the workspace.
                            type: string
                        type: object
                      type: array
                    workspaces:
                      description: the workspaces with the resources to export to
                        or import.
                      items:
                        properties:
                          name:
                            description: |-
                              Optional: Name of the workspace to select.
                              Use * to match name patterns in multiple workspace names.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select workspaces based on their labels
                              The example below select workspaces based on the label `team: backend`:
                              ```yaml
                               - selector:
                                   team: backend
                              ```
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
              options:
                description: Options for configuring the workspace as a whole.
                properties:
                  eastWestGateways:
                    description: |-
                      Selects the ingress gateways in a workspace. If no gateways are selected, defaults to attempting to use
                      istio-eastwestgateway.istio-system as the Istio ingress gateway for "east-west" traffic, which is traffic
                      routed across clusters for federation and virtual destinations.
                    items:
                      properties:
                        hostInfoOverrides:
                          description: |-
                            Host information for an east-west gateway. Can be used to specify a set of routable
                            destinations that proxy traffic back to the east-west gateway selected
                            by the selector. Useful when a load balancer external to the mesh is being
                            used. When using this feature, be careful to ensure that the selectors are
                            granular enough to ensure that the correct HostInfo is mapped to the proper gateway.
                          items:
                            properties:
                              addr:
                                description: |-
                                  Address to be used to direct traffic to instead of the default gateway discovered address.
                                  Can be an IP address or hostname.
                                type: string
                              port:
                                description: Port to be used to direct traffic to
                                  instead of the default gateway discovered port.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            Not required if the Destination only exposes a single port.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: Select east-west gateway
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                    type: array
                  federation:
                    description: |-
                      Federation is a feature which allows Kubernetes Services to directly communicate with each other across clusters
                      using generated hostnames. When enabled, federation will generate a hostname for each Service selected, which is
                      reachable by all network clients in the workspace.
                      Federation allows routes to be created in RouteTables which forward traffic across clusters. These routes will otherwise
                      be treated by Gloo Mesh as errors.
                    properties:
                      enabled:
                        description: enables the federation feature for selected Kubernetes
                          services in the workspace.
                        type: boolean
                      hostSuffix:
                        description: 'Optional: The suffix used for generated hostnames.
                          Hostnames will be generated for each selected service in
                          the format {{ service name }}.{{ service namespace }}.{{
                          service cluster }}.{{ host suffix }}.'
                        type: string
                      ports:
                        description: if provided, expose only selected ports to cross-cluster
                          traffic.
                        items:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        type: array
                      serviceSelector:
                        description: |-
                          Selector for the K8s services that will be exposed to cross-cluster traffic within the Workspace.
                          Federated hostnames will be generated for selected imported services.
                        items:
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                        type: array
                    type: object
                  serviceIsolation:
                    description: |-
                      If Enabled, serviceIsolation will automatically block communication from non-importing workspaces into this one, enforced using mTLS.
                      Setting this to true is equivalent to manually creating an AccessPolicy with the following spec:
                      spec:
                        applyToDestinations: nil
                        config:
                          authn:
                            tlsMode: STRICT
                          authz:
                            authz:
                              allowedClients:
                              - serviceAccountSelector:
                                  workspace: this-workspace
                              - serviceAccountSelector:
                                  workspace: importing-workspace-1 # for each workspace importing this one

                      Applying AccessPolicies to destinations in this workspace will override the default service isolation behavior.
                    properties:
                      enabled:
                        description: |-
                          Automatically enables strict mTLS and blocks any access from non-importing workspaces into any destination in the current workspaces.
                          Default value is disabled.
                        type: boolean
                      trimProxyConfig:
                        description: |-
                          When enabled, proxy config will be trimmed to eliminate unnecessary config updates.
                          In Istio this will be implemented using the Sidecar resource.
                        nullable: true
                        type: boolean
                    type: object
                  virtualDestClientMode:
                    description: |-
                      Optional: Virtual destination client mode determines how VirtualDestinations will be translated.
                      If nil, the default value of auto mode will be used. Any configuration here can be overriden
                      on any individual virtual destination. The settings defined here apply to both user-provided
                      VirtualDestinations and those generated internally when federation is enabled.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - auto
                        - required:
                          - sniRouting
                        - required:
                          - tlsTermination
                    - required:
                      - auto
                    - required:
                      - sniRouting
                    - required:
                      - tlsTermination
                    properties:
                      auto:
                        description: |-
                          The default mode is to use sni routing via tls passthrough at the East/West Gateway to route to services across clusters.
                          In the future, this may change to become smarter (e.g., detect if any pods backing the virtual destination don't have sidecars,
                          if so, then use tls termination so all pods are routeable).
                        maxProperties: 0
                        type: object
                      sniRouting:
                        description: Sni routing mode uses tls passthrough to route
                          traffic to the proper pod (with sidecar) from the East/West
                          Gateway.
                        maxProperties: 0
                        type: object
                      tlsTermination:
                        description: |-
                          Tls termination mode uses tls termination at the East/West Gateway to route traffic to the correct pod.
                          This mode is ideal for Gloo Mesh Gateway, i.e. some backing pods don't have sidecars.
                          Since TLS is terminated at the East/West Gateway, the backing service (if it has a sidecar) will not be able to
                          verify the istio mTLS identity of the originating client; rather it will verify the istio mTLS cert of the East/West Gateway.
                        maxProperties: 0
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the workspace settings
            properties:
              federatedServices:
                description: |-
                  Services federated to this workspace because of this workspacesettings configuration.
                  The GVK of federated_services is core/v1/Service.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              generic:
                properties:
                  message:
                    description: Additional information about the current state of
                      the resource.
                    type: string
                  observedGeneration:
                    description: |-
                      The most recent generation observed in the the object's metadata.
                      If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                      has not processed the most recent version of this object.
                    format: int64
                    type: integer
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in the Gloo
                      Mesh config translation.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedEastWestGateways:
                description: |-
                  Selected east-west gateways determined by the EastWestGatewaySelector
                  The GVK of selected_east_west_gateways is DiscoveredGateway.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspace:
                description: The workspace that this workspacesettings object is configuring.
                properties:
                  cluster:
                    description: the cluster of the object. if the field is omitted,
                      Gloo Mesh will use the same cluster as the parent object containing
                      this reference.
                    type: string
                  name:
                    description: the name of the object
                    type: string
                  namespace:
                    description: the namespace of the object. if the field is omitted,
                      Gloo Mesh will use the same namespace as the parent object containing
                      this reference.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 2decc1014d458448
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: kubernetesclusters.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: KubernetesCluster
    listKind: KubernetesClusterList
    plural: kubernetesclusters
    shortNames:
    - kc
    singular: kubernetescluster
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `KubernetesCluster` defines a Kubernetes cluster that has been registered with Gloo Mesh for management.
              A KubernetesCluster must be created in order to connect the Gloo Mesh Agent
              with the Gloo Mesh Server.
              KubernetesCluster must be deployed to the management cluster in the `gloo-mesh` namespace.
              The name of the KubernetesCluster has to be unique among all managed workload clusters for a
              given Gloo Mesh management plane.
              The name or/and labels of a KubernetesCluster resource can be used in a Workspace resource to determine
              the workload clusters for a given workspace.

              The following example show a simple KubernetesCluster resource named `cluster1` with `cluster.local`
              as its cluster domain:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: KubernetesCluster
              metadata:
                name: cluster1
                namespace: gloo-mesh
              spec:
                clusterDomain: cluster.local
              ```

              The following example adds the region label to the KubernetesCluster resource:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: KubernetesCluster
              metadata:
                name: cluster1
                namespace: gloo-mesh
                labels:
                  region: us-east
              spec:
                clusterDomain: cluster.local
              ```
            properties:
              clusterDomain:
                description: 'Optional: The cluster domain suffix this Cluster is
                  configured with. Defaults to ''cluster.local''.'
                type: string
            type: object
          status:
            description: Reflects the status of the Kubernetes cluster
            properties:
              generic:
                description: Indicates the state of the Gloo Mesh agent connected
                  to the Gloo Mesh Server.
                properties:
                  message:
                    description: Additional information about the current state of
                      the resource.
                    type: string
                  observedGeneration:
                    description: |-
                      The most recent generation observed in the the object's metadata.
                      If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                      has not processed the most recent version of this object.
                    format: int64
                    type: integer
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in the Gloo
                      Mesh config translation.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 35baccbd1408e9d0
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: roottrustpolicies.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RootTrustPolicy
    listKind: RootTrustPolicyList
    plural: roottrustpolicies
    shortNames:
    - rtp
    singular: roottrustpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RootTrustPolicy is used to designate the root of trust, including the trust domain and root certificates used by one or more service meshes.
              A shared RootTrustPolicy is currently required to support communication between workloads and destinations running in different meshes. In the future Gloo Mesh will support cross-mesh connectivity using a Limited Trust model (where participating meshes are permitted to use separate roots of trust).
            properties:
              applyToMeshes:
                description: |-
                  select the meshes where the root of trust will be applied.
                  if left empty, will apply to all Meshes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - istio
                  - required:
                    - istio
                  properties:
                    istio:
                      description: options for selecting istio Mesh control planes.
                      properties:
                        clusterSelector:
                          additionalProperties:
                            type: string
                          description: |-
                            match the labels of the cluster where istiod is deployed.
                            omit to select across all clusters.
                          type: object
                        namespace:
                          description: |-
                            match the name of the namespace where istiod is deployed.
                            omit to select across all namespaces.
                          type: string
                        revision:
                          description: |-
                            istio.io/revision of Istio to select. regex supported.
                            omit to select across all revisions.
                          type: string
                        selector:
                          additionalProperties:
                            type: string
                          description: |-
                            select via the labels of the istiod deployment.
                            omit to select across all labels.
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the root of trust to apply to the selected
                  meshes.
                oneOf:
                - not:
                    anyOf:
                    - properties:
                        mgmtServerCa:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - generated
                              - required:
                                - secretRef
                          - required:
                            - generated
                          - required:
                            - secretRef
                      required:
                      - mgmtServerCa
                    - properties:
                        agentCa:
                          oneOf:
                          - not:
                              anyOf:
                              - properties:
                                  vault:
                                    allOf:
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - caBundle
                                          - required:
                                            - caSecretRef
                                          - required:
                                            - caLocalPath
                                      - required:
                                        - caBundle
                                      - required:
                                        - caSecretRef
                                      - required:
                                        - caLocalPath
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - tokenSecretRef
                                          - properties:
                                              kubernetesAuth:
                                                oneOf:
                                                - not:
                                                    anyOf:
                                                    - required:
                                                      - serviceAccountRef
                                                    - required:
                                                      - mountedSaPath
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            required:
                                            - kubernetesAuth
                                      - required:
                                        - tokenSecretRef
                                      - properties:
                                          kubernetesAuth:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        required:
                                        - kubernetesAuth
                                required:
                                - vault
                          - properties:
                              vault:
                                allOf:
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - caBundle
                                      - required:
                                        - caSecretRef
                                      - required:
                                        - caLocalPath
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - tokenSecretRef
                                      - properties:
                                          kubernetesAuth:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        required:
                                        - kubernetesAuth
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                            required:
                            - vault
                      required:
                      - agentCa
                - properties:
                    mgmtServerCa:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - generated
                          - required:
                            - secretRef
                      - required:
                        - generated
                      - required:
                        - secretRef
                  required:
                  - mgmtServerCa
                - properties:
                    agentCa:
                      oneOf:
                      - not:
                          anyOf:
                          - properties:
                              vault:
                                allOf:
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - caBundle
                                      - required:
                                        - caSecretRef
                                      - required:
                                        - caLocalPath
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - tokenSecretRef
                                      - properties:
                                          kubernetesAuth:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        required:
                                        - kubernetesAuth
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                            required:
                            - vault
                      - properties:
                          vault:
                            allOf:
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                              - required:
                                - tokenSecretRef
                              - properties:
                                  kubernetesAuth:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                required:
                                - kubernetesAuth
                        required:
                        - vault
                  required:
                  - agentCa
                properties:
                  agentCa:
                    description: |-
                      Configures an Intermediate Certificate Authority which selected meshes will use to generate intermediate certificates.
                      The CA being used must be configured to generate the intermediate certificates.
                    properties:
                      vault:
                        description: Use vault as the intermediate CA source
                        properties:
                          caBundle:
                            description: Inline CA bytes
                            format: binary
                            type: string
                          caLocalPath:
                            description: Path to a local file containing the CA bytes
                            type: string
                          caPath:
                            description: |-
                              `ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                              "my_pki_mount/sign/my-role-name".
                            type: string
                          caSecretRef:
                            description: |-
                              Reference to a secret containing the CA bytes.
                              The CA should be stored by the key `root-cert.pem`
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                          csrPath:
                            description: |-
                              `csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:
                              "my_pki_mount/intermediate/generate/exported".
                              "exported" is necessary here as istio needs access to the private key
                              See vault docs here: https://www.vaultproject.io/api-docs/secret/pki#parameters-4
                            type: string
                          kubernetesAuth:
                            description: |-
                              Kubernetes authenticates with Vault by passing the ServiceAccount
                              token stored in the named Secret resource to the Vault server.
                            properties:
                              mountPath:
                                description: |-
                                  The Vault mountPath here is the mount path to use when authenticating with
                                  Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                  `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                  default value "/v1/auth/kubernetes" will be used.
                                type: string
                              mountedSaPath:
                                description: |-
                                  File System path to grab the service account token from.
                                  Defaults to /var/run/secrets/kubernetes.io/serviceaccount
                                type: string
                              role:
                                description: |-
                                  A required field containing the Vault Role to assume. A Role binds a
                                  Kubernetes ServiceAccount with a set of Vault policies.
                                type: string
                              secretTokenKey:
                                description: |-
                                  Key to search for the sa_token
                                  Default to "token"
                                type: string
                              serviceAccountRef:
                                description: Reference to service account, other than
                                  the one mounted to the current pod.
                                properties:
                                  name:
                                    description: name of the resource being referenced
                                    type: string
                                  namespace:
                                    description: namespace of the resource being referenced
                                    type: string
                                type: object
                            type: object
                          namespace:
                            description: |-
                              Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                              More about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)
                            type: string
                          server:
                            description: 'Server is the connection address for the
                              Vault server, e.g: "https://vault.example.com:8200".'
                            type: string
                          tokenSecretRef:
                            description: TokenSecretRef authenticates with Vault by
                              presenting a token.
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                        type: object
                    type: object
                  autoRestartPods:
                    description: |-
                      This setting specifies whether or not workload pods should be automatically restarted
                      upon completion of a successful certificate issuance.
                    type: boolean
                  intermediateCertOptions:
                    description: Configuration options for generated intermediate
                      certs.
                    properties:
                      orgName:
                        description: Root cert organization name. Defaults to "gloo-mesh".
                        type: string
                      rsaKeySizeBytes:
                        description: Size in bytes of the root cert's private key.
                          Defaults to 4096.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      secretRotationGracePeriodRatio:
                        description: |-
                          The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                          we would refresh 6 minutes before expiration
                        format: float
                        type: number
                      ttlDays:
                        description: Number of days before root cert expires. Defaults
                          to 365.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  mgmtServerCa:
                    description: |-
                      Configure a Root Certificate Authority which will be shared by all Meshes associated with this RootTrustPolicy.
                      If this is not provided, a self-signed certificate will be generated by Gloo Mesh.
                    properties:
                      generated:
                        description: Generate a self-signed root certificate with
                          the given options.
                        properties:
                          orgName:
                            description: Root cert organization name. Defaults to
                              "gloo-mesh".
                            type: string
                          rsaKeySizeBytes:
                            description: Size in bytes of the root cert's private
                              key. Defaults to 4096.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          secretRotationGracePeriodRatio:
                            description: |-
                              The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                              we would refresh 6 minutes before expiration
                            format: float
                            type: number
                          ttlDays:
                            description: Number of days before root cert expires.
                              Defaults to 365.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      secretRef:
                        description: |-
                          Name of a Kubernetes Secret in the same namespace as the RootTrustPolicy containing the root certificate authority.
                          Provided certificates must conform to a specified format, [documented here]({{< versioned_link_path fromRoot="/setup/prod/certs/cert-architecture/#required-certificates" >}}).
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the RootTrustPolicy
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this object.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e200bd1534e808f0
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: extauthservers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExtAuthServer
    listKind: ExtAuthServerList
    plural: extauthservers
    shortNames:
    - ess
    singular: extauthserver
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ExtAuthServer is used configure the backend server used to enforce ExtAuthPolicies.
              All ExtAuthPolicies in a workspace require an ExtAuthServer to in order to function.
              If no ExtAuthServer is provided, a default configuration will be used.
              Currently Gloo Mesh only supports a single ExtAuthServer per workspace.
            properties:
              clearRouteCache:
                description: |-
                  Clears route cache in order to allow the external authorization service to correctly affect
                  routing decisions. Filter clears all cached routes when:

                  1. The field is set to *true*.

                  2. The status returned from the authorization service is a HTTP 200 or gRPC 0.

                  3. At least one *authorization response header* is added to the client request, or is used for
                  altering another client request header.
                type: boolean
              destinationServer:
                description: |-
                  Select the destination of the external auth service for Gloo to use to authenticate traffic, such as the Gloo external auth service or your own external auth service.
                  Make sure to select the correct cluster and namespace of the external auth service.
                  For example, although you create this ExtAuthServer resource in the management cluster in most cases, remember that the Gloo external auth service runs in each workload cluster.
                  If omitted, Gloo looks for a service with the name 'extauth' in the agent namespace in each cluster where the external auth service is deployed.
                properties:
                  kind:
                    description: the kind of destination being selected. defaults
                      to Kubernetes Service.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted.
                      required if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects
                          being targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  ref:
                    description: reference to the destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: select a subset of the destination's endpoints for
                      routing based on their labels.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              failureModeAllow:
                description: |-
                  In case of a failure or timeout querying the auth server, normally a request is denied.
                  if this is set to true, the request will be allowed.
                type: boolean
              httpService:
                description: If this is set, communication to the upstream will be
                  via HTTP and not GRPC.
                properties:
                  pathPrefix:
                    description: Sets a prefix to the value of authorization request
                      header *Path*.
                    type: string
                  request:
                    properties:
                      allowedHeaders:
                        description: |-
                          These headers will be copied from the incoming request to the request going
                          to the auth server. Note that in addition to the user's supplied matchers:

                          1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.

                          2. *Content-Length* will be set to 0 and the request to the authorization service will not have
                          a message body.
                        items:
                          type: string
                        type: array
                      headersToAdd:
                        additionalProperties:
                          type: string
                        description: |-
                          These headers that will be included to the request to authorization service. Note that
                          client request of the same key will be overridden.
                        type: object
                    type: object
                  response:
                    properties:
                      allowedClientHeaders:
                        description: |-
                          When this. is set, authorization response headers that will be added to the client's response when auth request is denied.
                          Note that when this list is *not* set, all the authorization response headers, except *Authority
                          (Host)* will be in the response to the client. When a header is included in this list, *Path*,
                          *Status*, *Content-Length*, *WWW-Authenticate* and *Location* are automatically added.
                        items:
                          type: string
                        type: array
                      allowedUpstreamHeaders:
                        description: |-
                          When this is set, authorization response headers that have a will be added to the original client request and sent to the upstream.
                          Note that coexistent headers will be overridden.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              requestBody:
                description: Set this if you also want to send the body of the request,
                  and not just the headers.
                properties:
                  allowPartialMessage:
                    description: |-
                      When this field is true, Envoy will buffer the message until *max_request_bytes* is reached.
                      The authorization request will be dispatched and no 413 HTTP error will be returned by the
                      filter.
                    type: boolean
                  maxRequestBytes:
                    description: |-
                      Sets the maximum size of a message body that the filter will hold in memory. Envoy will return
                      *HTTP 413* and will *not* initiate the authorization process when buffer reaches the number
                      set in this field. Note that this setting will have precedence over failure_mode_allow.
                      Defaults to 4KB.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  packAsBytes:
                    description: When this field is true, Envoy will send the body
                      sent to the external authorization service with raw bytes.
                    type: boolean
                type: object
              requestTimeout:
                description: Timeout for the ext auth service to respond. Defaults
                  to 100ms
                type: string
              statPrefix:
                description: |-
                  Optional additional prefix to use when emitting statistics.
                  This allows to distinguish emitted statistics between configured ext_authz filters in an HTTP filter chain.
                type: string
              statusOnError:
                description: |-
                  Sets the HTTP status that is returned to the client when there is a network error between the
                  filter and the authorization server. The default status is HTTP 403 Forbidden.
                  If set, this must be one of the following:
                  - 100
                  - 200 201 202 203 204 205 206 207 208 226
                  - 300 301 302 303 304 305 307 308
                  - 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 421 422 423 424 426 428 429 431
                  - 500 501 502 503 504 505 506 507 508 510 511
                maximum: 4294967295
                minimum: 0
                type: integer
              transportApiVersion:
                description: |-
                  Determines the API version for the `ext_authz` transport protocol that will be used by Envoy
                  to communicate with the auth server. Defaults to `V3`. For more info, see the `transport_api_version` field
                  [here](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/ext_authz/v3/ext_authz.proto#extensions-filters-http-ext-authz-v3-extauthz).
                enum:
                - GLOO_MESH_AUTO
                - ENVOY_AUTO
                - V3
                type: string
            type: object
          status:
            description: reflects the status of the ExtAuthServer
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this object.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: d1fdd58c324fa0
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitserversettings.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitServerSettings
    listKind: RateLimitServerSettingsList
    plural: ratelimitserversettings
    shortNames:
    - rlss
    singular: ratelimitserversettings
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitServerSettings is an optional resource used to configure how a client (i.e. a sidecar or gateway proxy) connects to a rate limit server.
              If no RateLimitServerSetting is selected in a RatelimitPolicy, a default configuration will be used.
            properties:
              denyOnFail:
                description: |-
                  Behaviour in case the rate limiting service does not respond back.
                  When it is set to true, Envoy will not allow traffic in case of communication failure between rate limiting service and the proxy.
                  Defaults to false
                type: boolean
              destinationServer:
                description: |-
                  The ratelimit service to ask about ratelimit decisions.
                  The provided reference will be used to search for a service of the given name/namespace on the cluster
                  the traffic policy is applied on

                  If omitted, Gloo Mesh will search for a service with the name rate-limiter in the gloo-mesh namespace.
                properties:
                  kind:
                    description: the kind of destination being selected. defaults
                      to Kubernetes Service.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted.
                      required if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects
                          being targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  ref:
                    description: reference to the destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: select a subset of the destination's endpoints for
                      routing based on their labels.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              requestTimeout:
                description: |-
                  The timeout in milliseconds for the rate limit service RPC. Defaults to 100ms.
                  Behaviour after request timeout is reached is set by `deny_on_fail`.
                type: string
            type: object
          status:
            description: The current status of the `RateLimitServerSettings`.
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the RateLimitServerSettings metadata.
                  If the `observedGeneration` does not match `metadata.generation`,
                  Gloo Mesh has not processed the most recent version of this resource.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 8eb8bedead764e5e
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitserverconfigs.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitServerConfig
    listKind: RateLimitServerConfigList
    plural: ratelimitserverconfigs
    shortNames:
    - rlsc
    singular: ratelimitserverconfig
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitServerConfig is used to configure the ratelimit rules enforced by the server.
              All RateLimitPolicy resources in a workspace require a RateLimitServerConfig to in order to configure ratelimit rules.
              If no RateLimitServerConfig is provided, no ratelimit rules will be enforced.
            oneOf:
            - not:
                anyOf:
                - required:
                  - raw
            - required:
              - raw
            properties:
              destinationServers:
                description: Required field to specify the ratelimit servers that
                  will enforce the defined descriptors.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              raw:
                description: Define a policy using the raw configuration format used
                  by the ratelimit server.
                properties:
                  descriptors:
                    description: |-
                      The descriptors that will be applied to the server.
                      {{/* Note: validation of this field disabled because it slows down cue tremendously*/}}
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  setDescriptors:
                    description: |-
                      The set descriptors that will be applied to the server.
                      {{/* Note: validation of this field disabled because it slows down cue tremendously*/}}
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
            type: object
          status:
            description: The current status of the `RateLimitServerConfig`.
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the RateLimitServerConfig metadata.
                  If the `observedGeneration` does not match `metadata.generation`,
                  Gloo Mesh has not processed the most recent version of this resource.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 595559d494b86b51
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: dashboards.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Dashboard
    listKind: DashboardList
    plural: dashboards
    singular: dashboard
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `Dashboard` describes the settings for the Gloo Mesh Enterprise dashboard.
              Currently, this resource is only used to secure the Gloo Mesh Enterprise Dashboard by
              requiring authentication with an OpenID Connect identity provider.
              Users accessing the dashboard will be required to authenticate with the OIDC provider
              and all requests to retrieve data from the API will also be authenticated.

              The following example sets up OIDC authentication:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Dashboard
              metadata:
                name: settings
                namespace: gloo-mesh
              spec:
                authn:
                  oidc:
                    appUrl: https://localhost:8080
                    clientId: $CLIENT_ID
                    clientSecretName: dashboard
                    issuerUrl: https://accounts.google.com
                 ```
            properties:
              authn:
                description: Configuration used to authenticate incoming requests.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - oidc
                - required:
                  - oidc
                properties:
                  oidc:
                    properties:
                      appUrl:
                        description: URL to redirect to after successful auth.
                        type: string
                      authEndpointQueryParams:
                        additionalProperties:
                          type: string
                        description: |-
                          Extra query parameters to apply to the authorization request to the
                          identity provider. For example, using the PKCE flow
                          (https://www.oauth.com/oauth2-servers/pkce/authorization-request/) by
                          setting `code_challenge` and `code_challenge_method`.
                        type: object
                      caCertConfigmapName:
                        description: |-
                          A name of a config map containing root cert to use when talking with
                          the OIDC provider. The config map must contain the a key named "ca.crt" with PEM encoded
                          CA.
                        type: string
                      callbackPath:
                        description: Path to handle the OIDC callback.
                        type: string
                      clientId:
                        description: The client ID from the issuer
                        type: string
                      clientSecretName:
                        description: The client secret from the issuer
                        type: string
                      discoveryOverride:
                        description: |-
                          Ensure that certain values are set regardless of what the OIDC
                          provider returns.
                        properties:
                          authEndpoint:
                            description: URL of the provider authorization endpoint.
                            type: string
                          authMethods:
                            description: |-
                              List of client authentication methods supported by the provider
                              token endpoint.
                            items:
                              type: string
                            type: array
                          claims:
                            description: List of claim types that the provider supports.
                            items:
                              type: string
                            type: array
                          idTokenAlgs:
                            description: |-
                              List of json web signature signing algorithms that the provider
                              supports for encoding claims in a JWT.
                            items:
                              type: string
                            type: array
                          jwksUri:
                            description: URL of the provider JSON web key set.
                            type: string
                          responseTypes:
                            description: List of response types that the provider
                              supports.
                            items:
                              type: string
                            type: array
                          scopes:
                            description: List of scope values that the provider supports.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: List of subject identifier types that the
                              provider supports.
                            items:
                              type: string
                            type: array
                          tokenEndpoint:
                            description: URL of the provider token endpoint.
                            type: string
                        type: object
                      discoveryPollInterval:
                        description: How often to poll the OIDC issuer for new configuration.
                        type: string
                      issuerUrl:
                        description: |-
                          The url of the issuer. We will look for OIDC information in:
                            {{ issuerURL }}/.well-known/openid-configuration
                        type: string
                      jwksCacheRefreshPolicy:
                        description: |-
                          If a user executes a request with a key that is not found in the
                          JWKS, it could be that the keys have rotated on the remote source,
                          and not yet in the local cache. This policy lets you define the
                          behavior for how to refresh the local cache during a request where an
                          invalid key is provided
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - never
                            - required:
                              - always
                            - required:
                              - maxIdpReqPerPollingInterval
                        - required:
                          - never
                        - required:
                          - always
                        - required:
                          - maxIdpReqPerPollingInterval
                        properties:
                          always:
                            description: |-
                              If a key is not in the cache, fetch the most recent keys from
                              the IdP and update the cache. NOTE: This should only be done
                              in trusted environments, since missing keys will each trigger
                              a request to the IdP. Using this in an environment exposed to
                              the internet will allow malicious agents to execute a DDoS
                              attack by spamming protected endpoints with tokens signed by
                              invalid keys.
                            maxProperties: 0
                            type: object
                          maxIdpReqPerPollingInterval:
                            description: |-
                              If a key is not in the cache, fetch the most recent keys from
                              the IdP and update the cache. This value sets the number of
                              requests to the IdP per polling interval. If that limit is
                              exceeded, we will stop fetching from the IdP for the
                              remainder of the polling interval.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          never:
                            description: |-
                              Never refresh the local JWKS cache on demand. If a key is not
                              in the cache, it is assumed to be malicious. This is the
                              default policy since we assume that IdPs publish keys before
                              they rotate them, and frequent polling finds the newest keys.
                            maxProperties: 0
                            type: object
                        type: object
                      logoutPath:
                        description: Path used to logout. If not provided, logout
                          will be disabled.
                        type: string
                      scopes:
                        description: Scopes to request in addition to 'openid'.
                        items:
                          type: string
                        type: array
                      session:
                        description: Configuration for session storage.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - cookie
                            - required:
                              - redis
                        - required:
                          - cookie
                        - required:
                          - redis
                        properties:
                          cookie:
                            description: Store all session data in the cookie itself
                            type: object
                          cookieOptions:
                            description: Set-Cookie options
                            properties:
                              domain:
                                description: Domain of the cookie.
                                type: string
                              maxAge:
                                description: |-
                                  Max age of the cookie. If unset, the default of 30 days will be
                                  used. To disable expiration, set explicitly to 0.
                                maximum: 4294967295
                                minimum: 0
                                nullable: true
                                type: integer
                              notSecure:
                                description: |-
                                  Use an insecure cookie.
                                  Should only be used for testing and in trusted environments.
                                type: boolean
                              path:
                                description: |-
                                  Path of the cookie. Defaults to "/", set to "" to disable the
                                  option.
                                nullable: true
                                type: string
                            type: object
                          redis:
                            description: Store the session data in a Redis instance.
                            properties:
                              allowRefreshing:
                                description: |-
                                  When set, refresh expired id-tokens using the refresh-token. Defaults to true.
                                  Explicitly set to false to disable refreshing.
                                nullable: true
                                type: boolean
                              cookieName:
                                description: Cookie name to set and store the session
                                  id. If empty the default "__session" is used.
                                type: string
                              db:
                                description: db to use. can leave unset for db 0.
                                format: int32
                                type: integer
                              host:
                                description: address of the redis. can be address:port
                                  or unix://path/to/unix.sock
                                type: string
                              keyPrefix:
                                description: Key prefix inside redis
                                type: string
                              poolSize:
                                description: |-
                                  size of the connection pool. can leave unset for default.
                                  defaults to 10 connections per every CPU
                                format: int32
                                type: integer
                            type: object
                        type: object
                      tokenEndpointQueryParams:
                        additionalProperties:
                          type: string
                        description: |-
                          Extra query parameters to apply to the token request to the identity
                          provider. For example, using the PKCE flow
                          (https://www.oauth.com/oauth2-servers/pkce/authorization-request/) by
                          setting `code_challenge` and `code_challenge_method`.
                        type: object
                      userMapping:
                        description: |-
                          If set, the ID token will used to infer user identity, that can be used to make
                          authorization decisions.
                          If not specified, no authorization will be made.
                        properties:
                          groupsClaim:
                            description: |-
                              If specified, causes the OIDCAuthenticator to try to populate the user's
                              groups with an ID Token field. If the GroupsClaim field is present in an ID Token the value
                              must be a string or list of strings.
                            type: string
                          groupsPrefix:
                            description: |-
                              If specified, causes claims mapping to group names to be prefixed with the
                              value. A value "oidc:" would result in groups like "oidc:engineering" and "oidc:marketing".
                            type: string
                          usernameClaim:
                            description: The JWT field to use as the user's username.
                            type: string
                          usernamePrefix:
                            description: |-
                              If specified, causes claims mapping to username to be prefix with
                              the provided value. A value "oidc:" would result in usernames like "oidc:john".
                            type: string
                        type: object
                    type: object
                type: object
              authz:
                description: Configuration used to authorize incoming requests.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - multiClusterRbac
                - required:
                  - multiClusterRbac
                properties:
                  multiClusterRbac:
                    description: |-
                      Enable multi cluster RBAC. When this is enabled, Gloo Mesh Enterprise will use RBAC resources
                      from managed clusters to determine if users are allowed to see resources in the dashbaord.
                      For this to work, the dashboard and the kubernetes clusters need to have the same identity
                      source (i.e. OIDC with the same user and group claims).
                      When using OIDC, make sure to configure the userMapping field.
                    type: object
                type: object
            type: object
          status:
            properties:
              errors:
                description: Any errors encountered while processing Settings object.
                items:
                  type: string
                type: array
              observedGeneration:
                description: |-
                  The most recent generation observed in the the Dashboard metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this resource.
                format: int64
                type: integer
              state:
                description: |-
                  The state of the overall resource.
                  It will only show accepted if no processing errors encountered.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 7befb4b1e12986b3
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: istiolifecyclemanagers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: IstioLifecycleManager
    listKind: IstioLifecycleManagerList
    plural: istiolifecyclemanagers
    shortNames:
    - ilm
    singular: istiolifecyclemanager
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              installations:
                description: |-
                  List of Istio control plane installations.
                  Any components that are NOT related to the control plane will be ignored
                items:
                  properties:
                    clusters:
                      description: The clusters where the Istio Control Plane should
                        be installed.
                      items:
                        properties:
                          defaultRevision:
                            description: |-
                              Optional: defaults to false
                              When true this installation will be used as the Istio Default Revision for the selected cluster(s)
                              Resources with the istio-injection=true label entry will use this revision. Updating this can be useful for switching over Canary deployments.
                            type: boolean
                          name:
                            description: |-
                              The name of the cluster that Istio should be installed in. This should
                              match the registered cluster name.
                            type: string
                          trustDomain:
                            description: |-
                              [Optional] The trust domain value that should be set for this cluster's
                              Istio installations. This value will be set in the installation's mesh
                              config. (See https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1)
                              Defaults to the cluster's name.
                            type: string
                        type: object
                      type: array
                    istioOperatorSpec:
                      description: |-
                        Spec for the IstioOperator that should be applied.
                        See https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/
                      properties:
                        addonComponents:
                          additionalProperties:
                            properties:
                              chartPath:
                                description: Chart path for addon components.
                                type: string
                              enabled:
                                description: Selects whether this component is installed.
                                nullable: true
                                type: boolean
                              k8s:
                                description: Kubernetes resource spec.
                                properties:
                                  affinity:
                                    description: |-
                                      k8s affinity.
                                      [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  env:
                                    description: |-
                                      Deployment environment variables.
                                      [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  hpaSpec:
                                    description: |-
                                      k8s HorizontalPodAutoscaler settings.
                                      [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  imagePullPolicy:
                                    description: |-
                                      k8s imagePullPolicy.
                                      [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                    type: string
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s nodeSelector.
                                      [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                    type: object
                                  overlays:
                                    description: Overlays for k8s resources in rendered
                                      manifests.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  podAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s pod annotations.
                                      [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                    type: object
                                  podDisruptionBudget:
                                    description: |-
                                      k8s PodDisruptionBudget settings.
                                      [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  priorityClassName:
                                    description: |-
                                      k8s priority_class_name. Default for all resources unless overridden.
                                      [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                    type: string
                                  readinessProbe:
                                    description: |-
                                      k8s readinessProbe settings.
                                      [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                      k8s.io.api.core.v1.Probe readiness_probe = 9;
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  replicaCount:
                                    description: |-
                                      k8s Deployment replicas setting.
                                      [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                  resources:
                                    description: |-
                                      k8s resources settings.
                                      [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  securityContext:
                                    description: |-
                                      k8s pod security context
                                      [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  service:
                                    description: |-
                                      k8s Service settings.
                                      [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  serviceAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s service annotations.
                                      [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                    type: object
                                  strategy:
                                    description: |-
                                      k8s deployment strategy.
                                      [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  tolerations:
                                    description: |-
                                      k8s toleration
                                      [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  volumeMounts:
                                    description: |-
                                      k8s volumeMounts
                                      VolumeMounts defines the collection of VolumeMount to inject into containers.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  volumes:
                                    description: |-
                                      k8s volume
                                      [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                      Volumes defines the collection of Volume to inject into the pod.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                type: object
                              namespace:
                                description: Namespace for the component.
                                type: string
                              schema:
                                description: Optional schema to validate spec against.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              spec:
                                description: Arbitrary install time configuration
                                  for the component.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          description: |-
                            Deprecated.
                            Users should manage the installation of addon components on their own.
                            Refer to samples/addons for demo installation of addon components.
                          type: object
                        components:
                          description: |-
                            Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                            component.
                          properties:
                            base:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                              type: object
                            cni:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top
                                    level hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: Arbitrary install time configuration
                                    for the component.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top
                                    level tag setting).
                                  type: string
                              type: object
                            egressGateways:
                              items:
                                properties:
                                  enabled:
                                    description: Selects whether this gateway is installed.
                                    nullable: true
                                    type: boolean
                                  hub:
                                    description: Hub for the component (overrides
                                      top level hub setting).
                                    type: string
                                  k8s:
                                    description: Kubernetes resource spec.
                                    properties:
                                      affinity:
                                        description: |-
                                          k8s affinity.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      env:
                                        description: |-
                                          Deployment environment variables.
                                          [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      hpaSpec:
                                        description: |-
                                          k8s HorizontalPodAutoscaler settings.
                                          [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      imagePullPolicy:
                                        description: |-
                                          k8s imagePullPolicy.
                                          [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                        type: string
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s nodeSelector.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                        type: object
                                      overlays:
                                        description: Overlays for k8s resources in
                                          rendered manifests.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      podAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s pod annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      podDisruptionBudget:
                                        description: |-
                                          k8s PodDisruptionBudget settings.
                                          [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      priorityClassName:
                                        description: |-
                                          k8s priority_class_name. Default for all resources unless overridden.
                                          [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                        type: string
                                      readinessProbe:
                                        description: |-
                                          k8s readinessProbe settings.
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                          k8s.io.api.core.v1.Probe readiness_probe = 9;
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      replicaCount:
                                        description: |-
                                          k8s Deployment replicas setting.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      resources:
                                        description: |-
                                          k8s resources settings.
                                          [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      securityContext:
                                        description: |-
                                          k8s pod security context
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      service:
                                        description: |-
                                          k8s Service settings.
                                          [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      serviceAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s service annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      strategy:
                                        description: |-
                                          k8s deployment strategy.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tolerations:
                                        description: |-
                                          k8s toleration
                                          [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumeMounts:
                                        description: |-
                                          k8s volumeMounts
                                          VolumeMounts defines the collection of VolumeMount to inject into containers.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumes:
                                        description: |-
                                          k8s volume
                                          [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                          Volumes defines the collection of Volume to inject into the pod.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                    type: object
                                  label:
                                    additionalProperties:
                                      type: string
                                    description: Labels for the gateway.
                                    type: object
                                  name:
                                    description: Name for the gateway.
                                    type: string
                                  namespace:
                                    description: Namespace for the gateway.
                                    type: string
                                  tag:
                                    description: Tag for the component (overrides
                                      top level tag setting).
                                    type: string
                                type: object
                              type: array
                            ingressGateways:
                              items:
                                properties:
                                  enabled:
                                    description: Selects whether this gateway is installed.
                                    nullable: true
                                    type: boolean
                                  hub:
                                    description: Hub for the component (overrides
                                      top level hub setting).
                                    type: string
                                  k8s:
                                    description: Kubernetes resource spec.
                                    properties:
                                      affinity:
                                        description: |-
                                          k8s affinity.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      env:
                                        description: |-
                                          Deployment environment variables.
                                          [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      hpaSpec:
                                        description: |-
                                          k8s HorizontalPodAutoscaler settings.
                                          [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      imagePullPolicy:
                                        description: |-
                                          k8s imagePullPolicy.
                                          [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                        type: string
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s nodeSelector.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                        type: object
                                      overlays:
                                        description: Overlays for k8s resources in
                                          rendered manifests.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      podAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s pod annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      podDisruptionBudget:
                                        description: |-
                                          k8s PodDisruptionBudget settings.
                                          [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      priorityClassName:
                                        description: |-
                                          k8s priority_class_name. Default for all resources unless overridden.
                                          [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                        type: string
                                      readinessProbe:
                                        description: |-
                                          k8s readinessProbe settings.
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                          k8s.io.api.core.v1.Probe readiness_probe = 9;
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      replicaCount:
                                        description: |-
                                          k8s Deployment replicas setting.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      resources:
                                        description: |-
                                          k8s resources settings.
                                          [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      securityContext:
                                        description: |-
                                          k8s pod security context
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      service:
                                        description: |-
                                          k8s Service settings.
                                          [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      serviceAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s service annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      strategy:
                                        description: |-
                                          k8s deployment strategy.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tolerations:
                                        description: |-
                                          k8s toleration
                                          [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumeMounts:
                                        description: |-
                                          k8s volumeMounts
                                          VolumeMounts defines the collection of VolumeMount to inject into containers.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumes:
                                        description: |-
                                          k8s volume
                                          [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                          Volumes defines the collection of Volume to inject into the pod.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                    type: object
                                  label:
                                    additionalProperties:
                                      type: string
                                    description: Labels for the gateway.
                                    type: object
                                  name:
                                    description: Name for the gateway.
                                    type: string
                                  namespace:
                                    description: Namespace for the gateway.
                                    type: string
                                  tag:
                                    description: Tag for the component (overrides
                                      top level tag setting).
                                    type: string
                                type: object
                              type: array
                            istiodRemote:
                              description: Remote cluster using an external control
                                plane.
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top
                                    level hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: Arbitrary install time configuration
                                    for the component.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top
                                    level tag setting).
                                  type: string
                              type: object
                            pilot:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top
                                    level hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: Arbitrary install time configuration
                                    for the component.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top
                                    level tag setting).
                                  type: string
                              type: object
                          type: object
                        defaultRevision:
                          description: |-
                            Identify whether this revision is the default revision for the cluster
                            This option is currently experimental.
                          type: boolean
                        hub:
                          description: Root for docker image paths e.g. `docker.io/istio`
                          type: string
                        installPackagePath:
                          description: |-
                            Path for the install package. e.g.

                            * /tmp/istio-installer/nightly (local file path)
                          type: string
                        meshConfig:
                          description: Config used by control plane components internally.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        namespace:
                          description: |-
                            Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                            as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                            a custom namespace.
                            If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                          type: string
                        profile:
                          description: |-
                            Path or name for the profile e.g.

                            * minimal (looks in profiles dir for a file called minimal.yaml)
                            * /tmp/istio/install/values/custom/custom-install.yaml (local file path)

                            default profile is used if this field is unset.
                          type: string
                        resourceSuffix:
                          description: |-
                            $hide_from_docs
                            Resource suffix is appended to all resources installed by each component.
                            Never implemented; replaced by revision.
                          type: string
                        revision:
                          description: |-
                            Identify the revision this installation is associated with.
                            This option is currently experimental.
                          type: string
                        tag:
                          description: Version tag for docker images e.g. `1.7.2`
                          type: string
                        unvalidatedValues:
                          description: Unvalidated overrides for default `values.yaml`.
                            Used for custom templates where new parameters are added.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        values:
                          description: |-
                            Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                            See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                            Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                            includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    revision:
                      description: |-
                        Istio Revsion that will be used to represent this installation.
                        Resources that want to leverage this installation will need to supply the revision as the following label value istio.io/rev.
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              clusters:
                additionalProperties:
                  properties:
                    installations:
                      additionalProperties:
                        properties:
                          message:
                            description: A human readable message about the current
                              state of the IstioInstallationInstance.
                            type: string
                          observedOperator:
                            description: operator that is currently deployed for this
                              revision
                            properties:
                              addonComponents:
                                additionalProperties:
                                  properties:
                                    chartPath:
                                      description: Chart path for addon components.
                                      type: string
                                    enabled:
                                      description: Selects whether this component
                                        is installed.
                                      nullable: true
                                      type: boolean
                                    k8s:
                                      description: Kubernetes resource spec.
                                      properties:
                                        affinity:
                                          description: |-
                                            k8s affinity.
                                            [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        env:
                                          description: |-
                                            Deployment environment variables.
                                            [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        hpaSpec:
                                          description: |-
                                            k8s HorizontalPodAutoscaler settings.
                                            [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        imagePullPolicy:
                                          description: |-
                                            k8s imagePullPolicy.
                                            [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                          type: string
                                        nodeSelector:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s nodeSelector.
                                            [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                          type: object
                                        overlays:
                                          description: Overlays for k8s resources
                                            in rendered manifests.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        podAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s pod annotations.
                                            [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                          type: object
                                        podDisruptionBudget:
                                          description: |-
                                            k8s PodDisruptionBudget settings.
                                            [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        priorityClassName:
                                          description: |-
                                            k8s priority_class_name. Default for all resources unless overridden.
                                            [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                          type: string
                                        readinessProbe:
                                          description: |-
                                            k8s readinessProbe settings.
                                            [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                            k8s.io.api.core.v1.Probe readiness_probe = 9;
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        replicaCount:
                                          description: |-
                                            k8s Deployment replicas setting.
                                            [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        resources:
                                          description: |-
                                            k8s resources settings.
                                            [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        securityContext:
                                          description: |-
                                            k8s pod security context
                                            [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        service:
                                          description: |-
                                            k8s Service settings.
                                            [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        serviceAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s service annotations.
                                            [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                          type: object
                                        strategy:
                                          description: |-
                                            k8s deployment strategy.
                                            [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        tolerations:
                                          description: |-
                                            k8s toleration
                                            [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        volumeMounts:
                                          description: |-
                                            k8s volumeMounts
                                            VolumeMounts defines the collection of VolumeMount to inject into containers.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        volumes:
                                          description: |-
                                            k8s volume
                                            [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                            Volumes defines the collection of Volume to inject into the pod.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                      type: object
                                    namespace:
                                      description: Namespace for the component.
                                      type: string
                                    schema:
                                      description: Optional schema to validate spec
                                        against.
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: Arbitrary install time configuration
                                        for the component.
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                description: |-
                                  Deprecated.
                                  Users should manage the installation of addon components on their own.
                                  Refer to samples/addons for demo installation of addon components.
                                type: object
                              components:
                                description: |-
                                  Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                                  component.
                                properties:
                                  base:
                                    properties:
                                      enabled:
                                        description: Selects whether this component
                                          is installed.
                                        nullable: true
                                        type: boolean
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources
                                              in rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                    type: object
                                  cni:
                                    properties:
                                      enabled:
                                        description: Selects whether this component
                                          is installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources
                                              in rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: Arbitrary install time configuration
                                          for the component.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  egressGateways:
                                    items:
                                      properties:
                                        enabled:
                                          description: Selects whether this gateway
                                            is installed.
                                          nullable: true
                                          type: boolean
                                        hub:
                                          description: Hub for the component (overrides
                                            top level hub setting).
                                          type: string
                                        k8s:
                                          description: Kubernetes resource spec.
                                          properties:
                                            affinity:
                                              description: |-
                                                k8s affinity.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            env:
                                              description: |-
                                                Deployment environment variables.
                                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            hpaSpec:
                                              description: |-
                                                k8s HorizontalPodAutoscaler settings.
                                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            imagePullPolicy:
                                              description: |-
                                                k8s imagePullPolicy.
                                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                              type: string
                                            nodeSelector:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s nodeSelector.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                              type: object
                                            overlays:
                                              description: Overlays for k8s resources
                                                in rendered manifests.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            podAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s pod annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            podDisruptionBudget:
                                              description: |-
                                                k8s PodDisruptionBudget settings.
                                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            priorityClassName:
                                              description: |-
                                                k8s priority_class_name. Default for all resources unless overridden.
                                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                              type: string
                                            readinessProbe:
                                              description: |-
                                                k8s readinessProbe settings.
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            replicaCount:
                                              description: |-
                                                k8s Deployment replicas setting.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              maximum: 4294967295
                                              minimum: 0
                                              type: integer
                                            resources:
                                              description: |-
                                                k8s resources settings.
                                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            securityContext:
                                              description: |-
                                                k8s pod security context
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            service:
                                              description: |-
                                                k8s Service settings.
                                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            serviceAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s service annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            strategy:
                                              description: |-
                                                k8s deployment strategy.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tolerations:
                                              description: |-
                                                k8s toleration
                                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumeMounts:
                                              description: |-
                                                k8s volumeMounts
                                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumes:
                                              description: |-
                                                k8s volume
                                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                                Volumes defines the collection of Volume to inject into the pod.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                          type: object
                                        label:
                                          additionalProperties:
                                            type: string
                                          description: Labels for the gateway.
                                          type: object
                                        name:
                                          description: Name for the gateway.
                                          type: string
                                        namespace:
                                          description: Namespace for the gateway.
                                          type: string
                                        tag:
                                          description: Tag for the component (overrides
                                            top level tag setting).
                                          type: string
                                      type: object
                                    type: array
                                  ingressGateways:
                                    items:
                                      properties:
                                        enabled:
                                          description: Selects whether this gateway
                                            is installed.
                                          nullable: true
                                          type: boolean
                                        hub:
                                          description: Hub for the component (overrides
                                            top level hub setting).
                                          type: string
                                        k8s:
                                          description: Kubernetes resource spec.
                                          properties:
                                            affinity:
                                              description: |-
                                                k8s affinity.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            env:
                                              description: |-
                                                Deployment environment variables.
                                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            hpaSpec:
                                              description: |-
                                                k8s HorizontalPodAutoscaler settings.
                                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            imagePullPolicy:
                                              description: |-
                                                k8s imagePullPolicy.
                                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                              type: string
                                            nodeSelector:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s nodeSelector.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                              type: object
                                            overlays:
                                              description: Overlays for k8s resources
                                                in rendered manifests.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            podAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s pod annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            podDisruptionBudget:
                                              description: |-
                                                k8s PodDisruptionBudget settings.
                                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            priorityClassName:
                                              description: |-
                                                k8s priority_class_name. Default for all resources unless overridden.
                                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                              type: string
                                            readinessProbe:
                                              description: |-
                                                k8s readinessProbe settings.
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            replicaCount:
                                              description: |-
                                                k8s Deployment replicas setting.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              maximum: 4294967295
                                              minimum: 0
                                              type: integer
                                            resources:
                                              description: |-
                                                k8s resources settings.
                                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            securityContext:
                                              description: |-
                                                k8s pod security context
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            service:
                                              description: |-
                                                k8s Service settings.
                                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            serviceAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s service annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            strategy:
                                              description: |-
                                                k8s deployment strategy.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tolerations:
                                              description: |-
                                                k8s toleration
                                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumeMounts:
                                              description: |-
                                                k8s volumeMounts
                                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumes:
                                              description: |-
                                                k8s volume
                                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                                Volumes defines the collection of Volume to inject into the pod.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                          type: object
                                        label:
                                          additionalProperties:
                                            type: string
                                          description: Labels for the gateway.
                                          type: object
                                        name:
                                          description: Name for the gateway.
                                          type: string
                                        namespace:
                                          description: Namespace for the gateway.
                                          type: string
                                        tag:
                                          description: Tag for the component (overrides
                                            top level tag setting).
                                          type: string
                                      type: object
                                    type: array
                                  istiodRemote:
                                    description: Remote cluster using an external
                                      control plane.
                                    properties:
                                      enabled:
                                        description: Selects whether this component
                                          is installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources
                                              in rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: Arbitrary install time configuration
                                          for the component.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  pilot:
                                    properties:
                                      enabled:
                                        description: Selects whether this component
                                          is installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources
                                              in rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: Arbitrary install time configuration
                                          for the component.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                type: object
                              defaultRevision:
                                description: |-
                                  Identify whether this revision is the default revision for the cluster
                                  This option is currently experimental.
                                type: boolean
                              hub:
                                description: Root for docker image paths e.g. `docker.io/istio`
                                type: string
                              installPackagePath:
                                description: |-
                                  Path for the install package. e.g.

                                  * /tmp/istio-installer/nightly (local file path)
                                type: string
                              meshConfig:
                                description: Config used by control plane components
                                  internally.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              namespace:
                                description: |-
                                  Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                                  as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                                  a custom namespace.
                                  If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                                type: string
                              profile:
                                description: |-
                                  Path or name for the profile e.g.

                                  * minimal (looks in profiles dir for a file called minimal.yaml)
                                  * /tmp/istio/install/values/custom/custom-install.yaml (local file path)

                                  default profile is used if this field is unset.
                                type: string
                              resourceSuffix:
                                description: |-
                                  $hide_from_docs
                                  Resource suffix is appended to all resources installed by each component.
                                  Never implemented; replaced by revision.
                                type: string
                              revision:
                                description: |-
                                  Identify the revision this installation is associated with.
                                  This option is currently experimental.
                                type: string
                              tag:
                                description: Version tag for docker images e.g. `1.7.2`
                                type: string
                              unvalidatedValues:
                                description: Unvalidated overrides for default `values.yaml`.
                                  Used for custom templates where new parameters are
                                  added.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              values:
                                description: |-
                                  Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                                  See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                                  Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                                  includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          state:
                            description: State of the Istio installation
                            enum:
                            - PENDING
                            - FAILED
                            - INSTALLING_CONTROLLER
                            - CONTROLLER_INSTALL_FAILED
                            - INSTALLING_CONTROL_PLANE
                            - CONTROL_PLANE_INSTALL_FAILED
                            - HEALTHY
                            - UNHEALTHY
                            - ACTION_REQUIRED
                            - UPDATING_CONTROL_PLANE
                            - RECONCILING_CONTROL_PLANE
                            - UNKNOWN
                            type: string
                        type: object
                      description: The Istio installations by revision.
                      type: object
                  type: object
                description: |-
                  The status of each Istio installation that is being managed by Gloo Mesh, where
                  the key is the cluster name of the installation.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: dc565b8f411b25bf
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: gatewaylifecyclemanagers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GatewayLifecycleManager
    listKind: GatewayLifecycleManagerList
    plural: gatewaylifecyclemanagers
    shortNames:
    - glm
    singular: gatewaylifecyclemanager
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              installations:
                description: |-
                  List of Istio gateway installations.
                  Any components that are NOT related to the gateway will be ignored
                  Only 1 installation is allowed per revision per cluster
                items:
                  properties:
                    clusters:
                      description: The clusters where the Istio should be installed.
                      items:
                        properties:
                          activeGateway:
                            description: |-
                              Optional: defaults to false
                              When true this installation will be the Active gateway that primary service traffic will be routed through for the selected cluster(s)
                              If the GatewayLifecycleManagerSpec defines a service, this field will switch over service selectors based off the gatewayRevsion. Updating this can be useful for switching over Canary deployments.
                            type: boolean
                          name:
                            description: |-
                              The name of the cluster that Istio should be installed in. This should
                              match the registered cluster name.
                            type: string
                          trustDomain:
                            description: |-
                              [Optional] The trust domain value that should be set for this cluster's
                              Istio installations. This value will be set in the installation's mesh
                              config. (See https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1)
                              Defaults to the cluster's name.
                            type: string
                        type: object
                      type: array
                    controlPlaneRevision:
                      description: 'Optional: default to the gatewayRevision; Selects
                        the control plane revision to be used by the gateway. If not
                        found no gateway will be created.'
                      type: string
                    gatewayRevision:
                      description: gatewayRevision that will be used to represent
                        this installation.
                      type: string
                    istioOperatorSpec:
                      description: |-
                        Specs for the IstioOperators that should be applied.
                        See https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/
                      properties:
                        addonComponents:
                          additionalProperties:
                            properties:
                              chartPath:
                                description: Chart path for addon components.
                                type: string
                              enabled:
                                description: Selects whether this component is installed.
                                nullable: true
                                type: boolean
                              k8s:
                                description: Kubernetes resource spec.
                                properties:
                                  affinity:
                                    description: |-
                                      k8s affinity.
                                      [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  env:
                                    description: |-
                                      Deployment environment variables.
                                      [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  hpaSpec:
                                    description: |-
                                      k8s HorizontalPodAutoscaler settings.
                                      [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  imagePullPolicy:
                                    description: |-
                                      k8s imagePullPolicy.
                                      [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                    type: string
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s nodeSelector.
                                      [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                    type: object
                                  overlays:
                                    description: Overlays for k8s resources in rendered
                                      manifests.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  podAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s pod annotations.
                                      [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                    type: object
                                  podDisruptionBudget:
                                    description: |-
                                      k8s PodDisruptionBudget settings.
                                      [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  priorityClassName:
                                    description: |-
                                      k8s priority_class_name. Default for all resources unless overridden.
                                      [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                    type: string
                                  readinessProbe:
                                    description: |-
                                      k8s readinessProbe settings.
                                      [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                      k8s.io.api.core.v1.Probe readiness_probe = 9;
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  replicaCount:
                                    description: |-
                                      k8s Deployment replicas setting.
                                      [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                  resources:
                                    description: |-
                                      k8s resources settings.
                                      [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  securityContext:
                                    description: |-
                                      k8s pod security context
                                      [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  service:
                                    description: |-
                                      k8s Service settings.
                                      [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  serviceAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s service annotations.
                                      [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                    type: object
                                  strategy:
                                    description: |-
                                      k8s deployment strategy.
                                      [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  tolerations:
                                    description: |-
                                      k8s toleration
                                      [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  volumeMounts:
                                    description: |-
                                      k8s volumeMounts
                                      VolumeMounts defines the collection of VolumeMount to inject into containers.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  volumes:
                                    description: |-
                                      k8s volume
                                      [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                      Volumes defines the collection of Volume to inject into the pod.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                type: object
                              namespace:
                                description: Namespace for the component.
                                type: string
                              schema:
                                description: Optional schema to validate spec against.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              spec:
                                description: Arbitrary install time configuration
                                  for the component.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          description: |-
                            Deprecated.
                            Users should manage the installation of addon components on their own.
                            Refer to samples/addons for demo installation of addon components.
                          type: object
                        components:
                          description: |-
                            Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                            component.
                          properties:
                            base:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                              type: object
                            cni:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top
                                    level hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: Arbitrary install time configuration
                                    for the component.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top
                                    level tag setting).
                                  type: string
                              type: object
                            egressGateways:
                              items:
                                properties:
                                  enabled:
                                    description: Selects whether this gateway is installed.
                                    nullable: true
                                    type: boolean
                                  hub:
                                    description: Hub for the component (overrides
                                      top level hub setting).
                                    type: string
                                  k8s:
                                    description: Kubernetes resource spec.
                                    properties:
                                      affinity:
                                        description: |-
                                          k8s affinity.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      env:
                                        description: |-
                                          Deployment environment variables.
                                          [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      hpaSpec:
                                        description: |-
                                          k8s HorizontalPodAutoscaler settings.
                                          [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      imagePullPolicy:
                                        description: |-
                                          k8s imagePullPolicy.
                                          [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                        type: string
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s nodeSelector.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                        type: object
                                      overlays:
                                        description: Overlays for k8s resources in
                                          rendered manifests.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      podAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s pod annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      podDisruptionBudget:
                                        description: |-
                                          k8s PodDisruptionBudget settings.
                                          [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      priorityClassName:
                                        description: |-
                                          k8s priority_class_name. Default for all resources unless overridden.
                                          [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                        type: string
                                      readinessProbe:
                                        description: |-
                                          k8s readinessProbe settings.
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                          k8s.io.api.core.v1.Probe readiness_probe = 9;
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      replicaCount:
                                        description: |-
                                          k8s Deployment replicas setting.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      resources:
                                        description: |-
                                          k8s resources settings.
                                          [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      securityContext:
                                        description: |-
                                          k8s pod security context
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      service:
                                        description: |-
                                          k8s Service settings.
                                          [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      serviceAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s service annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      strategy:
                                        description: |-
                                          k8s deployment strategy.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tolerations:
                                        description: |-
                                          k8s toleration
                                          [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumeMounts:
                                        description: |-
                                          k8s volumeMounts
                                          VolumeMounts defines the collection of VolumeMount to inject into containers.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumes:
                                        description: |-
                                          k8s volume
                                          [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                          Volumes defines the collection of Volume to inject into the pod.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                    type: object
                                  label:
                                    additionalProperties:
                                      type: string
                                    description: Labels for the gateway.
                                    type: object
                                  name:
                                    description: Name for the gateway.
                                    type: string
                                  namespace:
                                    description: Namespace for the gateway.
                                    type: string
                                  tag:
                                    description: Tag for the component (overrides
                                      top level tag setting).
                                    type: string
                                type: object
                              type: array
                            ingressGateways:
                              items:
                                properties:
                                  enabled:
                                    description: Selects whether this gateway is installed.
                                    nullable: true
                                    type: boolean
                                  hub:
                                    description: Hub for the component (overrides
                                      top level hub setting).
                                    type: string
                                  k8s:
                                    description: Kubernetes resource spec.
                                    properties:
                                      affinity:
                                        description: |-
                                          k8s affinity.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      env:
                                        description: |-
                                          Deployment environment variables.
                                          [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      hpaSpec:
                                        description: |-
                                          k8s HorizontalPodAutoscaler settings.
                                          [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      imagePullPolicy:
                                        description: |-
                                          k8s imagePullPolicy.
                                          [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                        type: string
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s nodeSelector.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                        type: object
                                      overlays:
                                        description: Overlays for k8s resources in
                                          rendered manifests.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      podAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s pod annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      podDisruptionBudget:
                                        description: |-
                                          k8s PodDisruptionBudget settings.
                                          [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      priorityClassName:
                                        description: |-
                                          k8s priority_class_name. Default for all resources unless overridden.
                                          [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                        type: string
                                      readinessProbe:
                                        description: |-
                                          k8s readinessProbe settings.
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                          k8s.io.api.core.v1.Probe readiness_probe = 9;
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      replicaCount:
                                        description: |-
                                          k8s Deployment replicas setting.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      resources:
                                        description: |-
                                          k8s resources settings.
                                          [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      securityContext:
                                        description: |-
                                          k8s pod security context
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      service:
                                        description: |-
                                          k8s Service settings.
                                          [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      serviceAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s service annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      strategy:
                                        description: |-
                                          k8s deployment strategy.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tolerations:
                                        description: |-
                                          k8s toleration
                                          [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumeMounts:
                                        description: |-
                                          k8s volumeMounts
                                          VolumeMounts defines the collection of VolumeMount to inject into containers.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumes:
                                        description: |-
                                          k8s volume
                                          [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                          Volumes defines the collection of Volume to inject into the pod.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                    type: object
                                  label:
                                    additionalProperties:
                                      type: string
                                    description: Labels for the gateway.
                                    type: object
                                  name:
                                    description: Name for the gateway.
                                    type: string
                                  namespace:
                                    description: Namespace for the gateway.
                                    type: string
                                  tag:
                                    description: Tag for the component (overrides
                                      top level tag setting).
                                    type: string
                                type: object
                              type: array
                            istiodRemote:
                              description: Remote cluster using an external control
                                plane.
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top
                                    level hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: Arbitrary install time configuration
                                    for the component.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top
                                    level tag setting).
                                  type: string
                              type: object
                            pilot:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top
                                    level hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: Arbitrary install time configuration
                                    for the component.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top
                                    level tag setting).
                                  type: string
                              type: object
                          type: object
                        defaultRevision:
                          description: |-
                            Identify whether this revision is the default revision for the cluster
                            This option is currently experimental.
                          type: boolean
                        hub:
                          description: Root for docker image paths e.g. `docker.io/istio`
                          type: string
                        installPackagePath:
                          description: |-
                            Path for the install package. e.g.

                            * /tmp/istio-installer/nightly (local file path)
                          type: string
                        meshConfig:
                          description: Config used by control plane components internally.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        namespace:
                          description: |-
                            Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                            as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                            a custom namespace.
                            If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                          type: string
                        profile:
                          description: |-
                            Path or name for the profile e.g.

                            * minimal (looks in profiles dir for a file called minimal.yaml)
                            * /tmp/istio/install/values/custom/custom-install.yaml (local file path)

                            default profile is used if this field is unset.
                          type: string
                        resourceSuffix:
                          description: |-
                            $hide_from_docs
                            Resource suffix is appended to all resources installed by each component.
                            Never implemented; replaced by revision.
                          type: string
                        revision:
                          description: |-
                            Identify the revision this installation is associated with.
                            This option is currently experimental.
                          type: string
                        tag:
                          description: Version tag for docker images e.g. `1.7.2`
                          type: string
                        unvalidatedValues:
                          description: Unvalidated overrides for default `values.yaml`.
                            Used for custom templates where new parameters are added.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        values:
                          description: |-
                            Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                            See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                            Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                            includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              clusters:
                additionalProperties:
                  properties:
                    installations:
                      additionalProperties:
                        properties:
                          message:
                            description: A human readable message about the current
                              state of the GatewayInstallationInstance.
                            type: string
                          observedOperator:
                            description: operator that is currently deployed for this
                              revision
                            properties:
                              addonComponents:
                                additionalProperties:
                                  properties:
                                    chartPath:
                                      description: Chart path for addon components.
                                      type: string
                                    enabled:
                                      description: Selects whether this component
                                        is installed.
                                      nullable: true
                                      type: boolean
                                    k8s:
                                      description: Kubernetes resource spec.
                                      properties:
                                        affinity:
                                          description: |-
                                            k8s affinity.
                                            [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        env:
                                          description: |-
                                            Deployment environment variables.
                                            [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        hpaSpec:
                                          description: |-
                                            k8s HorizontalPodAutoscaler settings.
                                            [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        imagePullPolicy:
                                          description: |-
                                            k8s imagePullPolicy.
                                            [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                          type: string
                                        nodeSelector:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s nodeSelector.
                                            [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                          type: object
                                        overlays:
                                          description: Overlays for k8s resources
                                            in rendered manifests.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        podAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s pod annotations.
                                            [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                          type: object
                                        podDisruptionBudget:
                                          description: |-
                                            k8s PodDisruptionBudget settings.
                                            [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        priorityClassName:
                                          description: |-
                                            k8s priority_class_name. Default for all resources unless overridden.
                                            [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                          type: string
                                        readinessProbe:
                                          description: |-
                                            k8s readinessProbe settings.
                                            [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                            k8s.io.api.core.v1.Probe readiness_probe = 9;
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        replicaCount:
                                          description: |-
                                            k8s Deployment replicas setting.
                                            [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        resources:
                                          description: |-
                                            k8s resources settings.
                                            [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        securityContext:
                                          description: |-
                                            k8s pod security context
                                            [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        service:
                                          description: |-
                                            k8s Service settings.
                                            [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        serviceAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s service annotations.
                                            [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                          type: object
                                        strategy:
                                          description: |-
                                            k8s deployment strategy.
                                            [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        tolerations:
                                          description: |-
                                            k8s toleration
                                            [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        volumeMounts:
                                          description: |-
                                            k8s volumeMounts
                                            VolumeMounts defines the collection of VolumeMount to inject into containers.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        volumes:
                                          description: |-
                                            k8s volume
                                            [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                            Volumes defines the collection of Volume to inject into the pod.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                      type: object
                                    namespace:
                                      description: Namespace for the component.
                                      type: string
                                    schema:
                                      description: Optional schema to validate spec
                                        against.
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: Arbitrary install time configuration
                                        for the component.
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                description: |-
                                  Deprecated.
                                  Users should manage the installation of addon components on their own.
                                  Refer to samples/addons for demo installation of addon components.
                                type: object
                              components:
                                description: |-
                                  Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                                  component.
                                properties:
                                  base:
                                    properties:
                                      enabled:
                                        description: Selects whether this component
                                          is installed.
                                        nullable: true
                                        type: boolean
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources
                                              in rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                    type: object
                                  cni:
                                    properties:
                                      enabled:
                                        description: Selects whether this component
                                          is installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources
                                              in rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: Arbitrary install time configuration
                                          for the component.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  egressGateways:
                                    items:
                                      properties:
                                        enabled:
                                          description: Selects whether this gateway
                                            is installed.
                                          nullable: true
                                          type: boolean
                                        hub:
                                          description: Hub for the component (overrides
                                            top level hub setting).
                                          type: string
                                        k8s:
                                          description: Kubernetes resource spec.
                                          properties:
                                            affinity:
                                              description: |-
                                                k8s affinity.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            env:
                                              description: |-
                                                Deployment environment variables.
                                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            hpaSpec:
                                              description: |-
                                                k8s HorizontalPodAutoscaler settings.
                                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            imagePullPolicy:
                                              description: |-
                                                k8s imagePullPolicy.
                                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                              type: string
                                            nodeSelector:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s nodeSelector.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                              type: object
                                            overlays:
                                              description: Overlays for k8s resources
                                                in rendered manifests.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            podAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s pod annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            podDisruptionBudget:
                                              description: |-
                                                k8s PodDisruptionBudget settings.
                                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            priorityClassName:
                                              description: |-
                                                k8s priority_class_name. Default for all resources unless overridden.
                                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                              type: string
                                            readinessProbe:
                                              description: |-
                                                k8s readinessProbe settings.
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            replicaCount:
                                              description: |-
                                                k8s Deployment replicas setting.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              maximum: 4294967295
                                              minimum: 0
                                              type: integer
                                            resources:
                                              description: |-
                                                k8s resources settings.
                                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            securityContext:
                                              description: |-
                                                k8s pod security context
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            service:
                                              description: |-
                                                k8s Service settings.
                                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            serviceAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s service annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            strategy:
                                              description: |-
                                                k8s deployment strategy.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tolerations:
                                              description: |-
                                                k8s toleration
                                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumeMounts:
                                              description: |-
                                                k8s volumeMounts
                                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumes:
                                              description: |-
                                                k8s volume
                                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                                Volumes defines the collection of Volume to inject into the pod.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                          type: object
                                        label:
                                          additionalProperties:
                                            type: string
                                          description: Labels for the gateway.
                                          type: object
                                        name:
                                          description: Name for the gateway.
                                          type: string
                                        namespace:
                                          description: Namespace for the gateway.
                                          type: string
                                        tag:
                                          description: Tag for the component (overrides
                                            top level tag setting).
                                          type: string
                                      type: object
                                    type: array
                                  ingressGateways:
                                    items:
                                      properties:
                                        enabled:
                                          description: Selects whether this gateway
                                            is installed.
                                          nullable: true
                                          type: boolean
                                        hub:
                                          description: Hub for the component (overrides
                                            top level hub setting).
                                          type: string
                                        k8s:
                                          description: Kubernetes resource spec.
                                          properties:
                                            affinity:
                                              description: |-
                                                k8s affinity.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            env:
                                              description: |-
                                                Deployment environment variables.
                                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            hpaSpec:
                                              description: |-
                                                k8s HorizontalPodAutoscaler settings.
                                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            imagePullPolicy:
                                              description: |-
                                                k8s imagePullPolicy.
                                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                              type: string
                                            nodeSelector:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s nodeSelector.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                              type: object
                                            overlays:
                                              description: Overlays for k8s resources
                                                in rendered manifests.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            podAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s pod annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            podDisruptionBudget:
                                              description: |-
                                                k8s PodDisruptionBudget settings.
                                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            priorityClassName:
                                              description: |-
                                                k8s priority_class_name. Default for all resources unless overridden.
                                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                              type: string
                                            readinessProbe:
                                              description: |-
                                                k8s readinessProbe settings.
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            replicaCount:
                                              description: |-
                                                k8s Deployment replicas setting.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              maximum: 4294967295
                                              minimum: 0
                                              type: integer
                                            resources:
                                              description: |-
                                                k8s resources settings.
                                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            securityContext:
                                              description: |-
                                                k8s pod security context
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            service:
                                              description: |-
                                                k8s Service settings.
                                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            serviceAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s service annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            strategy:
                                              description: |-
                                                k8s deployment strategy.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tolerations:
                                              description: |-
                                                k8s toleration
                                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumeMounts:
                                              description: |-
                                                k8s volumeMounts
                                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumes:
                                              description: |-
                                                k8s volume
                                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                                Volumes defines the collection of Volume to inject into the pod.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                          type: object
                                        label:
                                          additionalProperties:
                                            type: string
                                          description: Labels for the gateway.
                                          type: object
                                        name:
                                          description: Name for the gateway.
                                          type: string
                                        namespace:
                                          description: Namespace for the gateway.
                                          type: string
                                        tag:
                                          description: Tag for the component (overrides
                                            top level tag setting).
                                          type: string
                                      type: object
                                    type: array
                                  istiodRemote:
                                    description: Remote cluster using an external
                                      control plane.
                                    properties:
                                      enabled:
                                        description: Selects whether this component
                                          is installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources
                                              in rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: Arbitrary install time configuration
                                          for the component.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  pilot:
                                    properties:
                                      enabled:
                                        description: Selects whether this component
                                          is installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources
                                              in rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: Arbitrary install time configuration
                                          for the component.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                type: object
                              defaultRevision:
                                description: |-
                                  Identify whether this revision is the default revision for the cluster
                                  This option is currently experimental.
                                type: boolean
                              hub:
                                description: Root for docker image paths e.g. `docker.io/istio`
                                type: string
                              installPackagePath:
                                description: |-
                                  Path for the install package. e.g.

                                  * /tmp/istio-installer/nightly (local file path)
                                type: string
                              meshConfig:
                                description: Config used by control plane components
                                  internally.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              namespace:
                                description: |-
                                  Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                                  as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                                  a custom namespace.
                                  If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                                type: string
                              profile:
                                description: |-
                                  Path or name for the profile e.g.

                                  * minimal (looks in profiles dir for a file called minimal.yaml)
                                  * /tmp/istio/install/values/custom/custom-install.yaml (local file path)

                                  default profile is used if this field is unset.
                                type: string
                              resourceSuffix:
                                description: |-
                                  $hide_from_docs
                                  Resource suffix is appended to all resources installed by each component.
                                  Never implemented; replaced by revision.
                                type: string
                              revision:
                                description: |-
                                  Identify the revision this installation is associated with.
                                  This option is currently experimental.
                                type: string
                              tag:
                                description: Version tag for docker images e.g. `1.7.2`
                                type: string
                              unvalidatedValues:
                                description: Unvalidated overrides for default `values.yaml`.
                                  Used for custom templates where new parameters are
                                  added.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              values:
                                description: |-
                                  Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                                  See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                                  Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                                  includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          state:
                            description: State of the Istio installation
                            enum:
                            - PENDING
                            - FAILED
                            - NO_CONTROL_PLANE_AVAILABLE
                            - INSTALLING_GATEWAY
                            - HEALTHY
                            - UNHEALTHY
                            - ACTION_REQUIRED
                            - UPDATING_GATEWAY
                            - RECONCILING_GATEWAY
                            - UNKNOWN
                            type: string
                        type: object
                      description: The Istio installations by revision.
                      type: object
                  type: object
                description: |-
                  The status of each Istio gateway installation that is being managed by Gloo Mesh, where
                  the key is the cluster name of the installation.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/apimanagement.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: afd34d68939dcc76
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: apischemas.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ApiSchema
    listKind: ApiSchemaList
    plural: apischemas
    singular: apischema
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              The ApiSchema resource represents an the schema of an API
              served by a Destination (Service, ExternalService).
              ApiSchemas are typically created by Gloo Mesh Discovery running on the agent.
              They can also be created manually by users.
              The ApiSchema type is used to represent different types of API schema specification languages:
              - OpenAPI
              - gRPC
              - GraphQL
            oneOf:
            - not:
                anyOf:
                - required:
                  - graphql
            - required:
              - graphql
            properties:
              graphql:
                description: |-
                  OpenAPI schema
                     OpenAPISchema openapi = 1;
                     // gRPC schema
                     GrpcSchema grpc = 2;
                  GraphQL schema
                properties:
                  schemaDefinition:
                    description: |-
                      Required: GraphQL Schema Definition. Root-level Query and Mutation types are supported, while the Subscription type is not
                      yet supported.
                    type: string
                type: object
              service:
                description: the destination that serves this API
                properties:
                  kind:
                    description: the kind of destination being selected. defaults
                      to Kubernetes Service.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted.
                      required if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects
                          being targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  ref:
                    description: reference to the destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: select a subset of the destination's endpoints for
                      routing based on their labels.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns the graqphql schema
                properties:
                  workspace:
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f328e9a29e433231
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlstitchedschemas.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLStitchedSchema
    listKind: GraphQLStitchedSchemaList
    plural: graphqlstitchedschemas
    singular: graphqlstitchedschema
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              subschemas:
                description: List of GraphQL Subschemas that compose this GraphQL
                  stitched schema.
                items:
                  properties:
                    executableSubschema:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - server
                          - required:
                            - local
                      - required:
                        - server
                      - required:
                        - local
                      properties:
                        local:
                          description: |-
                            List of references to GraphQLResolverMap resources. GraphQLResolverMaps
                            contain a mapping from GraphQL fields to resolver configuration, so that those fields can be resolved
                            locally by this GraphQL-envoy instance.
                            Order of the references listed below does matter as resolver maps listed first
                            will be given priority over later ones when tie-breaking field resolver configurations.
                          properties:
                            options:
                              properties:
                                enableIntrospection:
                                  description: |-
                                    Do we enable introspection for the schema? general recommendation is to
                                    disable this for production and hence it defaults to false.
                                  type: boolean
                                maxDepth:
                                  description: |-
                                    Max GraphQL operation (query/mutation/subscription) depth. This sets a limitation on the max nesting on a query that runs against this schema.
                                    any GraphQL operation that runs past the `max_depth` will add an error message to the response and will return as `null`.
                                    As as simple example, if the schema is
                                    ```gql
                                    type Query {
                                      employee: Employee
                                    }

                                    type Employee {
                                      manager: Employee
                                      name: String
                                    }
                                    ```
                                    and we set a `max_depth` of `3` and we run a query
                                    ```gql
                                    query {             # query depth : 0
                                      employee {        # query depth : 1
                                        manager {       # query depth : 2
                                          name          # query depth : 3
                                          manager {     # query depth : 3
                                            name        # query depth : 4
                                          }
                                        }
                                      }
                                    }
                                    ```
                                    the graphql server will respond with a response:
                                    ```json
                                    { "data" : {
                                        "employee" : {
                                          "manager" : {
                                            "name" : "Manager 1",
                                            "manager"  : {
                                              "name" : null
                                      }}}},
                                      "errors": [
                                         {"message": "field 'name' exceeds the max operation depth of 3 for this schema"}
                                       ]
                                    }
                                    If not configured, or the value is 0, the query depth will be unbounded.
                                  maximum: 4294967295
                                  minimum: 0
                                  nullable: true
                                  type: integer
                              type: object
                            resolverMapRefs:
                              description: |-
                                List of references to GraphQLResolverMap resources. GraphQLResolverMaps
                                contain a mapping from GraphQL fields to resolver configuration, so that those fields can be resolved
                                locally by this GraphQL-envoy instance.
                                Order of the references listed below does matter as resolver maps listed first
                                will be given priority over later ones when tie-breaking field resolver configurations.
                              items:
                                properties:
                                  clusterName:
                                    description: name of the cluster in which the
                                      resource exists
                                    type: string
                                  name:
                                    description: name of the resource being referenced
                                    type: string
                                  namespace:
                                    description: namespace of the resource being referenced
                                    type: string
                                type: object
                              type: array
                          type: object
                        schemaRef:
                          description: |-
                            Required: Reference to the ApiSchema object which is of type GraphQL schema, which contains the [GraphQL SDL](https://graphql.org/learn/schema/)
                            defining this GraphQL schema.
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource
                                exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        server:
                          description: |-
                            Configuration to delegate resolving this GraphQL request to an external GraphQL server, which can be
                            another GlooGraphQL instance or another instance of a GraphQL server. The external GraphQL server must
                            be compliant with the [June 2018 GraphQL specification](https://spec.graphql.org/June2018/).
                          properties:
                            graphqlServers:
                              description: |-
                                List of destinations that can server GraphQL requests. The external GraphQL server must
                                be compliant with the [June 2018 GraphQL specification](https://spec.graphql.org/June2018).
                                Though this is a list, only the first referenced destination will be used until fail-over and load balancing
                                is supported between multiple GraphQL destinations.
                              items:
                                properties:
                                  kind:
                                    description: the kind of destination being selected.
                                      defaults to Kubernetes Service.
                                    enum:
                                    - SERVICE
                                    - VIRTUAL_DESTINATION
                                    - EXTERNAL_SERVICE
                                    type: string
                                  port:
                                    description: the port on the destination object
                                      being targeted. required if the object provides
                                      more than one port.
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - number
                                        - required:
                                          - name
                                    - required:
                                      - number
                                    - required:
                                      - name
                                    properties:
                                      name:
                                        description: the name of the port on the destination
                                          objects being targeted.
                                        type: string
                                      number:
                                        description: the number of the port on the
                                          destination objects being targeted.
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                    type: object
                                  ref:
                                    description: reference to the destination object
                                      by its metadata
                                    properties:
                                      cluster:
                                        description: the cluster of the object. if
                                          the field is omitted, Gloo Mesh will use
                                          the same cluster as the parent object containing
                                          this reference.
                                        type: string
                                      name:
                                        description: the name of the object
                                        type: string
                                      namespace:
                                        description: the namespace of the object.
                                          if the field is omitted, Gloo Mesh will
                                          use the same namespace as the parent object
                                          containing this reference.
                                        type: string
                                    type: object
                                  subset:
                                    additionalProperties:
                                      type: string
                                    description: select a subset of the destination's
                                      endpoints for routing based on their labels.
                                    type: object
                                  weight:
                                    description: |-
                                      Specify the proportion of traffic to be forwarded to this destination.
                                      Weights across all of the `destinations` must sum to 100.
                                      Weight is only relevant when used in the context of a route with multiple destinations.
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              type: array
                            headers:
                              additionalProperties:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - variable
                                    - required:
                                      - jq
                                    - required:
                                      - json
                                - required:
                                  - variable
                                - required:
                                  - jq
                                - required:
                                  - json
                                properties:
                                  jq:
                                    description: |-
                                      The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                      variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                      For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                      Jq filters must only result in one value, or an error will be sent back to the client.
                                      For example, for the input `[1,2,3]`, the jq filter `.[]` is not a valid jq filter as it results
                                      in multiple jq results. However, the jq filter '. | join(",")' is valid as it results in one result: "1,2,3".
                                      Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                      --- Using variables ---
                                      Variables that are declared in the `variables` field are available at the top level of the input JSON object to the
                                      jq filter.
                                      For example, if the following variables have been declared:
                                      ```yaml
                                      variables:
                                        userIdHeader:
                                          request_header: x-user-id
                                        resolverResultVar:
                                          resolver_result: {}
                                      ```
                                      then the input object to the `jq` filter would be
                                      ```json
                                      {
                                       "userIdHeader": <x-user-id header value from GraphQL request>,
                                       "resolverResultVar": { .. the resolver result .. }
                                      }
                                      ```
                                      --- Using a jq filter ---
                                      Given the following input object to the `jq` transformation, we can use a filter to transform the values.
                                      ```json
                                      {
                                       "userIdHeader": "john_doe123",
                                       "resolverResultVar": { "data": {"name": "John Doe"} }
                                      }
                                      ```
                                      If the `jq` filter is defined as
                                      ```
                                      "User: " + .userIdHeader + ", Name: " + .resolverResultVar.data.name
                                      ```
                                      the result of the jq transformation would be
                                      ```
                                      "User john_doe123, Name: John Doe"
                                      ```
                                    type: string
                                  json:
                                    description: Static JSON value.
                                    x-kubernetes-preserve-unknown-fields: true
                                  variable:
                                    description: |-
                                      The name of a variable declared in the `variables` field. The value of the variable
                                      is returned with no transformation.
                                    type: string
                                type: object
                              description: |-
                                map of header name to a transformation on extracted variables which are declared
                                in the `variables` field.
                                The transformation must result in a string value, or an error will be sent back to the client.
                              type: object
                            queryParams:
                              additionalProperties:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - variable
                                    - required:
                                      - jq
                                    - required:
                                      - json
                                - required:
                                  - variable
                                - required:
                                  - jq
                                - required:
                                  - json
                                properties:
                                  jq:
                                    description: |-
                                      The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                      variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                      For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                      Jq filters must only result in one value, or an error will be sent back to the client.
                                      For example, for the input `[1,2,3]`, the jq filter `.[]` is not a valid jq filter as it results
                                      in multiple jq results. However, the jq filter '. | join(",")' is valid as it results in one result: "1,2,3".
                                      Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                      --- Using variables ---
                                      Variables that are declared in the `variables` field are available at the top level of the input JSON object to the
                                      jq filter.
                                      For example, if the following variables have been declared:
                                      ```yaml
                                      variables:
                                        userIdHeader:
                                          request_header: x-user-id
                                        resolverResultVar:
                                          resolver_result: {}
                                      ```
                                      then the input object to the `jq` filter would be
                                      ```json
                                      {
                                       "userIdHeader": <x-user-id header value from GraphQL request>,
                                       "resolverResultVar": { .. the resolver result .. }
                                      }
                                      ```
                                      --- Using a jq filter ---
                                      Given the following input object to the `jq` transformation, we can use a filter to transform the values.
                                      ```json
                                      {
                                       "userIdHeader": "john_doe123",
                                       "resolverResultVar": { "data": {"name": "John Doe"} }
                                      }
                                      ```
                                      If the `jq` filter is defined as
                                      ```
                                      "User: " + .userIdHeader + ", Name: " + .resolverResultVar.data.name
                                      ```
                                      the result of the jq transformation would be
                                      ```
                                      "User john_doe123, Name: John Doe"
                                      ```
                                    type: string
                                  json:
                                    description: Static JSON value.
                                    x-kubernetes-preserve-unknown-fields: true
                                  variable:
                                    description: |-
                                      The name of a variable declared in the `variables` field. The value of the variable
                                      is returned with no transformation.
                                    type: string
                                type: object
                              description: |-
                                map of query parameter name to a transformation on extracted variables which are declared
                                in the `variables` field.
                                The transformation must result in a string value, or an error will be sent back to the client.
                              type: object
                            spanName:
                              description: |-
                                The span name for the remote GraphQL request, used for tracing.
                                If left empty or not set, the request span name will be set to the upstream cluster name.
                              type: string
                            variables:
                              additionalProperties:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - dynamicMetadata
                                    - required:
                                      - requestHeader
                                    - required:
                                      - json
                                - required:
                                  - dynamicMetadata
                                - required:
                                  - requestHeader
                                - required:
                                  - json
                                properties:
                                  dynamicMetadata:
                                    description: Extract the value from envoy dynamic
                                      metadata. The extracted value is an object.
                                    properties:
                                      key:
                                        description: |-
                                          The key under the envoy dynamic metadata namespace that the data lives under.
                                          If the key doesn't exist in the namespace, the extraction yields null
                                        type: string
                                      metadataNamespace:
                                        description: |-
                                          The envoy dynamic metadata namespace that the data lives in. If the namespace doesn't exist in the
                                          metadata, the extraction yields null
                                        type: string
                                    type: object
                                  json:
                                    description: Assigns the variable to a JSON value
                                      specified here.
                                    x-kubernetes-preserve-unknown-fields: true
                                  requestHeader:
                                    description: |-
                                      Extract the value from the GraphQL HTTP request header. The extracted value is a string.
                                      If the header doesn't exist, an empty string will be used.
                                    type: string
                                type: object
                              description: |-
                                Declare variables that are used in variable transformations in the fields below for the GraphQL request to a remote server.
                                The keys to this map are the name of the variables. See the variable transformations specifically
                                for how to reference these variables.
                              type: object
                          type: object
                      type: object
                    typeMerge:
                      additionalProperties:
                        properties:
                          args:
                            additionalProperties:
                              type: string
                            type: object
                          queryName:
                            description: specifies the root field from this subschema
                              used to request the local type
                            type: string
                          selectionSet:
                            description: |-
                              This specifies one or more key fields required from other services to perform this query.
                              Query planning will automatically resolve these fields from other subschemas in dependency order.
                              This is a graphql selection set specified as a string
                              e.g. '{ username }'
                            type: string
                        type: object
                      description: |-
                        Type merge configuration for this subschema. Let's say this subschema is a Users service schema
                             and provides the User type (with a query to fetch a user given the username)
                             ```gql
                             type Query {
                               GetUser(username: String): User
                             }
                             type User {
                               username: String
                               firstName: String
                               lastName: String
                             }
                             ```
                             and another subschema, e.g. Reviews schema, may have a partial User type:
                             ```gql
                             type Review {
                               author: User
                             }
                             type User {
                               username: String
                             }
                             ```
                             We want to provide the relevant information from this Users service schema,
                             so that another API that can give us a partial User type (with the username) will then
                             be able to have access to the full user type. With the correct type merging config under the Users subschema, e.g.:
                             ```yaml
                             type_merge:
                               User:
                                 selection_set: '{ username }'
                                 query_name: 'GetUser'
                                 args:
                                   username: username
                             ```
                             the stitched schema will now be able to provide the full user type to all types that require it. In this case,
                             we can now get the first name of an author from the Review.author field even though the Reviews schema doesn't
                             provide the full User type.
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns the route table
                properties:
                  workspace:
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: d09d6c032094ce1f
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlresolvermaps.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLResolverMap
    listKind: GraphQLResolverMapList
    plural: graphqlresolvermaps
    singular: graphqlresolvermap
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              The GraphQLResolverMap Resource contains a mapping from types to fields to
              resolutions. For example, for a schema with type `Query` and field `GetName`
              ```graphql
               type Query {
                 GetName: String
               }
              ```
               you can configure a resolver for the `GetName` field as follows:
               ```yaml
               types:
                 Query:
                   fields:
                     GetName:
                       <insert resolver config>
               ```
            properties:
              types:
                additionalProperties:
                  properties:
                    fields:
                      additionalProperties:
                        properties:
                          resolvers:
                            description: |-
                              List of resolvers.
                              Currently, only one the first resolver configuration will be respected and a warning will be thrown
                              if more than one resolver is in the list.
                            items:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - restResolver
                              - required:
                                - restResolver
                              properties:
                                resolverResultTransform:
                                  description: |-
                                    Use a transformation on extracted variables to transform the upstream REST response.
                                    By default, the transformation is empty and the destination response is left as is before
                                    being passed into the GraphQL execution engine.
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - variable
                                      - required:
                                        - jq
                                      - required:
                                        - json
                                  - required:
                                    - variable
                                  - required:
                                    - jq
                                  - required:
                                    - json
                                  properties:
                                    jq:
                                      description: |-
                                        The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                        variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                        For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                        Jq filters must only result in one value, or an error will be sent back to the client.
                                        For example, for the input `[1,2,3]`, the jq filter `.[]` is not a valid jq filter as it results
                                        in multiple jq results. However, the jq filter '. | join(",")' is valid as it results in one result: "1,2,3".
                                        Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                        --- Using variables ---
                                        Variables that are declared in the `variables` field are available at the top level of the input JSON object to the
                                        jq filter.
                                        For example, if the following variables have been declared:
                                        ```yaml
                                        variables:
                                          userIdHeader:
                                            request_header: x-user-id
                                          resolverResultVar:
                                            resolver_result: {}
                                        ```
                                        then the input object to the `jq` filter would be
                                        ```json
                                        {
                                         "userIdHeader": <x-user-id header value from GraphQL request>,
                                         "resolverResultVar": { .. the resolver result .. }
                                        }
                                        ```
                                        --- Using a jq filter ---
                                        Given the following input object to the `jq` transformation, we can use a filter to transform the values.
                                        ```json
                                        {
                                         "userIdHeader": "john_doe123",
                                         "resolverResultVar": { "data": {"name": "John Doe"} }
                                        }
                                        ```
                                        If the `jq` filter is defined as
                                        ```
                                        "User: " + .userIdHeader + ", Name: " + .resolverResultVar.data.name
                                        ```
                                        the result of the jq transformation would be
                                        ```
                                        "User john_doe123, Name: John Doe"
                                        ```
                                      type: string
                                    json:
                                      description: Static JSON value.
                                      x-kubernetes-preserve-unknown-fields: true
                                    variable:
                                      description: |-
                                        The name of a variable declared in the `variables` field. The value of the variable
                                        is returned with no transformation.
                                      type: string
                                  type: object
                                restResolver:
                                  description: Resolves values by making a HTTP/2
                                    request to a HTTP/REST destination.
                                  properties:
                                    destinations:
                                      description: |-
                                        Required: list of destinations which point to destinations containing
                                        a RESTful service. Must provide at least one destination.

                                        (Note: only the first destination will be used)
                                      items:
                                        properties:
                                          kind:
                                            description: the kind of destination being
                                              selected. defaults to Kubernetes Service.
                                            enum:
                                            - SERVICE
                                            - VIRTUAL_DESTINATION
                                            - EXTERNAL_SERVICE
                                            type: string
                                          port:
                                            description: the port on the destination
                                              object being targeted. required if the
                                              object provides more than one port.
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - number
                                                - required:
                                                  - name
                                            - required:
                                              - number
                                            - required:
                                              - name
                                            properties:
                                              name:
                                                description: the name of the port
                                                  on the destination objects being
                                                  targeted.
                                                type: string
                                              number:
                                                description: the number of the port
                                                  on the destination objects being
                                                  targeted.
                                                maximum: 4294967295
                                                minimum: 0
                                                type: integer
                                            type: object
                                          ref:
                                            description: reference to the destination
                                              object by its metadata
                                            properties:
                                              cluster:
                                                description: the cluster of the object.
                                                  if the field is omitted, Gloo Mesh
                                                  will use the same cluster as the
                                                  parent object containing this reference.
                                                type: string
                                              name:
                                                description: the name of the object
                                                type: string
                                              namespace:
                                                description: the namespace of the
                                                  object. if the field is omitted,
                                                  Gloo Mesh will use the same namespace
                                                  as the parent object containing
                                                  this reference.
                                                type: string
                                            type: object
                                          subset:
                                            additionalProperties:
                                              type: string
                                            description: select a subset of the destination's
                                              endpoints for routing based on their
                                              labels.
                                            type: object
                                          weight:
                                            description: |-
                                              Specify the proportion of traffic to be forwarded to this destination.
                                              Weights across all of the `destinations` must sum to 100.
                                              Weight is only relevant when used in the context of a route with multiple destinations.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                        type: object
                                      type: array
                                    request:
                                      description: |-
                                        Configuration to template a HTTP request to fetch JSON from a destination REST service.
                                        This includes configuration such as setting headers dynamically on the HTTP request, configuring query_params,
                                        and setting the body for the request to the destination.
                                      properties:
                                        body:
                                          description: |-
                                            Sets the outgoing body to the upstream REST destination.
                                            By default, the body is empty.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                          properties:
                                            jq:
                                              description: |-
                                                The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                                variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                Jq filters must only result in one value, or an error will be sent back to the client.
                                                For example, for the input `[1,2,3]`, the jq filter `.[]` is not a valid jq filter as it results
                                                in multiple jq results. However, the jq filter '. | join(",")' is valid as it results in one result: "1,2,3".
                                                Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                                --- Using variables ---
                                                Variables that are declared in the `variables` field are available at the top level of the input JSON object to the
                                                jq filter.
                                                For example, if the following variables have been declared:
                                                ```yaml
                                                variables:
                                                  userIdHeader:
                                                    request_header: x-user-id
                                                  resolverResultVar:
                                                    resolver_result: {}
                                                ```
                                                then the input object to the `jq` filter would be
                                                ```json
                                                {
                                                 "userIdHeader": <x-user-id header value from GraphQL request>,
                                                 "resolverResultVar": { .. the resolver result .. }
                                                }
                                                ```
                                                --- Using a jq filter ---
                                                Given the following input object to the `jq` transformation, we can use a filter to transform the values.
                                                ```json
                                                {
                                                 "userIdHeader": "john_doe123",
                                                 "resolverResultVar": { "data": {"name": "John Doe"} }
                                                }
                                                ```
                                                If the `jq` filter is defined as
                                                ```
                                                "User: " + .userIdHeader + ", Name: " + .resolverResultVar.data.name
                                                ```
                                                the result of the jq transformation would be
                                                ```
                                                "User john_doe123, Name: John Doe"
                                                ```
                                              type: string
                                            json:
                                              description: Static JSON value.
                                              x-kubernetes-preserve-unknown-fields: true
                                            variable:
                                              description: |-
                                                The name of a variable declared in the `variables` field. The value of the variable
                                                is returned with no transformation.
                                              type: string
                                          type: object
                                        headers:
                                          additionalProperties:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - variable
                                                - required:
                                                  - jq
                                                - required:
                                                  - json
                                            - required:
                                              - variable
                                            - required:
                                              - jq
                                            - required:
                                              - json
                                            properties:
                                              jq:
                                                description: |-
                                                  The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                                  variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                  For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                  Jq filters must only result in one value, or an error will be sent back to the client.
                                                  For example, for the input `[1,2,3]`, the jq filter `.[]` is not a valid jq filter as it results
                                                  in multiple jq results. However, the jq filter '. | join(",")' is valid as it results in one result: "1,2,3".
                                                  Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                                  --- Using variables ---
                                                  Variables that are declared in the `variables` field are available at the top level of the input JSON object to the
                                                  jq filter.
                                                  For example, if the following variables have been declared:
                                                  ```yaml
                                                  variables:
                                                    userIdHeader:
                                                      request_header: x-user-id
                                                    resolverResultVar:
                                                      resolver_result: {}
                                                  ```
                                                  then the input object to the `jq` filter would be
                                                  ```json
                                                  {
                                                   "userIdHeader": <x-user-id header value from GraphQL request>,
                                                   "resolverResultVar": { .. the resolver result .. }
                                                  }
                                                  ```
                                                  --- Using a jq filter ---
                                                  Given the following input object to the `jq` transformation, we can use a filter to transform the values.
                                                  ```json
                                                  {
                                                   "userIdHeader": "john_doe123",
                                                   "resolverResultVar": { "data": {"name": "John Doe"} }
                                                  }
                                                  ```
                                                  If the `jq` filter is defined as
                                                  ```
                                                  "User: " + .userIdHeader + ", Name: " + .resolverResultVar.data.name
                                                  ```
                                                  the result of the jq transformation would be
                                                  ```
                                                  "User john_doe123, Name: John Doe"
                                                  ```
                                                type: string
                                              json:
                                                description: Static JSON value.
                                                x-kubernetes-preserve-unknown-fields: true
                                              variable:
                                                description: |-
                                                  The name of a variable declared in the `variables` field. The value of the variable
                                                  is returned with no transformation.
                                                type: string
                                            type: object
                                          description: |-
                                            Sets the headers on the request to the REST destination.
                                            This includes setting HTTP :path header.
                                            This is a map of HTTP Header name to a transformation which determines the Header value.
                                            The transformation must result in a string value, or an error will be sent back to the client.
                                            By default, the :method header is set to GET. If `body` is set, then the :method is POST. This can be overridden
                                            by setting the :method header manually below.
                                          type: object
                                        queryParams:
                                          additionalProperties:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - variable
                                                - required:
                                                  - jq
                                                - required:
                                                  - json
                                            - required:
                                              - variable
                                            - required:
                                              - jq
                                            - required:
                                              - json
                                            properties:
                                              jq:
                                                description: |-
                                                  The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                                  variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                  For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                  Jq filters must only result in one value, or an error will be sent back to the client.
                                                  For example, for the input `[1,2,3]`, the jq filter `.[]` is not a valid jq filter as it results
                                                  in multiple jq results. However, the jq filter '. | join(",")' is valid as it results in one result: "1,2,3".
                                                  Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                                  --- Using variables ---
                                                  Variables that are declared in the `variables` field are available at the top level of the input JSON object to the
                                                  jq filter.
                                                  For example, if the following variables have been declared:
                                                  ```yaml
                                                  variables:
                                                    userIdHeader:
                                                      request_header: x-user-id
                                                    resolverResultVar:
                                                      resolver_result: {}
                                                  ```
                                                  then the input object to the `jq` filter would be
                                                  ```json
                                                  {
                                                   "userIdHeader": <x-user-id header value from GraphQL request>,
                                                   "resolverResultVar": { .. the resolver result .. }
                                                  }
                                                  ```
                                                  --- Using a jq filter ---
                                                  Given the following input object to the `jq` transformation, we can use a filter to transform the values.
                                                  ```json
                                                  {
                                                   "userIdHeader": "john_doe123",
                                                   "resolverResultVar": { "data": {"name": "John Doe"} }
                                                  }
                                                  ```
                                                  If the `jq` filter is defined as
                                                  ```
                                                  "User: " + .userIdHeader + ", Name: " + .resolverResultVar.data.name
                                                  ```
                                                  the result of the jq transformation would be
                                                  ```
                                                  "User john_doe123, Name: John Doe"
                                                  ```
                                                type: string
                                              json:
                                                description: Static JSON value.
                                                x-kubernetes-preserve-unknown-fields: true
                                              variable:
                                                description: |-
                                                  The name of a variable declared in the `variables` field. The value of the variable
                                                  is returned with no transformation.
                                                type: string
                                            type: object
                                          description: |-
                                            Sets the query parameters on the request to the REST destination.
                                            The transformation must result in a string value, or an error will be sent back to the client.
                                          type: object
                                      type: object
                                    spanName:
                                      description: |-
                                        The span name for the upstream REST request, used for tracing.
                                        If left empty or not set, the request span name will be set to the upstream cluster name.
                                      nullable: true
                                      type: string
                                    timeout:
                                      description: Set the timeout of the HTTP request
                                        to the REST service (default 5s)
                                      type: string
                                    variables:
                                      additionalProperties:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - responseHeader
                                        - required:
                                          - responseHeader
                                        properties:
                                          responseHeader:
                                            description: |-
                                              Only available on resolver result transformations
                                              Extract the value from the GraphQL HTTP response header. The extracted value is a string.
                                              If this Extraction is used in a place where response headers are not available, an error
                                              will be thrown during configuration time.
                                            type: string
                                        type: object
                                      description: |-
                                        Variables that can be used in this field's response transform.
                                        The key is the name of the variable, which is directly used in the transformation.
                                        The value defines where the variable value is extracted from on the GraphQL REST response.
                                      type: object
                                  type: object
                              type: object
                            type: array
                          statPrefix:
                            description: |-
                              The stats prefix which will be used for this resolver.
                              If empty, will generate a stats prefix ${RESOLVER_NAME}
                            nullable: true
                            type: string
                          variables:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - requestHeader
                                  - required:
                                    - dynamicMetadata
                                  - required:
                                    - graphqlParent
                                  - required:
                                    - graphqlArg
                                  - required:
                                    - resolverResult
                                  - required:
                                    - json
                              - required:
                                - requestHeader
                              - required:
                                - dynamicMetadata
                              - required:
                                - graphqlParent
                              - required:
                                - graphqlArg
                              - required:
                                - resolverResult
                              - required:
                                - json
                              properties:
                                dynamicMetadata:
                                  description: Extract the value from envoy dynamic
                                    metadata. The extracted value is an object.
                                  properties:
                                    key:
                                      description: |-
                                        The key under the envoy dynamic metadata namespace that the data lives under.
                                        If the key doesn't exist in the namespace, the extraction yields null
                                      type: string
                                    metadataNamespace:
                                      description: |-
                                        The envoy dynamic metadata namespace that the data lives in. If the namespace doesn't exist in the
                                        metadata, the extraction yields null
                                      type: string
                                  type: object
                                graphqlArg:
                                  description: |-
                                    Assigns the variable to the GraphQL Argument with this name.
                                    If this name doesn't exist, the variable is `null`
                                  type: string
                                graphqlParent:
                                  description: Assigns the variable to the parent
                                    object
                                  maxProperties: 0
                                  type: object
                                json:
                                  description: Assigns the variable to a JSON value
                                    specified here
                                  x-kubernetes-preserve-unknown-fields: true
                                requestHeader:
                                  description: |-
                                    Extract the value from the GraphQL HTTP request header. The extracted value is a string.
                                    If the header doesn't exist, an empty string will be used.
                                  type: string
                                resolverResult:
                                  description: |-
                                    Assigns the variable to the GraphQL resolver result.
                                    If this Extraction is used in a place where the resolver result is not available, an error
                                    will be thrown during configuration time.
                                  maxProperties: 0
                                  type: object
                              type: object
                            description: |-
                              Variables that can be used as a part of transformations for this field's resolution.
                              The key is the name of the variable, which is directly used in the transformation.
                              The value defines where the variable value is extracted from on the GraphQL request.
                            type: object
                        type: object
                      description: |-
                        Map of GraphQL fields for the type to resolutions.
                        The key must match the GraphQL field name and is case-sensitive.
                        Fields that don't have resolvers will use the GraphQL default resolver,
                        which returns the field in the parent object with the same name as the GraphQL field.
                      type: object
                  type: object
                description: |-
                  Map of GraphQL types to field resolutions.
                  The key must match the GraphQL type name and is case-sensitive.
                  Every field under GraphQL root types (Query, Mutation) must have a resolver defined.
                type: object
            type: object
          status:
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns the GraphQLResolverMap
                properties:
                  workspace:
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/extensions.policy.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 8bc4ec4c05c407fa
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: wasmdeploymentpolicies.extensions.policy.gloo.solo.io
spec:
  group: extensions.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WasmDeploymentPolicy
    listKind: WasmDeploymentPolicyList
    plural: wasmdeploymentpolicies
    shortNames:
    - wdp
    singular: wasmdeploymentpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              WasmDeploymentPolicy is used to deploy Wasm filters to workloads which have injected (sidecars) or are standalone proxies (gateways).
              WasmDeploymentPolicies are applied at the *Workload* level.
            properties:
              applyToWorkloads:
                description: |-
                  select the workloads where access logs will be collected.
                  if left empty, will apply to all workloads in the workspace.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The configuration of the specifying the WASM filters
                  to apply to the selected workloads.
                properties:
                  filters:
                    description: Specify WASM filter parameters.
                    items:
                      allOf:
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - localPathSource
                            - required:
                              - httpUriSource
                            - required:
                              - wasmImageSource
                        - required:
                          - localPathSource
                        - required:
                          - httpUriSource
                        - required:
                          - wasmImageSource
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - staticFilterConfig
                            - required:
                              - dynamicFilterConfig
                        - required:
                          - staticFilterConfig
                        - required:
                          - dynamicFilterConfig
                      properties:
                        dynamicFilterConfig:
                          description: |-
                            Provide configuration from a dynamic configuration source.
                            This is used to connect proxies to a user-provided configuration server
                            rather than using the WasmDeployment CR to update filter configuration.
                            NOTE: Not currently implemented. This field serves as a placeholder.
                            passing it to the plugin. `google.protobuf.BytesValue` and
                            `google.protobuf.StringValue` are passed directly without the wrapper.
                            TODO(ilackarms): implement with dynamic filter config source (FCDS) https://github.com/envoyproxy/envoy/issues/7867
                          type: string
                        filterContext:
                          description: |-
                            The specific config generation context to which to attach the filter. Istio
                            generates envoy configuration in the context of a gateway,
                            inbound traffic to sidecar and outbound traffic from sidecar.
                            Uses the Istio default (`ANY`).
                          enum:
                          - ANY
                          - SIDECAR_INBOUND
                          - SIDECAR_OUTBOUND
                          - GATEWAY
                          type: string
                        httpUriSource:
                          description: |-
                            Select `http_uri_source` to deploy the filter from an HTTP/S URI accessible
                            to the workload proxy. Note that Gloo Mesh cannot verify
                            whether the target workload proxy containers have HTTP access the given URI.
                            If filters do not load, please inspect the sidecar proxy logs.
                            TODO(ilackarms): see if we can somehow verify the filter exists in the proxy container and surface that on the WasmDeployment status
                            TODO(ilackarms): we may need to provide options for customizing the Cluster given to envoy along with the HTTP Fetch URI. currently Gloo Mesh will create a simple plaintext HTTP cluster from the Host/Port specified in the URI.
                          properties:
                            sha:
                              description: Required. The Sha256 Checksum of the filter
                                binary (will be verified by the proxy).
                              type: string
                            uri:
                              description: The HTTP URI from which to fetch the filter.
                              type: string
                          type: object
                        insertBeforeFilter:
                          description: |-
                            The filter in the Envoy HTTP Filter Chain immediately before which the WASM filter will be
                            inserted.
                            Defaults to `envoy.router`.
                          type: string
                        localPathSource:
                          description: |-
                            Select `local_path_source` to deploy the filter from a file accessible
                            to the workload proxy. Note that Gloo Mesh cannot verify
                            whether the target workload proxy containers contain the given path.
                            If filters do not load, please inspect the sidecar proxy logs.
                            TODO(ilackarms): see if we can somehow verify the filter exists in the proxy container and surface that on the WasmDeployment status
                          type: string
                        rootId:
                          description: |-
                            The `root id` must match the `root id` defined inside the filter.
                            If the user does not provide this field, Gloo Mesh will pull the image
                            and set it from the `filter_conf` contained in the image config.
                            Note that if the `filter_source` is not set to `wasm_image_source`, this field is required.
                          type: string
                        staticFilterConfig:
                          description: |-
                            Provide configuration as a static
                            `google.protobuf.Struct` is serialized as JSON before
                            passing it to the plugin. `google.protobuf.BytesValue` and
                            `google.protobuf.StringValue` are passed directly without the wrapper.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        vmId:
                          description: |-
                            An ID which will be used along with a hash of the wasm code
                            (or the name of the registered Null VM plugin) to determine which VM will be used to load the WASM filter.
                            All filters on the same proxy which use the same `vm_id` and code within will use the same VM.
                            May be left blank. Sharing a VM between plugins can reduce memory utilization and make sharing of data easier which may have security implications.
                          type: string
                        wasmImageSource:
                          description: |-
                            fetch the image from a [WASM OCI Registry](https://webassemblyhub.io/)
                            Images can be built and pushed to registries using `meshctl` and `wasme`.
                          properties:
                            wasmImageTag:
                              description: The full tag of the wasm image. It must
                                include the registry address at the beginning, e.g.
                                "webassemblyhub.io/ilackarms/helloworld:v0.1".
                              type: string
                          type: object
                      type: object
                    type: array
                  weight:
                    description: |-
                      Weight is used to determine the order of WASM Filters when applying
                      multiple WasmDeployments to a single workload.
                      Deployed WASM filters will be sorted in order of
                      highest to lowest weight. WasmDeployments with equal weights will be
                      sorted non-deterministically.
                      Note that all WASM Filters are currently inserted just before the Envoy router filter
                      in the HTTP Connection Manager's HTTP Filter Chain.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            description: reflects the status of the WasmDeploymentPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedWorkloadRefs:
                items:
                  properties:
                    kind:
                      enum:
                      - UNRECOGNIZED_WORKLOAD
                      - DEPLOYMENT
                      - DAEMON_SET
                      - STATEFUL_SET
                      - REPLICA_SET
                      type: string
                    ref:
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              selectedWorkloads:
                description: |-
                  Workloads selected by the policy
                  DEPRECATED: Use selected_workload_refs instead
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/install.istio.io_v1alpha1_crds.yaml
# SYNC WITH manifests/charts/base/files
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: istiooperators.install.istio.io
  labels:
    release: istio
spec:
  conversion:
    strategy: None
  group: install.istio.io
  names:
    kind: IstioOperator
    listKind: IstioOperatorList
    plural: istiooperators
    singular: istiooperator
    shortNames:
    - iop
    - io
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Istio control plane revision
      jsonPath: .spec.revision
      name: Revision
      type: string
    - description: IOP current state
      jsonPath: .status.status
      name: Status
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
---

---
# Source: crds/internal.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 26a5d5edaa23edb9
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: issuedcertificates.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: IssuedCertificate
    listKind: IssuedCertificateList
    plural: issuedcertificates
    shortNames:
    - ic
    singular: issuedcertificate
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              IssuedCertificates are used to issue SSL certificates
                 to workload Kubernetes clusters from a central (out-of-cluster) Certificate Authority.

                 When an IssuedCertificate is created, a certificate is issued to a workload cluster by
                 a central Certificate Authority via the following workflow:

                 1. The Certificate Issuer creates the IssuedCertificate resource on the remote cluster
                 2. The Certificate Signature Requesting agent installed to the remote cluster generates
                   a Certificate Signing Request (CSR) and writes it to the status of the IssuedCertificate
                 3. Finally, the Certificate Issuer generates a signed certificate for the CSR and writes
                   it back as Kubernetes Secret in the remote cluster.

                 Trust can therefore be established across the Gloo Mesh server cluster and agents on workload clusters
                 without requiring private keys to ever leave workload clusters.

                 The certificate requested here is for Gloo Mesh agents on workload clusters to securely establish communication
                 with Gloo Mesh server. This is not related to certificates for services running in the mesh.
            oneOf:
            - not:
                anyOf:
                - properties:
                    mgmtServerCa:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - signingCertificateSecret
                      - required:
                        - signingCertificateSecret
                  required:
                  - mgmtServerCa
                - properties:
                    agentCa:
                      oneOf:
                      - not:
                          anyOf:
                          - properties:
                              vault:
                                allOf:
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - caBundle
                                      - required:
                                        - caSecretRef
                                      - required:
                                        - caLocalPath
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - tokenSecretRef
                                      - properties:
                                          kubernetesAuth:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        required:
                                        - kubernetesAuth
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                            required:
                            - vault
                      - properties:
                          vault:
                            allOf:
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                              - required:
                                - tokenSecretRef
                              - properties:
                                  kubernetesAuth:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                required:
                                - kubernetesAuth
                        required:
                        - vault
                  required:
                  - agentCa
            - properties:
                mgmtServerCa:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - signingCertificateSecret
                  - required:
                    - signingCertificateSecret
              required:
              - mgmtServerCa
            - properties:
                agentCa:
                  oneOf:
                  - not:
                      anyOf:
                      - properties:
                          vault:
                            allOf:
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                              - required:
                                - tokenSecretRef
                              - properties:
                                  kubernetesAuth:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                required:
                                - kubernetesAuth
                        required:
                        - vault
                  - properties:
                      vault:
                        allOf:
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                          - required:
                            - caBundle
                          - required:
                            - caSecretRef
                          - required:
                            - caLocalPath
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - tokenSecretRef
                              - properties:
                                  kubernetesAuth:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                required:
                                - kubernetesAuth
                          - required:
                            - tokenSecretRef
                          - properties:
                              kubernetesAuth:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                - required:
                                  - serviceAccountRef
                                - required:
                                  - mountedSaPath
                            required:
                            - kubernetesAuth
                    required:
                    - vault
              required:
              - agentCa
            properties:
              agentCa:
                description: Agent CA options
                properties:
                  vault:
                    description: Use vault as the intermediate CA source
                    properties:
                      caBundle:
                        description: Inline CA bytes
                        format: binary
                        type: string
                      caLocalPath:
                        description: Path to a local file containing the CA bytes
                        type: string
                      caPath:
                        description: |-
                          `ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                          "my_pki_mount/sign/my-role-name".
                        type: string
                      caSecretRef:
                        description: |-
                          Reference to a secret containing the CA bytes.
                          The CA should be stored by the key `root-cert.pem`
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                      csrPath:
                        description: |-
                          `csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:
                          "my_pki_mount/intermediate/generate/exported".
                          "exported" is necessary here as istio needs access to the private key
                          See vault docs here: https://www.vaultproject.io/api-docs/secret/pki#parameters-4
                        type: string
                      kubernetesAuth:
                        description: |-
                          Kubernetes authenticates with Vault by passing the ServiceAccount
                          token stored in the named Secret resource to the Vault server.
                        properties:
                          mountPath:
                            description: |-
                              The Vault mountPath here is the mount path to use when authenticating with
                              Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                              `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                              default value "/v1/auth/kubernetes" will be used.
                            type: string
                          mountedSaPath:
                            description: |-
                              File System path to grab the service account token from.
                              Defaults to /var/run/secrets/kubernetes.io/serviceaccount
                            type: string
                          role:
                            description: |-
                              A required field containing the Vault Role to assume. A Role binds a
                              Kubernetes ServiceAccount with a set of Vault policies.
                            type: string
                          secretTokenKey:
                            description: |-
                              Key to search for the sa_token
                              Default to "token"
                            type: string
                          serviceAccountRef:
                            description: Reference to service account, other than
                              the one mounted to the current pod.
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                        type: object
                      namespace:
                        description: |-
                          Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                          More about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)
                        type: string
                      server:
                        description: 'Server is the connection address for the Vault
                          server, e.g: "https://vault.example.com:8200".'
                        type: string
                      tokenSecretRef:
                        description: TokenSecretRef authenticates with Vault by presenting
                          a token.
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                type: object
              autoRestartPods:
                description: |-
                  Signals whether or not the workload pods should be restarted
                  to pick up the new cert.
                type: boolean
              certOptions:
                description: Set of options to configure the intermediate certificate
                  being generated
                properties:
                  orgName:
                    description: Root cert organization name. Defaults to "gloo-mesh".
                    type: string
                  rsaKeySizeBytes:
                    description: Size in bytes of the root cert's private key. Defaults
                      to 4096.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  secretRotationGracePeriodRatio:
                    description: |-
                      The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                      we would refresh 6 minutes before expiration
                    format: float
                    type: number
                  ttlDays:
                    description: Number of days before root cert expires. Defaults
                      to 365.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              hosts:
                description: |-
                  A list of hostnames and IPs to generate a certificate for.
                          This can also be set to the identity running the workload,
                          e.g. a Kubernetes service account.

                          Generally for an Istio CA this will take the form `spiffe://cluster.local/ns/istio-system/sa/citadel`.

                          "cluster.local" may be replaced by the root of trust domain for the mesh.
                items:
                  type: string
                type: array
              issuedCertificateSecret:
                description: |-
                  The secret containing the SSL certificate to be generated for this IssuedCertificate (located in the Gloo Mesh agent's cluster).
                  If nil, the sidecar agent stores the signing certificate in memory. (Enterprise only)
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              meshRef:
                description: Reference to the mesh on which this cert is being issued
                  for.
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              mgmtServerCa:
                description: Gloo Mesh CA options
                properties:
                  signingCertificateSecret:
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: The IssuedCertificate status is written by the CertificateRequesting
              agent.
            properties:
              error:
                description: |-
                  Any error observed which prevented the CertificateRequest from being processed.
                  If the error is empty, the request has been processed successfully.
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the the IssuedCertificate metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this IssuedCertificate.
                format: int64
                type: integer
              state:
                description: The current state of the IssuedCertificate workflow,
                  reported by the agent.
                enum:
                - PENDING
                - REQUESTED
                - ISSUED
                - FINISHED
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 6ed1f78c05e8509c
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: certificaterequests.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CertificateRequest
    listKind: CertificateRequestList
    plural: certificaterequests
    shortNames:
    - cr
    singular: certificaterequest
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CertificateRequests are generated by the Gloo Mesh agent installed on workload clusters.
                 They are used to request a signed certificate from the certificate issuer (the Gloo Mesh server) based on a private key
                 generated by the agent (which never leaves the workload cluster).

                 When Gloo Mesh server creates an IssuedCertificate on a workload cluster, the local Gloo Mesh agent
                 will generate a CertificateRequest corresponding to it.

                 Gloo Mesh will then process the certificate signing request contained in the
                 `CertificateRequestSpec` and write the signed SSL certificate back as a Kubernetes secret in the workload cluster,
                 and update the `CertificateRequestStatus` to point to that secret.

                 The certificate requested here is for Gloo Mesh agents on workload clusters to securely establish communication
                 with Gloo Mesh server. This is not related to certificates for services running in the mesh.
            properties:
              certificateSigningRequest:
                description: |-
                  Base64-encoded data for the PKCS#10 Certificate Signing Request issued
                  by the Gloo Mesh agent deployed in the workload cluster, corresponding
                  to the IssuedRequest received by the Gloo Mesh agent.
                format: binary
                type: string
            type: object
          status:
            properties:
              certChain:
                description: The cert chain of signing CA.
                format: binary
                type: string
              error:
                description: |-
                  Any error observed which prevented the CertificateRequest from being processed.
                  If the error is empty, the request has been processed successfully
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the the CertificateRequest metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the issuer has not processed the most
                  recent version of this request.
                format: int64
                type: integer
              signedCertificate:
                description: The signed intermediate certificate issued by the CA.
                format: binary
                type: string
              signingRootCa:
                description: The root CA used by the issuer to sign the certificate.
                format: binary
                type: string
              state:
                description: The current state of the CertificateRequest workflow
                  reported by the issuer.
                enum:
                - PENDING
                - FINISHED
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 2957c9243711d6b9
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: podbouncedirectives.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: PodBounceDirective
    listKind: PodBounceDirectiveList
    plural: podbouncedirectives
    shortNames:
    - pbd
    singular: podbouncedirective
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              When certificates are issued, Istio-controlled pods need to be bounced (restarted) to ensure they pick up the
                 new certificates due to [this issue](https://github.com/istio/istio/issues/22993).
                 The certificate issuer will create a PodBounceDirective containing the namespaces and labels
                 of the pods that need to be bounced in order to pick up the new certs.
            properties:
              meshRef:
                description: Reference to the mesh on which this cert is being issued
                  for
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              podsToBounce:
                description: |-
                  A list of Kubernetes pods to bounce (delete and cause a restart)
                  when the certificate is issued.
                  This will include the control plane pods as well as any Pods
                  which share a data plane with the target mesh.
                items:
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Any labels shared by the Pods.
                      type: object
                    namespace:
                      description: The namespace in which the pods live.
                      type: string
                    rootCertSync:
                      description: |-
                        Wait for the control plane to have synced all root cert configmaps in data plane namespaces before
                        bouncing these Pods.
                      properties:
                        configMapKey:
                          type: string
                        configMapRef:
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        secretKey:
                          type: string
                        secretRef:
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                    waitForReplicas:
                      description: |-
                        Wait for this number of replacement pods to reach be fully ready before
                        deleting the next set of selected Pods.
                        This is used to ensure the control plane pods are allowed to restart
                        before sidecars and gateways are restarted.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
            type: object
          status:
            description: PodBounceDirectiveStatus reports the status for stateful
              Pod bounces (when bouncing pods requires waiting for readiness).
            properties:
              error:
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the the PodBounceDirective metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this IssuedCertificate.
                format: int64
                type: integer
              podsBounced:
                description: |-
                  A list of Kubernetes pods to bounce (delete and cause a restart)
                  when the certificate is issued.
                  This will include the control plane pods as well as any Pods
                  which share a data plane with the target mesh.
                items:
                  properties:
                    bouncedPods:
                      description: The names of the pods that were bounced for the
                        corresponding selector specified in `PodBounceDirectiveSpec.PodSelector.labels`.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              state:
                description: The current state of the IssuedCertificate workflow,
                  reported by the agent.
                enum:
                - PENDING
                - BOUNCING_PODS
                - FAILED
                - FINISHED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 42da09bcbb424701
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: xdsconfigs.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: XdsConfig
    listKind: XdsConfigList
    plural: xdsconfigs
    shortNames:
    - xc
    singular: xdsconfig
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              XdsConfigs are used to issue xDS Configuration Resources to running Envoy instances.
                 They are created by Gloo Mesh for processing by an agent running on managed clusters.

                 The agent will serve the specified xDS configuration resources on its grpc-xds port (default 9977)
                 to the Envoy instances (nodes) defined in the XDSConfigSpec.

                 This feature is currently only available in Gloo Mesh Enterprise.
            properties:
              types:
                description: |-
                  The xDS resources to serve to the nodes.
                  Mapped by type URL.
                items:
                  properties:
                    resources:
                      description: Stored as compressed, base-64 encoded raw bytes.
                      items:
                        properties:
                          compressedData:
                            description: Stored as compressed, base-64 encoded raw
                              bytes.
                            format: binary
                            type: string
                          name:
                            description: Name of the resource as referenced by xDS.
                            type: string
                        type: object
                      type: array
                    typeUrl:
                      description: The type URL of the resources in the given set.
                      type: string
                  type: object
                type: array
              workloads:
                description: The Workloads that will receive this xDS Configuration.
                items:
                  properties:
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: The XdsConfig status is written by the CertificateRequesting
              agent.
            properties:
              error:
                description: |-
                  Any error observed which prevented the XdsConfig from being processed.
                  If the error is empty, the request has been processed successfully.
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the the XdsConfig metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this XdsConfig.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a13fffa37c2937f1
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: discoveredgateways.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: DiscoveredGateway
    listKind: DiscoveredGatewayList
    plural: discoveredgateways
    shortNames:
    - dg
    singular: discoveredgateway
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A DiscoveredGateway is an internal representation of an Istio Gateway workload.
                 DiscoveredGateways are automatically detected from Istio Gateway deployments and services.
            properties:
              externalAddresses:
                description: The externally-reachable addresses on which the gateway
                  is listening for connections.
                items:
                  properties:
                    address:
                      description: |-
                        The externally-reachable address on which the gateway is listening for connections.
                        Depending on the gateway service type and its properties, this can be a LoadBalancer address
                        reported by Kubernetes, an externally-reachable Node address, and a user-defined external IP set on the service.
                      type: string
                    locality:
                      description: The locality in which the node serving this address
                        resides, typically representing a large geographic area.
                      properties:
                        region:
                          description: |-
                            Represents a large geographic area, such as us-east1. A region typically contains a number of availability zones.
                            A workload's region is determined by the value of the "topology.kubernetes.io/region" label (or the deprecated
                            "failure-domain.beta.kubernetes.io/region" one) of the Node
                            that is running it.
                          type: string
                        subZone:
                          description: |-
                            A zone can be divided into sub-zones to have even more fine-grained control over load balancing behavior.
                            The sub-zone concept doesn't exist in Kubernetes. This value is derived by the Istio-specific
                            "topology.istio.io/subzone" Node label.
                          type: string
                        zone:
                          description: |-
                            Represents an availability zone within a region, e.g. us-east-1a.
                            A workload's zone is determined by the value of the "topology.kubernetes.io/zone" label (or the deprecated
                            "failure-domain.beta.kubernetes.io/zone" one) of the Node that is running it.
                          type: string
                      type: object
                    ports:
                      description: The externally-reachable ports on which the gateway
                        is listening for connections.
                      items:
                        properties:
                          name:
                            description: |-
                              A label for the port, eg "http".
                              This will match the port name from the underlying gateway k8s Service.
                            type: string
                          number:
                            description: The port number exposed on the underlying
                              gateway k8s Service.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          protocol:
                            description: |-
                              The protocol used in communication with this destination
                              MUST be one of the following: HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              service:
                description: Reference to the Kubernetes service that exposes the
                  gateway workloads.
                properties:
                  clusterName:
                    description: name of the cluster in which the resource exists
                    type: string
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              serviceAccountRefs:
                description: References to any service accounts selected by the service
                  that exposes the gateway workloads.
                items:
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                type: array
              serviceType:
                description: gateway resource type
                enum:
                - CLUSTER_IP
                - NODE_PORT
                - LOAD_BALANCER
                - EXTERNAL_NAME
                type: string
              workloadLabels:
                additionalProperties:
                  type: string
                description: The labels used by the Kubernetes service to select the
                  gateway workloads.
                type: object
            type: object
          status:
            properties:
              generic:
                properties:
                  message:
                    description: Additional information about the current state of
                      the resource.
                    type: string
                  observedGeneration:
                    description: |-
                      The most recent generation observed in the the object's metadata.
                      If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                      has not processed the most recent version of this object.
                    format: int64
                    type: integer
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in the Gloo
                      Mesh config translation.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              virtualGateways:
                description: VirtualGateways selecting this discovered gateway
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: c9e6b11e60882ae
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: meshes.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: A Mesh is an internal representation of a service mesh control
              plane deployment.
            properties:
              agentInfo:
                description: Describes the Gloo Mesh agent if it has been installed
                  to the managed cluster.
                properties:
                  namespace:
                    description: The namespace in which the Gloo Mesh agent is installed.
                    type: string
                  version:
                    description: The version of the Gloo Mesh agent.
                    type: string
                type: object
              discoveryNamespaces:
                description: |-
                  The list of namespaces that are part of the mesh, which is computed based
                  on the [discovery selectors](https://istio.io/latest/blog/2021/discovery-selectors/)
                  defined in the Istio Mesh Config.
                  And empty value implies that the Istio control place processes resources from all namespaces.
                items:
                  type: string
                type: array
              installation:
                description: Describes the Istio control plane deployment.
                properties:
                  cluster:
                    description: The Gloo Mesh cluster in which the control plane
                      has been installed.
                    type: string
                  namespace:
                    description: Namespace in which the control plane has been installed.
                    type: string
                  podLabels:
                    additionalProperties:
                      type: string
                    description: The labels on the control plane pods (read from the
                      deployment).
                    type: object
                  revision:
                    description: The revision of the Istio control plane that has
                      been installed.
                    type: string
                  version:
                    description: |-
                      The version of the Mesh that has been installed, which is determined using the image tag on the
                      mesh's primary control plane image (e.g. the istio-pilot image tag).
                    type: string
                type: object
              istiodServiceAccount:
                description: The istiod service account which determines identity
                  for the Istio CA cert.
                type: string
              rootNamespace:
                description: |-
                  Root Namespace as specified in the Istio Mesh Config.
                  This namespace will be treated as the home for all root Istio config.
                type: string
              smartDnsProxyingEnabled:
                description: True if smart DNS proxying is enabled, which allows for
                  arbitrary DNS domains.
                type: boolean
              trustDomain:
                description: |-
                  The Istio trust domain used for https/[spiffe](https://spiffe.io/spiffe/concepts/#trust-domain) [identity](https://istio.io/docs/reference/glossary/#identity).
                  If empty will default to ["cluster.local"](https://github.com/istio/istio/blob/e768f408a7de224e64ccdfb2634442541ce08e6a/pilot/cmd/pilot-agent/main.go#L118).
                type: string
            type: object
          status:
            properties:
              observedGeneration:
                description: |-
                  The observed generation of the Mesh.
                  When this matches the Mesh's metadata.generation, it indicates that Gloo Mesh
                  has processed the latest version of the Mesh.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 50667678335eae15
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: discoveredcnis.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: DiscoveredCNI
    listKind: DiscoveredCNIList
    plural: discoveredcnis
    shortNames:
    - dcni
    singular: discoveredcni
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A DiscoveredCNISpec is an internal representation of a CNI discovered to be running in a cluster.
                 DiscoveredCNIs are automatically detected from the node agent (DaemonSet) which runs on each CNI-networked cluster.
            properties:
              agent:
                description: Reference to the Kubernetes DaemonSet that runs throughout
                  the cluster.
                properties:
                  clusterName:
                    description: name of the cluster in which the resource exists
                    type: string
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              metricsPortNumber:
                description: the port number used to service CNI metrics.
                maximum: 4294967295
                minimum: 0
                type: integer
              provider:
                description: The provider of CNI installed.
                enum:
                - CILIUM
                - CALICO
                type: string
              version:
                description: the version of the CNI installed.
                type: string
            type: object
          status:
            properties:
              observedGeneration:
                description: |-
                  The observed generation of the DiscoveredGateway.
                  When this matches the DiscoveredGateway metadata.generation, it indicates that Gloo Mesh
                  has processed the latest version of the DiscoveredGateway.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/networking.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: b238397c66777138
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: externalservices.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExternalService
    listKind: ExternalServiceList
    plural: externalservices
    shortNames:
    - es
    singular: externalservice
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ExternalService defines a destination for routing which exist outside the mesh.
              This could for example be a web API or a set of virtual machines that are not running in Kubernetes.
              When an ExternalService is defined for a given workspace, it can be used as a
              Destination in Routes, as well as called directly via its specified hostname.
              Resolution of the IP addresses for external services can be done via DNS
              or provided statically using the ExternalEndpoint object.
            properties:
              addresses:
                description: |-
                  (mutually exclusive with hosts): The List of ipv4 or ipv6 addresses which will be associated to this service. Can be CIDR prefixes.
                  These addresses must be unique among all ExternalServices within a workspace.
                items:
                  type: string
                type: array
              hosts:
                description: |-
                  (mutually exclusive with addresses): The List of hostnames which will resolve to this service.
                  These hosts must be unique among all ExternalServices and VirtualHosts within a workspace.
                  Both FQDN and wildcard prefix domains are supported.
                  TLS origination to ExternalServices is supported with use of the ClientsideTls property.
                items:
                  type: string
                type: array
              ports:
                description: The associated ports of the external service.
                items:
                  properties:
                    clientsideTls:
                      description: |-
                        The tls config for the given port.
                        If the protocol is HTTPS or TLS, the ExternalService will be configured to use TLS automatically.
                        If used in conjunction with targetPort this can be used for TLS Origination.
                        For example, port: 80, targetPort: 443, with ClientsideTls will cause port 80 traffic from workloads to be forwarded to 443 resulting in HTTPS traffic over the internet with TLS originating at the sidecar proxy.
                      properties:
                        sni:
                          description: |-
                            SNI string to present to the server during TLS handshake.
                            If there is a single host in the hosts list, this will be used as the SNI string.
                          type: string
                      type: object
                    name:
                      description: A label for the port, eg "http".
                      type: string
                    number:
                      description: The port number. Must be a valid, non-negative
                        integer port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    protocol:
                      description: |-
                        The protocol used in communication with this destination
                        MUST be one of the following: HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                      type: string
                    targetPort:
                      description: |-
                        (optional): The port number or name used to match the corresponding port on the ExternalService's backing ExternalEndpoints.
                        All of the backing ExternalEndpoints for this ExternalService must contain
                        this port, matching by name or number.
                        If no backing ExternalEndpoints are provided, a name selector is invalid,
                        and requests will be routed to the provided hosts on the port number specified.
                        If unspecified, will default to the value of the port number field above.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                type: array
              selector:
                additionalProperties:
                  type: string
                description: |-
                  Selecting ExternalEndpoints will provide the addresses used for routing traffic to on the ExternalService's hosts.
                  An empty selector will not select any endpoints.
                  If no endpoints are selected, requests will be routed to the provided hosts using dns resolution.
                type: object
              subjectAltNames:
                description: |-
                  A list of alternate names to verify the subject identity in the
                  certificate. If specified, the proxy will verify that the server
                  certificate's subject alt name matches one of the specified values.
                  Only applicable when using TLS to communicate with the ExternalService.
                items:
                  type: string
                type: array
            type: object
          status:
            description: reflects the status of the ExternalService
            properties:
              appliedDestinationPolicies:
                additionalProperties:
                  properties:
                    policies:
                      description: List of applied destination port policies
                      items:
                        properties:
                          destinationKind:
                            description: the kind of destination object that the policy
                              applies to
                            enum:
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            type: string
                          destinationPort:
                            description: the port on the destination object that the
                              policy applies to
                            format: int32
                            type: integer
                          policy:
                            description: The reference to the policy
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
                description: |-
                  Map of policy GVK to policy references for all policies applied on this
                  resource.
                type: object
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns ExternalService
                properties:
                  workspace:
                    type: string
                type: object
              selectedExternalEndpoints:
                description: The list of endpoints that this ExternalService is currently
                  using.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 42a6a63e953d3cc1
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: externalendpoints.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExternalEndpoint
    listKind: ExternalEndpointList
    plural: externalendpoints
    shortNames:
    - ep
    singular: externalendpoint
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: ExternalEndpoint defines a static IP for routing which exist
              outside the mesh. ExternalEndpoints provide a mechanism for direct resolution
              of the addresses backing ExternalServices.
            properties:
              address:
                description: |-
                  Address associated with the network endpoint without the
                  port.  Domain names can be used if and only if the resolution is set
                  to DNS, and must be fully-qualified without wildcards. Use the form
                  unix:///absolute/path/to/socket for Unix domain socket endpoints.
                type: string
              locality:
                description: |-
                  The locality associated with the endpoint. A locality corresponds
                  to a failure domain (e.g., country/region/zone). Arbitrary failure
                  domain hierarchies can be represented by separating each
                  encapsulating failure domain by /. For example, the locality of an
                  an endpoint in US, in US-East-1 region, within availability zone
                  az-1, in data center rack r11 can be represented as
                  us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
                  endpoints within the same locality as the sidecar. If none of the
                  endpoints in the locality are available, endpoints parent locality
                  (but within the same network ID) will be chosen. For example, if
                  there are two endpoints in same network (networkID "n1"), say e1
                  with locality us/us-east-1/az-1/r11 and e2 with locality
                  us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
                  will prefer e1 from the same locality over e2 from a different
                  locality. Endpoint e2 could be the IP associated with a gateway
                  (that bridges networks n1 and n2), or the IP associated with a
                  standard service endpoint.
                properties:
                  region:
                    description: |-
                      Represents a large geographic area, such as us-east1. A region typically contains a number of availability zones.
                      A workload's region is determined by the value of the "topology.kubernetes.io/region" label (or the deprecated
                      "failure-domain.beta.kubernetes.io/region" one) of the Node
                      that is running it.
                    type: string
                  subZone:
                    description: |-
                      A zone can be divided into sub-zones to have even more fine-grained control over load balancing behavior.
                      The sub-zone concept doesn't exist in Kubernetes. This value is derived by the Istio-specific
                      "topology.istio.io/subzone" Node label.
                    type: string
                  zone:
                    description: |-
                      Represents an availability zone within a region, e.g. us-east-1a.
                      A workload's zone is determined by the value of the "topology.kubernetes.io/zone" label (or the deprecated
                      "failure-domain.beta.kubernetes.io/zone" one) of the Node that is running it.
                    type: string
                type: object
              ports:
                description: Set of ports on which the ExternalEndpoint's address
                  receives traffic.
                items:
                  properties:
                    name:
                      description: name of the port. required if more then one port
                        is specified on the ExternalEndpoint
                      type: string
                    number:
                      description: the port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the ExternalEndpoint
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: b9bfd5c3b5cd9c32
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: routetables.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RouteTable
    listKind: RouteTableList
    plural: routetables
    shortNames:
    - rt
    singular: routetable
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `RouteTables` defines one or more hosts and a set of traffic route rules to handle traffic for these hosts.
              The traffic route rules can be delegated to other RouteTable based on one or more given hosts or specific paths.

              You may deploy a RouteTable resource in any namespace within your workspace. In order for the RouteTable to be used
              outside of your workspace, you must deploy the RouteTable resource in the root config of your workspace and label it
              with `workspace.solo.io/exported: "true"`. If your RouteTable delegates some traffic rules to another RouteTable,
              the delegated RouteTable may reside in the same workspace or different workspace from your RouteTable. If they are
              in different workspaces, the delegated RouteTable must reside in the root config of their
              workspaces and labelled with `workspace.solo.io/exported: "true"`.

              RouteTable can be used to match traffic originating from a gateway as well as from sidecars within the mesh,
              depends on the configuration of the `virtualGateways` field.

              The following example defines route configuration for the 'uk.bookinfo.com' and 'eu.bookinfo.com' hosts,
              when traffic arriving at the `my-gateway` virtual gateway which is declared in the `my-gateway-ws` workspace.
              When the cookie in the header matches to 'user=dev-123', traffic is forwarded to the port 7777 of the
              `v1` of `reviews.qa`. When the path matches exactly to `/reviews/`, 80% traffic is forwarded to the port 9080
              of `reviews.prod` and 20% traffic is forwarded to the port 9080 of `reviews.qa`. All other traffic is sent
              to the default destination, which is the port 9080 of `reviews.prod` service in the `bookinfo` workspace.
              apiVersion: networking.gloo.solo.io/v2
              kind: RouteTable
              metadata:
                name: bookinfo-root-routes
                namespace: bookinfo
              spec:
                hosts:
                  - 'uk.bookinfo.com'
                  - 'eu.bookinfo.com'
                virtualGateways:
                  - name: my-gateway
                    namespace: my-gateway-ws
                defaultDestination:
                  ref:
                    name: reviews
                    namespace: prod
                  port:
                    number: 9080
                http:
                  - name: reviews-qa
                    matchers:
                      - headers:
                          - name: cookie
                            value: 'user=dev-123'
                    forwardTo:
                      destinations:
                        - ref:
                            name: reviews
                            namespace: qa
                          subset:
                            version: v1
                          port:
                            number: 7777
                  - name: reviews
                    matchers:
                      - name: review-prefix
                        uri:
                          exact: /reviews/
                    forwardTo:
                      destinations:
                        - weight: 80
                        - ref:
                            name: reviews
                            namespace: qa
                          port:
                            number: 9080
                          weight: 20
            properties:
              defaultDestination:
                description: 'Optional: Routes that do not specify a destination will
                  forward traffic to this destination.'
                properties:
                  kind:
                    description: the kind of destination being selected. defaults
                      to Kubernetes Service.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted.
                      required if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects
                          being targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  ref:
                    description: reference to the destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: select a subset of the destination's endpoints for
                      routing based on their labels.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              hosts:
                description: |-
                  Optional: One or more hosts for which this route table will route traffic.
                  Supports wildcards. To avoid potential misconfigurations, it is recommended to always use fully
                  qualified domain names over short names.
                  *Note*: It must be empty for a delegated RouteTable.
                items:
                  type: string
                type: array
              http:
                description: The set of HTTP routes this route table will serve. If
                  no routes are matched in the route table, the client will get a
                  404.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - forwardTo
                      - required:
                        - delegate
                      - properties:
                          redirect:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - pathRedirect
                            - required:
                              - pathRedirect
                        required:
                        - redirect
                      - required:
                        - directResponse
                      - properties:
                          graphql:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - stitchedSchemaRef
                                - properties:
                                    executableSchema:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - server
                                          - required:
                                            - local
                                      - required:
                                        - server
                                      - required:
                                        - local
                                  required:
                                  - executableSchema
                            - required:
                              - stitchedSchemaRef
                            - properties:
                                executableSchema:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - server
                                      - required:
                                        - local
                                  - required:
                                    - server
                                  - required:
                                    - local
                              required:
                              - executableSchema
                        required:
                        - graphql
                  - required:
                    - forwardTo
                  - required:
                    - delegate
                  - properties:
                      redirect:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - pathRedirect
                        - required:
                          - pathRedirect
                    required:
                    - redirect
                  - required:
                    - directResponse
                  - properties:
                      graphql:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - stitchedSchemaRef
                            - properties:
                                executableSchema:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - server
                                      - required:
                                        - local
                                  - required:
                                    - server
                                  - required:
                                    - local
                              required:
                              - executableSchema
                        - required:
                          - stitchedSchemaRef
                        - properties:
                            executableSchema:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - server
                                  - required:
                                    - local
                              - required:
                                - server
                              - required:
                                - local
                          required:
                          - executableSchema
                    required:
                    - graphql
                  properties:
                    delegate:
                      description: |-
                        delegate the handling of traffic to one or more HTTP Route Tables. This can be used to
                        delegate a subset of the route table's traffic to another route table, which may live
                        in an imported workspace, or to separate routing concerns between objects.
                      properties:
                        routeTables:
                          description: |-
                            Delegate to the RouteTables that match the given selectors.
                            Selected route tables are ordered by creation time stamp in ascending order to guarantee consistent ordering.
                            Route tables will be selected from the pool of route tables defined within the current workspace, as well as any imported into the workspace.
                          items:
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                          type: array
                        sortMethod:
                          description: How routes should be sorted
                          enum:
                          - TABLE_WEIGHT
                          - ROUTE_SPECIFICITY
                          type: string
                      type: object
                    directResponse:
                      description: respond directly to the client from the proxy.
                      properties:
                        body:
                          description: |-
                            Specifies the content of the response body. If this setting is omitted,
                            no body is included in the generated response.

                            Note: Headers can be specified using the Header Modification feature in the enclosing
                            Route, ConnectionHandler, or Gateway options.
                          type: string
                        status:
                          description: Required. Specifies an HTTP response status
                            between 100-599 inclusive to be returned.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    forwardTo:
                      description: forward traffic to one or more destination services.
                      properties:
                        destinations:
                          description: |-
                            Defines the destination upstream for routing
                            Some destinations require additional configuration for the route (e.g. AWS upstreams require a function name
                            to be specified).
                          items:
                            properties:
                              kind:
                                description: the kind of destination being selected.
                                  defaults to Kubernetes Service.
                                enum:
                                - SERVICE
                                - VIRTUAL_DESTINATION
                                - EXTERNAL_SERVICE
                                type: string
                              port:
                                description: the port on the destination object being
                                  targeted. required if the object provides more than
                                  one port.
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - number
                                    - required:
                                      - name
                                - required:
                                  - number
                                - required:
                                  - name
                                properties:
                                  name:
                                    description: the name of the port on the destination
                                      objects being targeted.
                                    type: string
                                  number:
                                    description: the number of the port on the destination
                                      objects being targeted.
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              ref:
                                description: reference to the destination object by
                                  its metadata
                                properties:
                                  cluster:
                                    description: the cluster of the object. if the
                                      field is omitted, Gloo Mesh will use the same
                                      cluster as the parent object containing this
                                      reference.
                                    type: string
                                  name:
                                    description: the name of the object
                                    type: string
                                  namespace:
                                    description: the namespace of the object. if the
                                      field is omitted, Gloo Mesh will use the same
                                      namespace as the parent object containing this
                                      reference.
                                    type: string
                                type: object
                              subset:
                                additionalProperties:
                                  type: string
                                description: select a subset of the destination's
                                  endpoints for routing based on their labels.
                                type: object
                              weight:
                                description: |-
                                  Specify the proportion of traffic to be forwarded to this destination.
                                  Weights across all of the `destinations` must sum to 100.
                                  Weight is only relevant when used in the context of a route with multiple destinations.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                        hostRewrite:
                          description: Replace the Authority/Host header with this
                            value before forwarding the request to the upstream destination.
                          type: string
                        pathRewrite:
                          description: |-
                            Replace the path specified in the matcher with this value before forwarding the request to the upstream destination.
                            When a prefix matcher is used, only the prefix portion of the path is rewritten.
                            When an exact matcher is used, the whole path is replaced.
                            Rewriting the path when a regex matcher is used is currently unsupported.
                          type: string
                      type: object
                    graphql:
                      description: |-
                        handle the HTTP request as a GraphQL request, including query validation, and execution of the GraphQL request.
                        The incoming GraphQL request must either be a GET or POST request, see
                        ["Serving over HTTP"](https://graphql.org/learn/serving-over-http/).
                      properties:
                        executableSchema:
                          description: |-
                            Responsible for pairing a GraphQL schema definition with how it's executed,
                            whether that is locally executed (using resolvers and Envoy as the GraphQL engine)
                            or remotely executed (using a remote GraphQL server for the execution).
                          properties:
                            local:
                              description: |-
                                List of references to GraphQLResolverMap resources. GraphQLResolverMaps
                                contain a mapping from GraphQL fields to resolver configuration, so that those fields can be resolved
                                locally by this GraphQL-envoy instance.
                                Order of the references listed below does matter as resolver maps listed first
                                will be given priority over later ones when tie-breaking field resolver configurations.
                              properties:
                                options:
                                  properties:
                                    enableIntrospection:
                                      description: |-
                                        Do we enable introspection for the schema? general recommendation is to
                                        disable this for production and hence it defaults to false.
                                      type: boolean
                                    maxDepth:
                                      description: |-
                                        Max GraphQL operation (query/mutation/subscription) depth. This sets a limitation on the max nesting on a query that runs against this schema.
                                        any GraphQL operation that runs past the `max_depth` will add an error message to the response and will return as `null`.
                                        As as simple example, if the schema is
                                        ```gql
                                        type Query {
                                          employee: Employee
                                        }

                                        type Employee {
                                          manager: Employee
                                          name: String
                                        }
                                        ```
                                        and we set a `max_depth` of `3` and we run a query
                                        ```gql
                                        query {             # query depth : 0
                                          employee {        # query depth : 1
                                            manager {       # query depth : 2
                                              name          # query depth : 3
                                              manager {     # query depth : 3
                                                name        # query depth : 4
                                              }
                                            }
                                          }
                                        }
                                        ```
                                        the graphql server will respond with a response:
                                        ```json
                                        { "data" : {
                                            "employee" : {
                                              "manager" : {
                                                "name" : "Manager 1",
                                                "manager"  : {
                                                  "name" : null
                                          }}}},
                                          "errors": [
                                             {"message": "field 'name' exceeds the max operation depth of 3 for this schema"}
                                           ]
                                        }
                                        If not configured, or the value is 0, the query depth will be unbounded.
                                      maximum: 4294967295
                                      minimum: 0
                                      nullable: true
                                      type: integer
                                  type: object
                                resolverMapRefs:
                                  description: |-
                                    List of references to GraphQLResolverMap resources. GraphQLResolverMaps
                                    contain a mapping from GraphQL fields to resolver configuration, so that those fields can be resolved
                                    locally by this GraphQL-envoy instance.
                                    Order of the references listed below does matter as resolver maps listed first
                                    will be given priority over later ones when tie-breaking field resolver configurations.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which
                                          the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being
                                          referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            schemaRef:
                              description: |-
                                Required: Reference to the ApiSchema object which is of type GraphQL schema, which contains the [GraphQL SDL](https://graphql.org/learn/schema/)
                                defining this GraphQL schema.
                              properties:
                                clusterName:
                                  description: name of the cluster in which the resource
                                    exists
                                  type: string
                                name:
                                  description: name of the resource being referenced
                                  type: string
                                namespace:
                                  description: namespace of the resource being referenced
                                  type: string
                              type: object
                            server:
                              description: |-
                                Configuration to delegate resolving this GraphQL request to an external GraphQL server, which can be
                                another GlooGraphQL instance or another instance of a GraphQL server. The external GraphQL server must
                                be compliant with the [June 2018 GraphQL specification](https://spec.graphql.org/June2018/).
                              properties:
                                graphqlServers:
                                  description: |-
                                    List of destinations that can server GraphQL requests. The external GraphQL server must
                                    be compliant with the [June 2018 GraphQL specification](https://spec.graphql.org/June2018).
                                    Though this is a list, only the first referenced destination will be used until fail-over and load balancing
                                    is supported between multiple GraphQL destinations.
                                  items:
                                    properties:
                                      kind:
                                        description: the kind of destination being
                                          selected. defaults to Kubernetes Service.
                                        enum:
                                        - SERVICE
                                        - VIRTUAL_DESTINATION
                                        - EXTERNAL_SERVICE
                                        type: string
                                      port:
                                        description: the port on the destination object
                                          being targeted. required if the object provides
                                          more than one port.
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - number
                                            - required:
                                              - name
                                        - required:
                                          - number
                                        - required:
                                          - name
                                        properties:
                                          name:
                                            description: the name of the port on the
                                              destination objects being targeted.
                                            type: string
                                          number:
                                            description: the number of the port on
                                              the destination objects being targeted.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                        type: object
                                      ref:
                                        description: reference to the destination
                                          object by its metadata
                                        properties:
                                          cluster:
                                            description: the cluster of the object.
                                              if the field is omitted, Gloo Mesh will
                                              use the same cluster as the parent object
                                              containing this reference.
                                            type: string
                                          name:
                                            description: the name of the object
                                            type: string
                                          namespace:
                                            description: the namespace of the object.
                                              if the field is omitted, Gloo Mesh will
                                              use the same namespace as the parent
                                              object containing this reference.
                                            type: string
                                        type: object
                                      subset:
                                        additionalProperties:
                                          type: string
                                        description: select a subset of the destination's
                                          endpoints for routing based on their labels.
                                        type: object
                                      weight:
                                        description: |-
                                          Specify the proportion of traffic to be forwarded to this destination.
                                          Weights across all of the `destinations` must sum to 100.
                                          Weight is only relevant when used in the context of a route with multiple destinations.
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                    type: object
                                  type: array
                                headers:
                                  additionalProperties:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - variable
                                        - required:
                                          - jq
                                        - required:
                                          - json
                                    - required:
                                      - variable
                                    - required:
                                      - jq
                                    - required:
                                      - json
                                    properties:
                                      jq:
                                        description: |-
                                          The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                          variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                          For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                          Jq filters must only result in one value, or an error will be sent back to the client.
                                          For example, for the input `[1,2,3]`, the jq filter `.[]` is not a valid jq filter as it results
                                          in multiple jq results. However, the jq filter '. | join(",")' is valid as it results in one result: "1,2,3".
                                          Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                          --- Using variables ---
                                          Variables that are declared in the `variables` field are available at the top level of the input JSON object to the
                                          jq filter.
                                          For example, if the following variables have been declared:
                                          ```yaml
                                          variables:
                                            userIdHeader:
                                              request_header: x-user-id
                                            resolverResultVar:
                                              resolver_result: {}
                                          ```
                                          then the input object to the `jq` filter would be
                                          ```json
                                          {
                                           "userIdHeader": <x-user-id header value from GraphQL request>,
                                           "resolverResultVar": { .. the resolver result .. }
                                          }
                                          ```
                                          --- Using a jq filter ---
                                          Given the following input object to the `jq` transformation, we can use a filter to transform the values.
                                          ```json
                                          {
                                           "userIdHeader": "john_doe123",
                                           "resolverResultVar": { "data": {"name": "John Doe"} }
                                          }
                                          ```
                                          If the `jq` filter is defined as
                                          ```
                                          "User: " + .userIdHeader + ", Name: " + .resolverResultVar.data.name
                                          ```
                                          the result of the jq transformation would be
                                          ```
                                          "User john_doe123, Name: John Doe"
                                          ```
                                        type: string
                                      json:
                                        description: Static JSON value.
                                        x-kubernetes-preserve-unknown-fields: true
                                      variable:
                                        description: |-
                                          The name of a variable declared in the `variables` field. The value of the variable
                                          is returned with no transformation.
                                        type: string
                                    type: object
                                  description: |-
                                    map of header name to a transformation on extracted variables which are declared
                                    in the `variables` field.
                                    The transformation must result in a string value, or an error will be sent back to the client.
                                  type: object
                                queryParams:
                                  additionalProperties:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - variable
                                        - required:
                                          - jq
                                        - required:
                                          - json
                                    - required:
                                      - variable
                                    - required:
                                      - jq
                                    - required:
                                      - json
                                    properties:
                                      jq:
                                        description: |-
                                          The [jq](https://stedolan.github.io/jq/manual/) filter which is used to provide a value.
                                          variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                          For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                          Jq filters must only result in one value, or an error will be sent back to the client.
                                          For example, for the input `[1,2,3]`, the jq filter `.[]` is not a valid jq filter as it results
                                          in multiple jq results. However, the jq filter '. | join(",")' is valid as it results in one result: "1,2,3".
                                          Refer to the [jq manual](https://stedolan.github.io/jq/manual/) for jq syntax and tips.
                                          --- Using variables ---
                                          Variables that are declared in the `variables` field are available at the top level of the input JSON object to the
                                          jq filter.
                                          For example, if the following variables have been declared:
                                          ```yaml
                                          variables:
                                            userIdHeader:
                                              request_header: x-user-id
                                            resolverResultVar:
                                              resolver_result: {}
                                          ```
                                          then the input object to the `jq` filter would be
                                          ```json
                                          {
                                           "userIdHeader": <x-user-id header value from GraphQL request>,
                                           "resolverResultVar": { .. the resolver result .. }
                                          }
                                          ```
                                          --- Using a jq filter ---
                                          Given the following input object to the `jq` transformation, we can use a filter to transform the values.
                                          ```json
                                          {
                                           "userIdHeader": "john_doe123",
                                           "resolverResultVar": { "data": {"name": "John Doe"} }
                                          }
                                          ```
                                          If the `jq` filter is defined as
                                          ```
                                          "User: " + .userIdHeader + ", Name: " + .resolverResultVar.data.name
                                          ```
                                          the result of the jq transformation would be
                                          ```
                                          "User john_doe123, Name: John Doe"
                                          ```
                                        type: string
                                      json:
                                        description: Static JSON value.
                                        x-kubernetes-preserve-unknown-fields: true
                                      variable:
                                        description: |-
                                          The name of a variable declared in the `variables` field. The value of the variable
                                          is returned with no transformation.
                                        type: string
                                    type: object
                                  description: |-
                                    map of query parameter name to a transformation on extracted variables which are declared
                                    in the `variables` field.
                                    The transformation must result in a string value, or an error will be sent back to the client.
                                  type: object
                                spanName:
                                  description: |-
                                    The span name for the remote GraphQL request, used for tracing.
                                    If left empty or not set, the request span name will be set to the upstream cluster name.
                                  type: string
                                variables:
                                  additionalProperties:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - dynamicMetadata
                                        - required:
                                          - requestHeader
                                        - required:
                                          - json
                                    - required:
                                      - dynamicMetadata
                                    - required:
                                      - requestHeader
                                    - required:
                                      - json
                                    properties:
                                      dynamicMetadata:
                                        description: Extract the value from envoy
                                          dynamic metadata. The extracted value is
                                          an object.
                                        properties:
                                          key:
                                            description: |-
                                              The key under the envoy dynamic metadata namespace that the data lives under.
                                              If the key doesn't exist in the namespace, the extraction yields null
                                            type: string
                                          metadataNamespace:
                                            description: |-
                                              The envoy dynamic metadata namespace that the data lives in. If the namespace doesn't exist in the
                                              metadata, the extraction yields null
                                            type: string
                                        type: object
                                      json:
                                        description: Assigns the variable to a JSON
                                          value specified here.
                                        x-kubernetes-preserve-unknown-fields: true
                                      requestHeader:
                                        description: |-
                                          Extract the value from the GraphQL HTTP request header. The extracted value is a string.
                                          If the header doesn't exist, an empty string will be used.
                                        type: string
                                    type: object
                                  description: |-
                                    Declare variables that are used in variable transformations in the fields below for the GraphQL request to a remote server.
                                    The keys to this map are the name of the variables. See the variable transformations specifically
                                    for how to reference these variables.
                                  type: object
                              type: object
                          type: object
                        options:
                          description: Options that apply to this GraphQL Schema.
                          properties:
                            logSensitiveInfo:
                              description: |-
                                Include information about request/response in the envoy debug logs.
                                This is helpful for debugging GraphQL
                                Defaults to false.
                              nullable: true
                              type: boolean
                          type: object
                        stitchedSchemaRef:
                          description: Reference to a GraphQLStitchedSchema resource.
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource
                                exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: labels for the route. used to apply policies which
                        implement routeSelectors.
                      type: object
                    matchers:
                      description: |-
                        The set of request matchers which this route will match on. If none are specified, this route will match any HTTP traffic.
                        On a delegated RouteTable, this route will only match traffic that includes both the parent and child's matchers.
                        If these sets conflict, the delegating route on the parent will be replaced with a DirectResponseAction indicating the misconfiguration.
                      items:
                        properties:
                          headers:
                            description: 'Optional: Specify a set of headers which
                              requests must match in entirety (all headers must match).'
                            items:
                              properties:
                                invertMatch:
                                  description: |-
                                    If set to true, the result of the match will be inverted. Defaults to false.

                                       Examples:

                                           - name=foo, invert_match=true: matches if no header named `foo` is present
                                           - name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                           - name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present.
                                  type: boolean
                                name:
                                  description: Specify the name of the header in the
                                    request.
                                  type: string
                                regex:
                                  description: Specify whether the header value should
                                    be treated as regex.
                                  type: boolean
                                value:
                                  description: |-
                                    Specify the value of the header. If the value is absent a request that
                                    has the name header will match, regardless of the header’s value.
                                  type: string
                              type: object
                            type: array
                          method:
                            description: 'Optional: Specify an HTTP method to match
                              against.'
                            type: string
                          name:
                            description: |-
                              Optional: The name assigned to a match. The match's name will be
                              concatenated with the parent route's name and will be logged in
                              the access logs for requests matching this route.
                            type: string
                          port:
                            description: 'Optional: Specifies ports on the host to
                              match against.'
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          queryParameters:
                            description: 'Optional: Specify a set of URL query parameters
                              which requests must match in entirety (all query params
                              must match).'
                            items:
                              properties:
                                name:
                                  description: Specify the name of a key that must
                                    be present in the requested path's query string.
                                  type: string
                                regex:
                                  description: If true, treat `value` as a regular
                                    expression.
                                  type: boolean
                                value:
                                  description: Specify the value of the query parameter
                                    keyed on `name`.
                                  type: string
                              type: object
                            type: array
                          uri:
                            description: 'Optional: Specify match criteria against
                              the targeted path.'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                                - required:
                                  - suffix
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            - required:
                              - suffix
                            properties:
                              exact:
                                description: Exact string match.
                                type: string
                              ignoreCase:
                                description: If true, indicates the exact/prefix/suffix
                                  matching should be case insensitive. This has no
                                  effect for the regex match.
                                type: boolean
                              prefix:
                                description: Prefix-based match.
                                type: string
                              regex:
                                description: ECMAscript style regex-based match.
                                type: string
                              suffix:
                                description: Suffix-based match.
                                type: string
                            type: object
                        type: object
                      type: array
                    name:
                      description: unique name of the route (within the route table).
                        used to identify the route for metrics
                      type: string
                    redirect:
                      description: return a redirect response to the downstream client.
                      properties:
                        hostRedirect:
                          description: The host portion of the URL will be swapped
                            with this value.
                          type: string
                        pathRedirect:
                          description: The entire path portion of the URL will be
                            overwritten with this value.
                          type: string
                        responseCode:
                          description: |-
                            The HTTP status code to use in the redirect response. The default response
                            code is MOVED_PERMANENTLY (301).
                          enum:
                          - MOVED_PERMANENTLY
                          - FOUND
                          - SEE_OTHER
                          - TEMPORARY_REDIRECT
                          - PERMANENT_REDIRECT
                          type: string
                      type: object
                  type: object
                type: array
              virtualGateways:
                description: |-
                  Optional: A list of references to the virtual gateways which should serve this route table.
                  Only valid for route tables which define at least one host.
                  *Note*: Ignored on delegated (non-root) route tables.

                  When not specified, the route table applies to either all the sidecars in the workspace
                  or only sidecars for selected workloads (via the `workloadSelectors` field) in the workspace where
                  the route table is deployed or imported.
                  The following applies to sidecars of all the workloads for the workspace where the route table is
                  deployed or imported.

                  virtualGateways: null
                  workloadSelectors: []

                  The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  no sidecars.

                  virtualGateways:
                    - name: my-gateway
                      namespace: gateway
                  workloadSelectors: []

                  The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  sidecars of all the workloads for the workspace where the route table is
                  deployed or imported.

                  virtualGateways:
                    - name: my-gateway
                      namespace: gateway
                  workloadSelectors:
                    - selector: {}

                  The following applies to sidecars of all the `app: foo` workloads for the workspace where the route table
                  is deployed or imported.

                  virtualGateways: null
                  workloadSelectors:
                    - selector:
                        labels:
                          app: foo

                  The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  sidecars of all the `app: foo` workloads for the workspace where the route table is deployed or imported.

                  virtualGateways:
                    - name: my-gateway
                      namespace: gateway
                  workloadSelectors:
                    - selector:
                        labels:
                          app: foo

                  *Note*: This field must be empty for a delegated RouteTable.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              weight:
                description: |-
                  Weight is used when sorting route tables in delegate action or routes when sorted by specificity.
                  Higher integer values are considered higher priority. The default value is 0.
                format: int32
                type: integer
              workloadSelectors:
                description: |-
                  Optional: Selectors for source workloads (with sidecars) which will route traffic by this route table.
                  Only valid for route tables which define at least one host.
                  If no workloadSelectors or virtualGateways are specified, all workloads in the workspace will automatically be selected.
                  If VirtualGateways are specified, set `workloadSelectors: - {}` to select all workloads in the workspace.
                  *Note*: This field must be empty for a delegated RouteTable.
                  *Note*: Selection of external workloads (VMs) is currently not supported.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the RouteTable
            properties:
              allowedVirtualGateways:
                description: list of allowed VirtualGateways this RouteTable can select
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              appliedRoutePolicies:
                additionalProperties:
                  properties:
                    policies:
                      description: List of applied route policies
                      items:
                        properties:
                          policy:
                            description: The reference to the policy
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                          routeIndex:
                            description: The index of the route on the route table
                            format: int32
                            type: integer
                          routeName:
                            description: The name of the route that the policy is
                              applied to
                            type: string
                        type: object
                      type: array
                  type: object
                description: |-
                  Map of policy GVK to policy references for all policies applied on this
                  resource.
                type: object
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns the route table
                properties:
                  workspace:
                    type: string
                type: object
              parentRouteTables:
                description: The parents of this route table, if it is a delegated
                  route table.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f7c75367bc3f35d6
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: virtualdestinations.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: VirtualDestination
    listKind: VirtualDestinationList
    plural: virtualdestinations
    shortNames:
    - vd
    singular: virtualdestination
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: VirtualDestinations define groupings of backing destinations
              (for network traffic).
            properties:
              clientMode:
                description: |-
                  Optional: Client mode determines how the VirtualDestination will be translated.
                  If nil, the mode is inherited from the WorkspaceSettings defined by the admin.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - auto
                    - required:
                      - sniRouting
                    - required:
                      - tlsTermination
                - required:
                  - auto
                - required:
                  - sniRouting
                - required:
                  - tlsTermination
                properties:
                  auto:
                    description: |-
                      The default mode is to use sni routing via tls passthrough at the East/West Gateway to route to services across clusters.
                      In the future, this may change to become smarter (e.g., detect if any pods backing the virtual destination don't have sidecars,
                      if so, then use tls termination so all pods are routeable).
                    maxProperties: 0
                    type: object
                  sniRouting:
                    description: Sni routing mode uses tls passthrough to route traffic
                      to the proper pod (with sidecar) from the East/West Gateway.
                    maxProperties: 0
                    type: object
                  tlsTermination:
                    description: |-
                      Tls termination mode uses tls termination at the East/West Gateway to route traffic to the correct pod.
                      This mode is ideal for Gloo Mesh Gateway, i.e. some backing pods don't have sidecars.
                      Since TLS is terminated at the East/West Gateway, the backing service (if it has a sidecar) will not be able to
                      verify the istio mTLS identity of the originating client; rather it will verify the istio mTLS cert of the East/West Gateway.
                    maxProperties: 0
                    type: object
                type: object
              externalServices:
                description: |-
                  Selectors for the backing External services that comprise this VirtualDestination.
                  An external service will be selected if it matches any of the given selectors.
                  Multiple External Services can be selected.
                items:
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
              hosts:
                description: 'Optional: The set of custom hosts for which this virtual
                  destination will serve traffic.'
                items:
                  type: string
                type: array
              ports:
                description: 'Required: The ports on which the VirtualDestination
                  will serve traffic. Must have at least one port.'
                items:
                  properties:
                    number:
                      description: The port number. Must be a valid, non-negative
                        integer port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    protocol:
                      description: |-
                        The protocol used in communication with this destination
                        MUST be one of the following: HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                      type: string
                    targetPort:
                      description: |-
                        (optional): The port number or name used to match the corresponding port on the
                        VirtualDestination's backing Services and ExternalServices.
                        All of the backing services for this VirtualDestination must contain
                        this port, matching by name or number.
                        If unspecified, will default to the value of the port number field above.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                type: array
              services:
                description: |-
                  Selectors for the backing K8s services that comprise this VirtualDestination.
                  A service will be selected if it matches any of the given selectors.
                  Currently only one K8s Service can be selected per cluster. If more than one service is selected
                  within a cluster the VirtualDestination will be invalid and will not be translated.
                items:
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the VirtualDestination
            properties:
              appliedDestinationPolicies:
                additionalProperties:
                  properties:
                    policies:
                      description: List of applied destination port policies
                      items:
                        properties:
                          destinationKind:
                            description: the kind of destination object that the policy
                              applies to
                            enum:
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            type: string
                          destinationPort:
                            description: the port on the destination object that the
                              policy applies to
                            format: int32
                            type: integer
                          policy:
                            description: The reference to the policy
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
                description: |-
                  Map of policy GVK to policy references for all policies applied on this
                  resource.
                type: object
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              ownerWorkspace:
                description: Name of Workspace that owns VirtualDestination
                properties:
                  workspace:
                    type: string
                type: object
              selectedBackingServices:
                description: Destinations that back this virtual destination
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: fa607569cba62249
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: virtualgateways.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: VirtualGateway
    listKind: VirtualGatewayList
    plural: virtualgateways
    shortNames:
    - vg
    singular: virtualgateway
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `VirtualGateway` represents a logical gateway configuration served by Gateway workloads within
              the same workspace. The specification describes a set of ports that the virtual gateway listens
              for incoming or outgoing HTTP/TCP connections, the type of protocol to use, SNI configuration etc.

              For example, the following VirtualGateway resource configures the gateway to listen for incoming
              HTTP requests on port 80, and delegate the route configuration of the '*.bookinfo.com' hostname
              to be provided by the bookinfo workspace. The VirtualGateway is
              applied to a specific set of gateway pods/VMs with the `app:my-gateway-controller`
              label within the same workspace as the VirtualGateway resource.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: VirtualGateway
              metadata:
                name: my-gateway
                namespace: some-config-namespace
                labels:
                  workspace.solo.io/exported: 'true'
              spec:
                workloads:
                  - selector:
                      labels:
                        app: my-gateway-controller
                listeners:
                  - port:
                      number: 80
                    allowedRouteTables:
                      - host: '*.bookinfo.com'
                        selector:
                          workspace: bookinfo
              ```
              For example, the following VirtualGateway resource configures the gateway to listen for incoming
              HTTP requests on port 80, delegate any `*.foo.com` request to the `HTTPRouteTable` resource(s)
              provided by the `foo-ws` workspace. Further, on the same port 80, it also delegates any
              `*.bar.com` request to the route configurations provided by the `bar-ws` workspace.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: VirtualGateway
              metadata:
                name: my-gateway
                namespace: some-config-namespace
                labels:
                  workspace.solo.io/exported: 'true'
              spec:
                workloads:
                  - selector:
                      labels:
                        app: my-gateway-controller
                listeners:
                  - port:
                      number: 80
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                      - host: '*.bar.com'
                        selector:
                          workspace: bar-ws
              ```

              For example, the following VirtualGateway resource configures the gateway to act
              as a load balancer listening on port 80 and 9080 (http), 443 (https), and
              9443(https) for ingress.  The VirtualGateway resource is
              applied to a specific set of gateway pods/VMs with the `app: my-gateway-controller`
              label within the same workspace. The route table(s) associated with each
              port 80, 9080 and 443 must be provided by the foo-ws workspace, with hosts that
              match `*.foo.com`. The route table(s) for port 9080 must be provided by the bar-ws
              workspace with hosts that match `*.bar.com`.

              ```yaml
              apiVersion: networking.gloo.solo.io/v2
              kind: VirtualGateway
              metadata:
                name: my-gateway
                namespace: some-config-namespace
                labels:
                  workspace.solo.io/exported: 'true'
              spec:
                workloads:
                  - selector:
                      labels:
                        app: my-gateway-controller
                listeners:
                  - port:
                      number: 80
                    httpsRedirect: true
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                  - port:
                      number: 443
                    tls:
                      mode: SIMPLE
                      files:
                        privateKey: /etc/certs/privatekey.pem
                        serverCert: /etc/certs/servercert.pem
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                  - port:
                      number: 9443
                    tls:
                      mode: SIMPLE
                      secretName: my-secret
                    allowedRouteTables:
                      - host: '*.foo.com'
                        selector:
                          workspace: foo-ws
                  - port:
                      number: 9080
                    allowedRouteTables:
                      - host: '*.bar.com'
                        selector:
                          workspace: foo-ws
              ```
            properties:
              listeners:
                description: |-
                  Required: One or more listeners for the virtual gateway.
                  Each listener specifies a port and virtual host(s) for traffic received on those ports.
                items:
                  allOf:
                  - oneOf:
                    - not:
                        anyOf:
                        - properties:
                            tls:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - secretName
                                  - required:
                                    - files
                              - required:
                                - secretName
                              - required:
                                - files
                          required:
                          - tls
                        - required:
                          - httpsRedirect
                    - properties:
                        tls:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - secretName
                              - required:
                                - files
                          - required:
                            - secretName
                          - required:
                            - files
                      required:
                      - tls
                    - required:
                      - httpsRedirect
                  - oneOf:
                    - not:
                        anyOf:
                        - required:
                          - http
                        - required:
                          - tcp
                    - required:
                      - http
                    - required:
                      - tcp
                  properties:
                    allowedRouteTables:
                      description: |-
                        Optional: Filter RouteTables which can bind to this listener by the host names and object metadata.
                        Wildcard matching for host name is supported here.
                        If not specified, any route table will be allowed to bind to this VirtualGateway.
                      items:
                        properties:
                          host:
                            description: 'Required: host name to select. Can use *
                              to match host name patterns in multiple objects.'
                            type: string
                          selector:
                            description: 'Optional: filter out route tables which
                              do not match the selector, if provided.'
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                        type: object
                      type: array
                    appProtocol:
                      description: |-
                        Optional: Apply an application protocol to use when deciding what additional capabilities to
                        add to the gateway, such as routing and rich metrics. If no protocol is selected, it will be inferred
                        from the listener type and its TLS settings. With an `http` listener, the `app_protocol` will default to
                        `HTTP` if there are no TLS settings and `HTTPS` if there are. With a `tcp` listener, the `app_protocol`
                        will default to `TCP` or `TLS` depending on the presence of TLS settings.
                      type: string
                    http:
                      description: |-
                        Serves http requests on the hosts specified for a given listener.
                        The listener will route traffic based on the HTTPRouteTable resource(s)
                        that is attached to the virtual gateway.
                      type: object
                    httpsRedirect:
                      description: |-
                        If set to true, the load balancer will send a 301 redirect for all http connections,
                        asking the clients to use HTTPS.
                      type: boolean
                    port:
                      description: |-
                        Required: The port on the gateway workload's service on
                        which the gateway will listen for connections to route.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    tcp:
                      description: |-
                        tcp routes on based on sni server name
                        requires tls to be enabled
                      type: object
                    tls:
                      description: TLS configure for a virtual host or listener to
                        use TLS
                      properties:
                        files:
                          description: Files reference paths to certificates which
                            can be read by the proxy off of its local filesystem
                          properties:
                            caCerts:
                              description: |-
                                Required if tlsMode is `MUTUAL`. The path to the file that contains the
                                certificate authority(CA) certificates for validating client cert.
                              type: string
                            privateKey:
                              description: |-
                                Required if tlsMode is `SIMPLE` or `MUTUAL`. The path to the file that
                                contains the server's private key.
                              type: string
                            serverCert:
                              description: |-
                                Required if tlsMode is `SIMPLE` or `MUTUAL`. The path to the file that
                                contains the server side TLS certificate.
                              type: string
                          type: object
                        mode:
                          description: TLS modes enforced by the proxy
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          type: string
                        parameters:
                          properties:
                            cipherSuites:
                              items:
                                type: string
                              type: array
                            maximumProtocolVersion:
                              enum:
                              - TLS_AUTO
                              - TLSv1_0
                              - TLSv1_1
                              - TLSv1_2
                              - TLSv1_3
                              type: string
                            minimumProtocolVersion:
                              enum:
                              - TLS_AUTO
                              - TLSv1_0
                              - TLSv1_1
                              - TLSv1_2
                              - TLSv1_3
                              type: string
                          type: object
                        secretName:
                          description: |-
                            SecretName is the name of the kubernetes secret which contains the ssl secret. Each
                            Gateway will look for a secret with this name on its own local cluster in its own namespace.
                          type: string
                        verifySubjectAltName:
                          description: |-
                            Verify that the Subject Alternative Name in the peer certificate is one of the specified values.
                            note that a ca_certs must be provided if this option is used.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                type: array
              workloads:
                description: |-
                  Optional: Select which gateway workloads implement this virtual gateway in the same workspace.
                  A gateway workload will be selected if it matches any of the provided selectors.
                  For 'selector.name', specify the gateway service's name.
                  For 'selector.labels', specify the gateway service's 'spec.selector' label.
                  If workloads is nil, it will be applied to all gateway workloads.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the gateway Template
            properties:
              allowedRouteTables:
                description: list of RouteTables allowed to bind to this VirtualGateway
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              workloads:
                description: workloads selected by this VirtualGateway
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/observability.policy.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 571d671664a7f826
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: accesslogpolicies.observability.policy.gloo.solo.io
spec:
  group: observability.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: AccessLogPolicy
    listKind: AccessLogPolicyList
    plural: accesslogpolicies
    singular: accesslogpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              AccessLogPolicy is used to collect access logs from workloads which have injected (sidecars) or are standalone proxies (gateways).
              AccessLogPolicies are applied at the *Workload* level.
            properties:
              applyToWorkloads:
                description: |-
                  Select the workloads where access logs will be collected.
                  If left empty, will apply to all workloads in the workspace.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the policy specifying how to collect access
                  logs from the selected workloads.
                properties:
                  filters:
                    description: |-
                      Configure criteria for determining which access logs will be recorded.
                      The list is disjunctive, a request will be recorded if it matches any filter.
                      Leave empty to emit all access logs.
                    items:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - statusCodeMatcher
                          - required:
                            - headerMatcher
                      - required:
                        - statusCodeMatcher
                      - required:
                        - headerMatcher
                      properties:
                        headerMatcher:
                          description: Matches against a request or response header.
                            Omit to match any headers.
                          properties:
                            invertMatch:
                              description: |-
                                If set to true, the result of the match will be inverted. Defaults to false.

                                   Examples:

                                       - name=foo, invert_match=true: matches if no header named `foo` is present
                                       - name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                       - name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present.
                              type: boolean
                            name:
                              description: Specify the name of the header in the request.
                              type: string
                            regex:
                              description: Specify whether the header value should
                                be treated as regex.
                              type: boolean
                            value:
                              description: |-
                                Specify the value of the header. If the value is absent a request that
                                has the name header will match, regardless of the header’s value.
                              type: string
                          type: object
                        statusCodeMatcher:
                          description: Matches against a response status code. Omit
                            to match any status code.
                          properties:
                            comparator:
                              description: The comparison type used for matching.
                              enum:
                              - EQ
                              - GE
                              - LE
                              type: string
                            value:
                              description: The status code value to match against.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                      type: object
                    type: array
                  includedFilterStateObjects:
                    description: Specify filter state objects to include in access
                      logs.
                    items:
                      type: string
                    type: array
                  includedRequestHeaders:
                    description: Specify request headers to include in access logs.
                    items:
                      type: string
                    type: array
                  includedResponseHeaders:
                    description: Specify response headers to include in access logs.
                    items:
                      type: string
                    type: array
                  includedResponseTrailers:
                    description: Specify response trailers to include in access logs.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: Reflects the status of the AccessLogPolicy.
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedWorkloadRefs:
                items:
                  properties:
                    kind:
                      enum:
                      - UNRECOGNIZED_WORKLOAD
                      - DEPLOYMENT
                      - DAEMON_SET
                      - STATEFUL_SET
                      - REPLICA_SET
                      type: string
                    ref:
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              selectedWorkloads:
                description: |-
                  Workloads selected by the policy
                  DEPRECATED: Use selected_workload_refs instead
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/resilience.policy.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 571ed1de7c6f9862
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: failoverpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: FailoverPolicy
    listKind: FailoverPolicyList
    plural: failoverpolicies
    shortNames:
    - fp
    singular: failoverpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              FailoverPolicy is used to enable failover routing for traffic being sent to selected destinations.
              When traffic is being routed to a backing service within a selected virtual destination, if that backing service is detected as being in an unhealthy state, traffic will be re-routed to another healthy backing service by locality as specified in the FailoverPolicy config.
              FailoverPolicy can be used to reroute traffic across clusters when the local instance of a destination service fails. This requires that the backing destinations of the selected virtual destination belong to meshes in the same TrustDomain.
              FailoverPolicies are applied at the *Destination* level.

              Note: To remove unhealthy destinations from the pool of routable destinations, you must use an [OutlierDetectionPolicy]({{< versioned_link_path fromRoot="/policies/outlier-detection/">}})
              in addition to the FailoverPolicy.
            properties:
              applyToDestinations:
                description: |-
                  select the virtual destinations where the policy will be applied
                  if left empty, will apply to all destinations in the workspace.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: |-
                  The details of the failover policy to apply to the selected virtual destinations.

                  You can exclude this if you wish to enable the locality load balancer
                  settings without mappings.
                properties:
                  localityMappings:
                    description: |-
                      Mappings between localities to provide failover for traffic
                      across regions, zones, and subzones.

                      You can exclude this if you wish to enable the locality load balancer
                      settings without mappings.
                    items:
                      properties:
                        from:
                          description: Originating locality of the client workload.
                          properties:
                            region:
                              description: The locality's region.
                              type: string
                            subZone:
                              description: (Optional) The locality's sub-zone.
                              type: string
                            zone:
                              description: (Optional) The locality's zone.
                              type: string
                          type: object
                        to:
                          description: The list of Destination localities that can
                            be routed to if the instance local to the client workload
                            is not available.
                          items:
                            properties:
                              region:
                                description: The locality's region.
                                type: string
                              subZone:
                                description: (Optional) The locality's sub-zone.
                                type: string
                              weight:
                                description: |-
                                  (Optional) Weight for destination locality. All weights must add up to 100.
                                  If not provided, we will determine the weight based on other
                                  destination locality weights.
                                maximum: 4294967295
                                minimum: 0
                                nullable: true
                                type: integer
                              zone:
                                description: (Optional) The locality's zone.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: reflects the status of the FailoverPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedDestinationPorts:
                description: Destination ports selected by the policy
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 5b57057119ca12dc
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: outlierdetectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: OutlierDetectionPolicy
    listKind: OutlierDetectionPolicyList
    plural: outlierdetectionpolicies
    shortNames:
    - odp
    singular: outlierdetectionpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              OutlierDetectionPolicy is used to configure [outlier detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier) on the selected destinations.
              Specifying this field requires an empty `source_selector` because it must apply to all traffic.
              OutlierDetectionPolicies are applied at the *Destination* level.
            properties:
              applyToDestinations:
                description: |-
                  select the destinations where the policy will be applied
                  if left empty, will apply to all destinations in the workspace.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the OutlierDetectionPolicy to apply to
                  the selected destinations.
                properties:
                  baseEjectionTime:
                    description: |-
                      The minimum time duration for ejection, or the time when a destination is considered unhealthy and not used for load balancing.
                      Set this value as an integer plus a unit of time, in the format `1h`, `1m`, `1s`, or `1ms`. The value must be at least `1ms`, and defaults to `30s`.
                    type: string
                  consecutiveErrors:
                    description: The number of errors before a destination is removed
                      from the healthy connection pool. The default is 5.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  interval:
                    description: |-
                      The amount of time between analyzing destinations for ejection.
                      Set this value as an integer plus a unit of time, in the format `1h`, `1m`, `1s`, or `1ms`. The value must be at least `1ms`, and defaults to `10s`.
                    type: string
                  maxEjectionPercent:
                    description: |-
                      The maximum percentage of destinations that can be removed from the healthy connection pool at a time.
                      For example, if you have 10 total destinations that the policy selects, and set this value to 50 percent, 5 destinations can be removed at once.
                      At least 1 destination can always be removed, regardless of the value you set. You can set this value between `0` and `100`, with a default of `100`.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            description: reflects the status of the OutlierDetectionPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedDestinationPorts:
                description: Destination ports selected by the policy
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 839ef76f0429b3c1
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: faultinjectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: FaultInjectionPolicy
    listKind: FaultInjectionPolicyList
    plural: faultinjectionpolicies
    shortNames:
    - fip
    singular: faultinjectionpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              FaultInjectionPolicy is used to inject faults (latency and errors) into requests sent through the mesh.
              Fault specification is part of a VirtualService rule. Faults include
              aborting the Http request from downstream service, and/or delaying
              proxying of requests. A fault rule MUST HAVE delay or abort or both.
              FaultInjectionPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the fault injection policy to apply to
                  the selected routes.
                properties:
                  abort:
                    description: Abort the request and return the specified error
                      code back to traffic source.
                    properties:
                      httpStatus:
                        description: Required. HTTP status code to use to abort the
                          request.
                        format: int32
                        type: integer
                      percentage:
                        description: Percentage of requests to be aborted. Values
                          range between 0 and 100. If omitted all requests will be
                          aborted.
                        nullable: true
                        type: number
                    type: object
                  delay:
                    description: |-
                      Indicate the amount of delay in seconds.
                      The optional _percentage_ field can be used to only delay a certain
                      percentage of requests. If left unspecified, all request will be delayed.
                    properties:
                      fixedDelay:
                        description: 'Required. Add a delay of a fixed duration before
                          sending the request. Format: `1h`/`1m`/`1s`/`1ms`. MUST
                          be >=1ms.'
                        type: string
                      percentage:
                        description: Percentage of requests on which the delay will
                          be injected. Values range between 0 and 100. If omitted
                          all requests will be delayed.
                        nullable: true
                        type: number
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the FaultInjectionPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: cd5149cea16cf906
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: retrytimeoutpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RetryTimeoutPolicy
    listKind: RetryTimeoutPolicyList
    plural: retrytimeoutpolicies
    shortNames:
    - rtp
    singular: retrytimeoutpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RetryTimeoutPolicy is used to add automatic retries and timeouts to requests matching selected routes.
              RetryTimeoutPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the retry/timeout policy to apply to the
                  selected routes.
                properties:
                  requestTimeout:
                    description: Set a timeout on requests matched on the selected
                      routes.
                    type: string
                  retries:
                    description: Set a retry policy on requests matched on the selected
                      routes.
                    properties:
                      attempts:
                        description: |-
                          Number of retries for a given request
                          The interval between retries will be determined automatically (25ms+). When request
                          `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute)
                          or `per_try_timeout` is configured, the actual number of retries attempted also depends on
                          the specified request `timeout` and `per_try_timeout` values.
                          Defaults to 2 retries.
                        maximum: 2147483647
                        minimum: -2147483648
                        nullable: true
                        type: integer
                      perTryTimeout:
                        description: |-
                          Timeout per retry attempt for a given request. Format: `1h`/`1m`/`1s`/`1ms`. *Must be >= 1ms*.
                          Default is same value as request `timeout` of
                          the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute),
                          which means no timeout.
                        type: string
                      retryOn:
                        description: |-
                          Specifies the conditions under which retry takes place.
                          One or more policies can be specified using a ‘,’ delimited list.
                          If `retry_on` specifies a valid HTTP status, it will be added to retriable_status_codes retry policy.
                          See the [retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on)
                          and [gRPC retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on) for more details.
                        type: string
                      retryRemoteLocalities:
                        description: |-
                          Flag to specify whether the retries should retry to other localities.
                          Defaults to false.
                          See the [retry plugin configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_connection_management#retry-plugin-configuration) for more details.
                        nullable: true
                        type: boolean
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the RetryTimeoutPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 59dcb95bebdaf6fc
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: connectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ConnectionPolicy
    listKind: ConnectionPolicyList
    plural: connectionpolicies
    shortNames:
    - cp
    singular: connectionpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: ConnectionPolicy provides settings to apply low-level settings
              on selected TCP connections.
            properties:
              applyToDestinations:
                description: |-
                  select the destinations where the policy will be applied. If left empty,
                  this will apply to all destinations in the workspace.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the low-level network connection settings
                  to apply to the destinations.
                properties:
                  tcp:
                    description: The low-level TCP connection settings to apply to
                      the destinations selected.
                    properties:
                      connectTimeout:
                        description: Sets the TCP connection timeout. It must be greater
                          than or equal to 1ms.
                        type: string
                      maxConnections:
                        description: Sets the maximum allowed connections to the destination
                          host.
                        format: int32
                        type: integer
                      tcpKeepalive:
                        description: Sets the TCP keep-alive settings to apply to
                          selected destinations.
                        properties:
                          interval:
                            description: |-
                              The time duration between keep-alive probes.
                              Format examples: `1h`/`1m`/`1s`/`1ms`
                            type: string
                          probes:
                            description: Maximum number of TCP keepalive probes to
                              send before determining that connection is dead.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          time:
                            description: |-
                              The time duration a connection needs to be idle before keep-alive probes start being sent.
                              Format examples: `1h`/`1m`/`1s`/`1ms`.
                            type: string
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: Reflects the status of the ConnectionPolicy.
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedDestiantionPorts:
                description: Destination ports selected by the policy
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/security.policy.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: eaa7197fb16d80
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: accesspolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: AccessPolicy
    listKind: AccessPolicyList
    plural: accesspolicies
    shortNames:
    - ap
    singular: accesspolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              AccessPolicy is used to define how a destination service is granted. Specifically it describes
              both how clients should be authenticated and authorized to access the service.
              Refer to [this link](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
              for further details about cross origin resource sharing.
              AccessPolicies are applied at the *Destination Port* level.
            properties:
              applyToDestinations:
                description: |-
                  Note: for security reasons, `applyToWorkloads` is preferred.
                  select the destinations and their ports where the policy will be applied
                  if `applyToWorkloads` is non-empty, will be ignored.
                  if omitted and `applyToWorkloads` is also omitted, will apply to all ports on all destinations in the workspace.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToWorkloads:
                description: |-
                  Note: For security reasons, this is recommended over the `applyToDestinations` field.
                  select the workloads where the policy will be applied.
                  if omitted, behavior will be determined by the `applyToDestinations` field.
                  if an empty selector is provided in the list, will apply to all workloads in a
                  namespace, cluster, and workspace available in the parent object's workspace
                items:
                  properties:
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the Workload
                          type: object
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the access policy to apply to the selected
                  destinations.
                properties:
                  authn:
                    description: specify how clients will be authenticated to the
                      destination.
                    properties:
                      tlsMode:
                        description: |-
                          specify the type of TLS policy that will be enforced on clients connecting to the destination.
                          note that if service isolation is enabled for the workspace, this field will always be treated as 'STRICT'.
                        enum:
                        - DISABLE
                        - PERMISSIVE
                        - STRICT
                        type: string
                    type: object
                  authz:
                    description: specify how clients will be authorized to access
                      the destination.
                    properties:
                      allowedClients:
                        description: |-
                          the set of client identities that will be permitted to access the destination.
                          Provide a single empty selector to allow access for all client identities.
                        items:
                          properties:
                            requestIdentityMatcher:
                              description: |-
                                Select identities based on properties of the request. If multiple fields are set, they are ANDed together.
                                More information about the individual values can be found here: https://istio.io/latest/docs/reference/config/security/authorization-policy/#Source
                              properties:
                                notRequestPrincipals:
                                  description: Optional. A list of identities to negative
                                    match the request identity.
                                  items:
                                    type: string
                                  type: array
                                requestPrincipals:
                                  description: |-
                                    Optional. A list of identities to match the request identity ("iss/sub" from the JWT).
                                               If omitted all request identity values will be accepted.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            serviceAccountSelector:
                              description: |-
                                Select kubernetes service accounts as identities.
                                When selecting a service account that will be created in the future for use in a AuthorizationPolicy, ONLY provide the name, namespace and cluster where the service account will exist in the selector.
                                Providing labels and/or the workspace for a service account that does not exist in the selector will not result in that service account being added to the resulting AuthorizationPolicy.
                              properties:
                                cluster:
                                  description: |-
                                    Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                    matching objects across all clusters available in the parent object's workspace.
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: labels matching those of the object
                                  type: object
                                name:
                                  description: |-
                                    Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                    matching objects with any name available in the parent object's workspace.
                                  type: string
                                namespace:
                                  description: |-
                                    Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                    matching objects across all namespaces available in the parent object's workspace.
                                  type: string
                                workspace:
                                  description: |-
                                    Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                    matching objects across all workspaces available in the parent object's workspace.
                                  type: string
                              type: object
                          type: object
                        type: array
                      allowedIpBlocks:
                        description: |-
                          Optional. A list of IP blocks, populated from the source address of the IP packet.
                          Single IP (e.g. “1.2.3.4”) and CIDR (e.g. “1.2.3.0/24”) are supported. If not set,
                          any IP is allowed.
                        items:
                          type: string
                        type: array
                      allowedMethods:
                        description: |-
                          Optional. A list of HTTP methods to allow (e.g., "GET", "POST").
                                         It is ignored in gRPC case because the value is always "POST".
                                         If not specified, allows any method.
                        items:
                          type: string
                        type: array
                      allowedPaths:
                        description: |-
                          Optional. A list of HTTP paths or gRPC methods to allow.
                                         gRPC methods must be presented as fully-qualified name in the form of
                                         "/packageName.serviceName/methodName" and are case sensitive.
                                         Exact match, prefix match, and suffix match are supported for paths.
                                         For example, the path "/books/review" matches
                                         "/books/review" (exact match), "*books/" (suffix match), or "/books*" (prefix match).

                                         If not specified, allow any path.
                        items:
                          type: string
                        type: array
                      allowedRemoteIpBlocks:
                        description: |-
                          Optional. A list of IP blocks, populated from X-Forwarded-For header or proxy protocol.
                          To make use of this field, you must configure the numTrustedProxies field of the
                          gatewayTopology under the meshConfig when you install Istio or using an annotation
                          on the ingress gateway. See the documentation here: Configuring Gateway Network Topology.
                          Single IP (e.g. “1.2.3.4”) and CIDR (e.g. “1.2.3.0/24”) are supported. This is the same
                          as the remote.ip attribute. If not set, any IP is allowed.
                        items:
                          type: string
                        type: array
                      match:
                        description: Optional. Additional request matching conditions.
                        properties:
                          request:
                            description: Describes an HTTP request matching condition
                            properties:
                              headers:
                                additionalProperties:
                                  properties:
                                    notValues:
                                      description: |-
                                        Optional. A list of negative match values for the header - request must not match any values.
                                        Supports wildcards. The following example notValues would cause the Authorization Policy to
                                        not match a request with header values containing `ignore-books` or `partial-ignored-books`
                                        ```yaml
                                          notValues:
                                          - ignore-books
                                          - partial-ig*-books
                                        ```
                                      items:
                                        type: string
                                      type: array
                                    values:
                                      description: |-
                                        Optional. A list of match values for the header - request must match at least one value.
                                        Supports wildcards. The following example values would cause the Authorization Policy to
                                        match a request with header values containing `exact-books` OR `partial-matched-books`.
                                        ```yaml
                                          values:
                                          - exact-books
                                          - partial-*-books
                                        ```
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                description: Optional. HTTP request header matching
                                  conditions.
                                type: object
                            type: object
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the AccessPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedDestinationPorts:
                description: Destination ports selected by the policy
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 13f44349a0f18021
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: corspolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CORSPolicy
    listKind: CORSPolicyList
    plural: corspolicies
    shortNames:
    - cors
    singular: corspolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CORSPolicy is used to set a Cross-Origin Resource Sharing policy (CORS) for requests matching selected routes.
              Refer to [this link](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS
              for further details about cross origin resource sharing.
              CORSPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  Select the routes where the policy will be applied.
                  If left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the CORS policy to apply to the selected
                  routes.
                properties:
                  allowCredentials:
                    description: |-
                      Indicates whether the caller is allowed to send the actual request
                      (not the preflight) using credentials. Translates to the
                      `Access-Control-Allow-Credentials` header.
                    nullable: true
                    type: boolean
                  allowHeaders:
                    description: |-
                      List of HTTP headers that can be used when requesting the
                      resource. Serialized to the `Access-Control-Allow-Headers` header.
                    items:
                      type: string
                    type: array
                  allowMethods:
                    description: |-
                      List of HTTP methods allowed to access the resource. The content will
                      be serialized to the `Access-Control-Allow-Methods` header.
                    items:
                      type: string
                    type: array
                  allowOrigins:
                    description: String patterns that match allowed origins. An origin
                      is allowed if any of the string matchers match.
                    items:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - exact
                          - required:
                            - prefix
                          - required:
                            - regex
                          - required:
                            - suffix
                      - required:
                        - exact
                      - required:
                        - prefix
                      - required:
                        - regex
                      - required:
                        - suffix
                      properties:
                        exact:
                          description: Exact string match.
                          type: string
                        ignoreCase:
                          description: If true, indicates the exact/prefix/suffix
                            matching should be case insensitive. This has no effect
                            for the regex match.
                          type: boolean
                        prefix:
                          description: Prefix-based match.
                          type: string
                        regex:
                          description: ECMAscript style regex-based match.
                          type: string
                        suffix:
                          description: Suffix-based match.
                          type: string
                      type: object
                    type: array
                  exposeHeaders:
                    description: |-
                      A list of HTTP headers that browsers are allowed to
                      access. Serialized to the `Access-Control-Expose-Headers` header.
                    items:
                      type: string
                    type: array
                  maxAge:
                    description: |-
                      Specify how long the results of a preflight request can be
                      cached. Serialized to the `Access-Control-Max-Age` header.
                    type: string
                type: object
            type: object
          status:
            description: Reflects the status of the CORSPolicy.
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: da6bb4853c537720
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: csrfpolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CSRFPolicy
    listKind: CSRFPolicyList
    plural: csrfpolicies
    shortNames:
    - csrf
    singular: csrfpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CSRFPolicy is used to set safeguard to prevent CSRF (cross-site request forgery) attacks in requests matching selected routes.
              CSRFPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the CSRF policy to apply to the selected
                  routes.
                properties:
                  additionalOrigins:
                    description: |-
                      Specifies additional source origins that will be allowed in addition to
                      the destination origin.
                    items:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - exact
                          - required:
                            - prefix
                          - required:
                            - regex
                          - required:
                            - suffix
                      - required:
                        - exact
                      - required:
                        - prefix
                      - required:
                        - regex
                      - required:
                        - suffix
                      properties:
                        exact:
                          description: Exact string match.
                          type: string
                        ignoreCase:
                          description: If true, indicates the exact/prefix/suffix
                            matching should be case insensitive. This has no effect
                            for the regex match.
                          type: boolean
                        prefix:
                          description: Prefix-based match.
                          type: string
                        regex:
                          description: ECMAscript style regex-based match.
                          type: string
                        suffix:
                          description: Suffix-based match.
                          type: string
                      type: object
                    type: array
                  filterEnabled:
                    description: Specifies that CSRF policies will be evaluated, tracked
                      and enforced.
                    type: boolean
                  percentage:
                    description: |-
                      Specifies the % of requests for which the CSRF filter is enabled or when shadow mode is enabled the % of requests
                      evaluated and tracked, but not enforced.

                      If filter_enabled or shadow_enabled is true.
                      Envoy will lookup the runtime key to get the percentage of requests to filter.

                      .. note:: This field defaults to 100
                    nullable: true
                    type: number
                  shadowEnabled:
                    description: |-
                      Specifies that CSRF policies will be evaluated and tracked, but not enforced.

                      This is intended to be used when ``filter_enabled`` is false and will be ignored otherwise.
                    type: boolean
                type: object
            type: object
          status:
            description: reflects the status of the CSRFPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 4b048fc8e08c6f39
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: extauthpolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExtAuthPolicy
    listKind: ExtAuthPolicyList
    plural: extauthpolicies
    shortNames:
    - extauth
    singular: extauthpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ExtAuthPolicy is used to enforce external authorization/authentication of traffic matching selected routes or arriving at selected destinations.
              All ExtAuthPolicies in a workspace require an ExtAuthServer to in order to function.
              If no ExtAuthServer is specified, a default configuration will be used.
              ExtAuthRoutePolicies can be applied at both the *Route* and *Destination* levels.
              Default is to apply policy to all destinations.
            properties:
              applyToDestinations:
                description: |-
                  Select the destinations where the policy will be applied.
                  Default behavior if no selectors are specified is to apply to all destinations in the workspace.
                  If left empty and the route selector is set, no extauth policy on destinations will be applied.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToRoutes:
                description: |-
                  Select the routes where the policy will be applied.
                  If left empty, no extauth policy will be applied to any routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the external auth policy to apply to the
                  selected routes and destinations.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - disable
                    - required:
                      - glooAuth
                    - required:
                      - customAuth
                - required:
                  - disable
                - required:
                  - glooAuth
                - required:
                  - customAuth
                properties:
                  customAuth:
                    description: Use this field if you are running your own custom
                      extauth server. The destination service must be configured to
                      use a custom ext auth service via a ExtAuthDestinationPolicy.
                    properties:
                      contextExtensions:
                        additionalProperties:
                          type: string
                        description: |-
                          When a request matches the route or on which this configuration is applied,
                          Gloo Mesh will add the given context_extensions to the request that is sent to the external authorization server.
                          This allows the server to base the auth decision on metadata that you define on the source of the request.

                          This attribute is analogous to Envoy's config.filter.http.ext_authz.v2.CheckSettings. See the official
                          [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/ext_authz_filter.html?highlight=ext authz#config-filter-http-ext-authz-v2-checksettings)
                          for more details.
                        type: object
                    type: object
                  disable:
                    description: Set to true to disable auth on the route.
                    type: boolean
                  glooAuth:
                    description: Configure the selected route or destination with
                      auth options provided by the Gloo Mesh Ext Auth service. The
                      Ext Auth Service can be specified  must be configured to use
                      a Gloo Ext Auth service via a ExtAuthDestinationPolicy.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  server:
                    description: |-
                      reference to the ExtAuthServer to use for this policy.
                      Currently routes on a single gateway must share a single ExtAuthServer.
                      If none is provided, the default Gloo ExtAuthServer will be used.
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the ExtAuthPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedDestinationPorts:
                description: Destination ports selected by the policy
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e88c11d29791f61
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: wafpolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WAFPolicy
    listKind: WAFPolicyList
    plural: wafpolicies
    shortNames:
    - waf
    singular: wafpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              WAFPolicy is used to set safeguard your services with the functionality of Web ApplicationFirewall
              WAFPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the WAF policy to apply to the selected
                  routes.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - coreRuleSetSettingsString
                    - required:
                      - coreRuleSetSettingsPath
                - required:
                  - coreRuleSetSettingsString
                - required:
                  - coreRuleSetSettingsPath
                properties:
                  auditLogging:
                    description: This instructs the filter what to do with the transaction's
                      audit log.
                    properties:
                      action:
                        enum:
                        - NEVER
                        - RELEVANT_ONLY
                        - ALWAYS
                        type: string
                      location:
                        enum:
                        - FILTER_STATE
                        - DYNAMIC_METADATA
                        type: string
                    type: object
                  coreRuleSetSettingsPath:
                    description: The path to the core rule set settings to use
                    type: string
                  coreRuleSetSettingsString:
                    description: An inline string of the core rule set settings
                    type: string
                  customInterventionMessage:
                    description: Custom message to display when an intervention occurs
                    type: string
                  customRuleSets:
                    description: Overwrite the global rules on this route
                    items:
                      properties:
                        directory:
                          description: |-
                            A directory to include. all *.conf files in this directory will be
                            included. sub directories will NOT be checked.
                          type: string
                        files:
                          description: Array of files to include
                          items:
                            type: string
                          type: array
                        ruleStr:
                          description: String of rules which are added directly
                          type: string
                      type: object
                    type: array
                  disableCoreRuleSet:
                    description: Disable the OWASP core rule set from being applied
                    type: boolean
                  priority:
                    description: |-
                      Optional field that is used to determine the order in which rule sets
                      between policies are applied. Modsec rulesets for each policy
                      is applied from the lowest numerical priority to the highest numerical priority if it is provided.
                      Use this field for all WAF policies applicable to a route or not at all. Defaults to nil if not provided,
                      and WAF policies will be applied in order of ascending creation time.
                    maximum: 4294967295
                    minimum: 0
                    nullable: true
                    type: integer
                  requestHeadersOnly:
                    description: |-
                      If set, the body will not be buffered and fed to ModSecurity. Only the
                      headers will. This can help improve performance.
                    type: boolean
                  responseHeadersOnly:
                    type: boolean
                type: object
            type: object
          status:
            description: reflects the status of the WAFPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 71b02bdda8637f7
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: jwtpolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: JWTPolicy
    listKind: JWTPolicyList
    plural: jwtpolicies
    shortNames:
    - jwt
    singular: jwtpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: JWTPolicy used to enable JWT Authentication for routes
            properties:
              applyToRoutes:
                description: |-
                  Select the routes where the policy will be applied.
                  If left empty, no policy will be applied to any routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: |-
                  The details of the JWT policy to apply to the selected routes.

                     Example:
                         Sample JWT Payload: {
                             "org": "solo-io",
                             "iss": "https://localhost",
                             "exp": 4804324736,
                             "iat": 1648651136
                         }

                         Configuration below will enable JWT Authentication for selected routes
                         as well as inject a header into the request containing the value found
                         within the parsed claim if it exists. Empty sources default to extracting
                         JWTs from Authorization Header with prefix "Bearer <Token>"" or Query Param
                         "access_token=<Token>"

                         apiVersion: security.policy.gloo.solo.io/v2
                         kind: JWTPolicy
                         metadata:
                           name: <name>
                           namespace: <namespace>
                         spec:
                           config:
                             providers:
                               <provider_name>:
                                 issuer: "https://localhost"
                                 local:
                                   inline: |
                                     <pem formatted public key>
                                 claimsToHeaders:
                                 - claim: org
                                   header: x-org
                               stage: PRE_AUTHZ

                         This example enables JWT Authentication for selected routes and
                         request will be checked using token found at either X-Auth header with prefix
                         "Bearer <token>" or query param "auth_token=<Token>". Note if a request has both
                         sources available all tokens will need to be valid for the request to be accepted.

                         apiVersion: security.policy.gloo.solo.io/v2
                         kind: JWTPolicy
                         metadata:
                           name: <name>
                           namespace: <namespace>
                         spec:
                           config:
                             providers:
                               <provider_name>:
                                 issuer: "https://localhost"
                                 local:
                                   inline: |
                                     <pem formatted public key>
                                 tokenSource:
                                   header:
                                   - name: "X-Auth"
                                     prefix: "Bearer"
                                   queryParams:
                                   - "auth_token"
                               stage: PRE_AUTHZ
                properties:
                  allowMissingOrFailed:
                    description: |-
                      Allow requests to succeed even if JWT authentication is missing or fails.
                      For example, you might apply multiple policies to your routes to require
                      JWT auth OR another method such as external auth. Set this value to "true"
                      to allow a failed JWT auth request to pass through to the other authentication
                      method. By default, this value is "false" so that requests that fail JWT
                      authentication then fail authorization immediately.
                    type: boolean
                  phase:
                    description: |-
                      Use phase to indicate where in the request chain this JWT Filter should be applied.
                      If no phase is specified, the default will be post AuthZ.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - preAuthz
                        - required:
                          - postAuthz
                    - required:
                      - preAuthz
                    - required:
                      - postAuthz
                    properties:
                      postAuthz:
                        description: Apply this policy after Authorization policies
                          are applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                      preAuthz:
                        description: Apply this policy before Authorization policies
                          are applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                    type: object
                  providers:
                    additionalProperties:
                      oneOf:
                      - not:
                          anyOf:
                          - properties:
                              local:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - secretRef
                                    - required:
                                      - inline
                                - required:
                                  - secretRef
                                - required:
                                  - inline
                            required:
                            - local
                          - required:
                            - remote
                      - properties:
                          local:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - secretRef
                                - required:
                                  - inline
                            - required:
                              - secretRef
                            - required:
                              - inline
                        required:
                        - local
                      - required:
                        - remote
                      properties:
                        audiences:
                          description: |-
                            Optional: A list of intended audiences for this JWT token. A JWT containing any of these
                            audiences will be accepted. If not specified, the audiences in JWT will not be checked.
                          items:
                            type: string
                          type: array
                        claimsToHeaders:
                          description: 'Optional: What claims should be copied to
                            upstream headers.'
                          items:
                            properties:
                              append:
                                description: If the header exists, append to it (true),
                                  or overwrite it (false).
                                type: boolean
                              claim:
                                description: Claim name. for example, "sub"
                                type: string
                              header:
                                description: The header the claim will be copied to.
                                  for example, "x-sub".
                                type: string
                            type: object
                          type: array
                        clockSkewSeconds:
                          description: 'Optional: ClockSkewSeconds is used to verify
                            time constraints, such as `exp` and `npf`. Default is
                            60s'
                          maximum: 4294967295
                          minimum: 0
                          nullable: true
                          type: integer
                        issuer:
                          description: |-
                            Optional: The principal that issued the JWT, usually a URL or an email address.
                            If specified, the iss field in JWT token in the incoming request has to match this field else the request is denied.
                             If left empty the iss field in the JWT token is not checked.
                          type: string
                        keepToken:
                          description: 'Optional: KeepToken is used to keep the JWT
                            in the request post verification.'
                          type: boolean
                        local:
                          description: Local can be either inline raw string of public
                            jwks or kubernetes secret reference.
                          properties:
                            inline:
                              description: Inline PEM formatted public key.
                              type: string
                            secretRef:
                              description: Reference to a secret containing the PEM
                                formatted public key.
                              properties:
                                key:
                                  description: Key of data within specified secret.
                                  type: string
                                objectRef:
                                  description: Secret can be referenced explicitly
                                    by the namespace and cluster containing them.
                                  properties:
                                    cluster:
                                      description: the cluster of the object. if the
                                        field is omitted, Gloo Mesh will use the same
                                        cluster as the parent object containing this
                                        reference.
                                      type: string
                                    name:
                                      description: the name of the object
                                      type: string
                                    namespace:
                                      description: the namespace of the object. if
                                        the field is omitted, Gloo Mesh will use the
                                        same namespace as the parent object containing
                                        this reference.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        remote:
                          description: JWKS from remote url source.
                          properties:
                            cacheDuration:
                              description: |-
                                Duration after which the cached JWKS should be expired.

                                If not specified, default cache duration is 5 minutes.
                              type: string
                            destinationRef:
                              description: The remote destination representing the
                                Json Web Key Set server
                              properties:
                                kind:
                                  description: the kind of destination being selected.
                                    defaults to Kubernetes Service.
                                  enum:
                                  - SERVICE
                                  - VIRTUAL_DESTINATION
                                  - EXTERNAL_SERVICE
                                  type: string
                                port:
                                  description: the port on the destination object
                                    being targeted. required if the object provides
                                    more than one port.
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - number
                                      - required:
                                        - name
                                  - required:
                                    - number
                                  - required:
                                    - name
                                  properties:
                                    name:
                                      description: the name of the port on the destination
                                        objects being targeted.
                                      type: string
                                    number:
                                      description: the number of the port on the destination
                                        objects being targeted.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                  type: object
                                ref:
                                  description: reference to the destination object
                                    by its metadata
                                  properties:
                                    cluster:
                                      description: the cluster of the object. if the
                                        field is omitted, Gloo Mesh will use the same
                                        cluster as the parent object containing this
                                        reference.
                                      type: string
                                    name:
                                      description: the name of the object
                                      type: string
                                    namespace:
                                      description: the namespace of the object. if
                                        the field is omitted, Gloo Mesh will use the
                                        same namespace as the parent object containing
                                        this reference.
                                      type: string
                                  type: object
                                subset:
                                  additionalProperties:
                                    type: string
                                  description: select a subset of the destination's
                                    endpoints for routing based on their labels.
                                  type: object
                                weight:
                                  description: |-
                                    Specify the proportion of traffic to be forwarded to this destination.
                                    Weights across all of the `destinations` must sum to 100.
                                    Weight is only relevant when used in the context of a route with multiple destinations.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                              type: object
                            enableAsyncFetch:
                              description: |-
                                Fetch Jwks asynchronously in the main thread before the listener is activated. Fetched Jwks can be used by all worker threads.

                                If this feature is not enabled:

                                    * The Jwks is fetched on-demand when the requests come. During the fetching, first
                                      few requests are paused until the Jwks is fetched.
                                    * Each worker thread fetches its own Jwks since Jwks cache is per worker thread.

                                If this feature is enabled:

                                    * Fetched Jwks is done in the main thread before the listener is activated. Its fetched
                                      Jwks can be used by all worker threads. Each worker thread doesn't need to fetch its own.
                                    * Jwks is ready when the requests come, not need to wait for the Jwks fetching.
                              type: boolean
                            timeout:
                              description: |-
                                Sets the maximum duration in seconds that a response can take to arrive upon request.

                                If left empty, defaults to 5s
                              type: string
                            url:
                              description: |-
                                The url used when accessing the remote destination for Json Web Key Set.
                                This is used to set the host and path in the request
                              type: string
                          type: object
                        tokenSource:
                          description: |-
                            Optional: If no explicit location is specified, the following default locations are tried in order:

                            1. The Authorization header using the `Bearer `

                               Authorization: Bearer <token>.

                            2. `access_token` query parameter

                               https://<url>/path?access_token=<token>

                            Multiple JWTs can be verified for a request. Each JWT has to be extracted from the locations
                            its provider specified or from the default locations. Note if a single request contains multiple
                            sources e.g header and query param set, then all tokens found in the request will need to be valid
                            for the request to be accepted. Configured fields are case sensitive will be matched verbatim
                          properties:
                            headers:
                              description: Try to retrieve token from these headers
                              items:
                                properties:
                                  name:
                                    description: 'The name of header. E.g: "Authorization"'
                                    type: string
                                  prefix:
                                    description: Prefix before the token. for example,
                                      "Bearer " with space
                                    type: string
                                type: object
                              type: array
                            queryParams:
                              description: Try to retrieve token from these query
                                params
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    description: |-
                      Map provider name to jwt provider configuration.

                      Note: The JWT provider name can help you map the JWT policy to the
                      provider, such as when debugging and viewing logs. However, the JWT
                      provider name does not change your policy's behavior, and cannot be
                      used by other resources to select the policy.
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the JWTPolicyStatus
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/trafficcontrol.policy.gloo.solo.io_v2_crds.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: b507f5867c55d0b7
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: mirrorpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: MirrorPolicy
    listKind: MirrorPolicyList
    plural: mirrorpolicies
    shortNames:
    - mp
    singular: mirrorpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              MirrorPolicy is used to mirror/shadow traffic to a another destination (traffic will be sent to its original destination in addition to the mirrored destinations).
              MirrorPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the Mirror policy to apply to the selected
                  routes
                properties:
                  destination:
                    description: The destination to which to send mirrored traffic
                    properties:
                      kind:
                        description: the kind of destination being selected. defaults
                          to Kubernetes Service.
                        enum:
                        - SERVICE
                        - VIRTUAL_DESTINATION
                        - EXTERNAL_SERVICE
                        type: string
                      port:
                        description: the port on the destination object being targeted.
                          required if the object provides more than one port.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - number
                            - required:
                              - name
                        - required:
                          - number
                        - required:
                          - name
                        properties:
                          name:
                            description: the name of the port on the destination objects
                              being targeted.
                            type: string
                          number:
                            description: the number of the port on the destination
                              objects being targeted.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      ref:
                        description: reference to the destination object by its metadata
                        properties:
                          cluster:
                            description: the cluster of the object. if the field is
                              omitted, Gloo Mesh will use the same cluster as the
                              parent object containing this reference.
                            type: string
                          name:
                            description: the name of the object
                            type: string
                          namespace:
                            description: the namespace of the object. if the field
                              is omitted, Gloo Mesh will use the same namespace as
                              the parent object containing this reference.
                            type: string
                        type: object
                      subset:
                        additionalProperties:
                          type: string
                        description: select a subset of the destination's endpoints
                          for routing based on their labels.
                        type: object
                      weight:
                        description: |-
                          Specify the proportion of traffic to be forwarded to this destination.
                          Weights across all of the `destinations` must sum to 100.
                          Weight is only relevant when used in the context of a route with multiple destinations.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  percentage:
                    description: Percentage of traffic to mirror. If omitted all traffic
                      will be mirrored. Values must be between 0 and 100.
                    nullable: true
                    type: number
                type: object
            type: object
          status:
            description: reflects the status of the MirrorPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 5918fde189616f3
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitPolicy
    listKind: RateLimitPolicyList
    plural: ratelimitpolicies
    shortNames:
    - rlp
    singular: ratelimitpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitPolicy is used to assign ratelimit configuration to specific routes or destinations.
              Traffic is forwarded to a rate-limited destinations specified in the RatelimitServerSettings.
              The RatelimitServerSettings is also used to configure connecting settings.
              If this is not provided, the default connection settings and default gloo mesh ratelimiter server destination will be used.
              RateLimitPolicies are applied at the *Route* level and *Destination* levels.
              Default is to apply policy to all destinations.
            properties:
              applyToDestinations:
                description: |-
                  Select the destinations where the policy will be applied.
                  Default behavior if no selectors are specified is to apply to all destinations in the workspace.
                  If left empty and the route selector is set, no ratelimits on destinations will be applied.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToRoutes:
                description: |-
                  Select the routes where the policy will be applied.
                  If left empty, no ratelimits on routes will be applied in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The configuration details of the rate limit policy to
                  apply to the selected routes
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - raw
                    - required:
                      - ratelimitClientConfig
                - required:
                  - raw
                - required:
                  - ratelimitClientConfig
                properties:
                  phase:
                    description: |-
                      Specify the phase to indicate where this policy should be applied relative to other policies.
                      If no phase is specified, the default will be post AuthZ.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - preAuthz
                        - required:
                          - postAuthz
                    - required:
                      - preAuthz
                    - required:
                      - postAuthz
                    properties:
                      postAuthz:
                        description: Apply this policy after Authorization policies
                          are applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                      preAuthz:
                        description: Apply this policy before Authorization policies
                          are applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                    type: object
                  ratelimitClientConfig:
                    description: Select a RatelimitClientConfig policy to apply.
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  ratelimitServerConfig:
                    description: |-
                      Reference to the RatelimitServerConfig to use for this policy.
                      If none is provided, no ratelimit will be enforced
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  raw:
                    description: Inline a policy using the raw configuration format
                      used by the ratelimit server.
                    properties:
                      rateLimits:
                        description: |-
                          Actions specify how the client (Envoy) will compose the descriptors that
                          will be sent to the server to make a rate limiting decision.
                        items:
                          properties:
                            actions:
                              items:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - sourceCluster
                                    - required:
                                      - destinationCluster
                                    - required:
                                      - requestHeaders
                                    - required:
                                      - remoteAddress
                                    - required:
                                      - genericKey
                                    - required:
                                      - headerValueMatch
                                    - required:
                                      - metadata
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                                properties:
                                  destinationCluster:
                                    description: Rate limit on destination cluster.
                                    type: object
                                  genericKey:
                                    description: Rate limit on a generic key.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                    type: object
                                  headerValueMatch:
                                    description: Rate limit on the existence of request
                                      headers.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                      expectMatch:
                                        description: |-
                                          If set to true, the action will append a descriptor entry when the
                                          request matches the headers. If set to false, the action will append a
                                          descriptor entry when the request does not match the headers. The
                                          default value is true.
                                        nullable: true
                                        type: boolean
                                      headers:
                                        description: |-
                                          Specifies a set of headers that the rate limit action should match
                                          on. The action will check the request’s headers against all the
                                          specified headers in the config. A match will happen if all the
                                          headers in the config are present in the request with the same values
                                          (or based on presence if the value field is not in the config).
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - exactMatch
                                              - required:
                                                - regexMatch
                                              - required:
                                                - rangeMatch
                                              - required:
                                                - presentMatch
                                              - required:
                                                - prefixMatch
                                              - required:
                                                - suffixMatch
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                          properties:
                                            exactMatch:
                                              description: If specified, header match
                                                will be performed based on the value
                                                of the header.
                                              type: string
                                            invertMatch:
                                              description: |-
                                                If specified, the match result will be inverted before checking. Defaults to false.

                                                Examples:

                                                * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                                * The range [-10,0) will match the value -1, so it will not match when inverted.
                                              type: boolean
                                            name:
                                              description: Specifies the name of the
                                                header in the request.
                                              type: string
                                            prefixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the prefix of the header value.
                                                Note: empty prefix is not allowed, please use present_match instead.

                                                Examples:

                                                * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                              type: string
                                            presentMatch:
                                              description: |-
                                                If specified, header match will be performed based on whether the header is in the
                                                request.
                                              type: boolean
                                            rangeMatch:
                                              description: |-
                                                If specified, header match will be performed based on range.
                                                The rule will match if the request header value is within this range.
                                                The entire request header value must represent an integer in base 10 notation: consisting of
                                                an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                                the header value does not represent an integer. Match will fail for empty values, floating
                                                point numbers or if only a subsequence of the header value is an integer.

                                                Examples:

                                                * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                                  "-1somestring"
                                              properties:
                                                end:
                                                  description: end of the range (exclusive)
                                                  format: int64
                                                  type: integer
                                                start:
                                                  description: start of the range
                                                    (inclusive)
                                                  format: int64
                                                  type: integer
                                              type: object
                                            regexMatch:
                                              description: |-
                                                If specified, this regex string is a regular expression rule which implies the entire request
                                                header value must match the regex. The rule will not match if only a subsequence of the
                                                request header value matches the regex. The regex grammar used in the value field is defined
                                                `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                                Examples:

                                                * The regex *\d{3}* matches the value *123*
                                                * The regex *\d{3}* does not match the value *1234*
                                                * The regex *\d{3}* does not match the value *123.456*
                                              type: string
                                            suffixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the suffix of the header value.
                                                Note: empty suffix is not allowed, please use present_match instead.

                                                Examples:

                                                * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  metadata:
                                    description: Rate limit on metadata.
                                    properties:
                                      defaultValue:
                                        description: |-
                                          An optional value to use if *metadata_key* is empty. If not set and
                                          no value is present under the metadata_key then no descriptor is generated.
                                        type: string
                                      descriptorKey:
                                        description: Required. The key to use in the
                                          descriptor entry.
                                        type: string
                                      metadataKey:
                                        description: |-
                                          Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                          only happen if the value in the metadata is of type string.
                                        properties:
                                          key:
                                            description: |-
                                              Required. The key name of Metadata to retrieve the Struct from the metadata.
                                              Typically, it represents a builtin subsystem or custom extension.
                                            type: string
                                          path:
                                            description: |-
                                              Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                              e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                              which depends on the particular scenario.

                                              Note: Due to that only the key type segment is supported, the path can not specify a list
                                              unless the list is the last segment.
                                            items:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - key
                                              - required:
                                                - key
                                              properties:
                                                key:
                                                  description: Required. If specified,
                                                    use the key to retrieve the value
                                                    in a Struct.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      source:
                                        description: Source of metadata
                                        enum:
                                        - DYNAMIC
                                        - ROUTE_ENTRY
                                        type: string
                                    type: object
                                  remoteAddress:
                                    description: Rate limit on remote address.
                                    type: object
                                  requestHeaders:
                                    description: Rate limit on request headers.
                                    properties:
                                      descriptorKey:
                                        description: The key to use in the descriptor
                                          entry.
                                        type: string
                                      headerName:
                                        description: |-
                                          The header name to be queried from the request headers. The header’s
                                          value is used to populate the value of the descriptor entry for the
                                          descriptor_key.
                                        type: string
                                    type: object
                                  sourceCluster:
                                    description: Rate limit on source cluster.
                                    type: object
                                type: object
                              type: array
                            setActions:
                              items:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - sourceCluster
                                    - required:
                                      - destinationCluster
                                    - required:
                                      - requestHeaders
                                    - required:
                                      - remoteAddress
                                    - required:
                                      - genericKey
                                    - required:
                                      - headerValueMatch
                                    - required:
                                      - metadata
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                                properties:
                                  destinationCluster:
                                    description: Rate limit on destination cluster.
                                    type: object
                                  genericKey:
                                    description: Rate limit on a generic key.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                    type: object
                                  headerValueMatch:
                                    description: Rate limit on the existence of request
                                      headers.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                      expectMatch:
                                        description: |-
                                          If set to true, the action will append a descriptor entry when the
                                          request matches the headers. If set to false, the action will append a
                                          descriptor entry when the request does not match the headers. The
                                          default value is true.
                                        nullable: true
                                        type: boolean
                                      headers:
                                        description: |-
                                          Specifies a set of headers that the rate limit action should match
                                          on. The action will check the request’s headers against all the
                                          specified headers in the config. A match will happen if all the
                                          headers in the config are present in the request with the same values
                                          (or based on presence if the value field is not in the config).
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - exactMatch
                                              - required:
                                                - regexMatch
                                              - required:
                                                - rangeMatch
                                              - required:
                                                - presentMatch
                                              - required:
                                                - prefixMatch
                                              - required:
                                                - suffixMatch
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                          properties:
                                            exactMatch:
                                              description: If specified, header match
                                                will be performed based on the value
                                                of the header.
                                              type: string
                                            invertMatch:
                                              description: |-
                                                If specified, the match result will be inverted before checking. Defaults to false.

                                                Examples:

                                                * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                                * The range [-10,0) will match the value -1, so it will not match when inverted.
                                              type: boolean
                                            name:
                                              description: Specifies the name of the
                                                header in the request.
                                              type: string
                                            prefixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the prefix of the header value.
                                                Note: empty prefix is not allowed, please use present_match instead.

                                                Examples:

                                                * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                              type: string
                                            presentMatch:
                                              description: |-
                                                If specified, header match will be performed based on whether the header is in the
                                                request.
                                              type: boolean
                                            rangeMatch:
                                              description: |-
                                                If specified, header match will be performed based on range.
                                                The rule will match if the request header value is within this range.
                                                The entire request header value must represent an integer in base 10 notation: consisting of
                                                an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                                the header value does not represent an integer. Match will fail for empty values, floating
                                                point numbers or if only a subsequence of the header value is an integer.

                                                Examples:

                                                * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                                  "-1somestring"
                                              properties:
                                                end:
                                                  description: end of the range (exclusive)
                                                  format: int64
                                                  type: integer
                                                start:
                                                  description: start of the range
                                                    (inclusive)
                                                  format: int64
                                                  type: integer
                                              type: object
                                            regexMatch:
                                              description: |-
                                                If specified, this regex string is a regular expression rule which implies the entire request
                                                header value must match the regex. The rule will not match if only a subsequence of the
                                                request header value matches the regex. The regex grammar used in the value field is defined
                                                `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                                Examples:

                                                * The regex *\d{3}* matches the value *123*
                                                * The regex *\d{3}* does not match the value *1234*
                                                * The regex *\d{3}* does not match the value *123.456*
                                              type: string
                                            suffixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the suffix of the header value.
                                                Note: empty suffix is not allowed, please use present_match instead.

                                                Examples:

                                                * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  metadata:
                                    description: Rate limit on metadata.
                                    properties:
                                      defaultValue:
                                        description: |-
                                          An optional value to use if *metadata_key* is empty. If not set and
                                          no value is present under the metadata_key then no descriptor is generated.
                                        type: string
                                      descriptorKey:
                                        description: Required. The key to use in the
                                          descriptor entry.
                                        type: string
                                      metadataKey:
                                        description: |-
                                          Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                          only happen if the value in the metadata is of type string.
                                        properties:
                                          key:
                                            description: |-
                                              Required. The key name of Metadata to retrieve the Struct from the metadata.
                                              Typically, it represents a builtin subsystem or custom extension.
                                            type: string
                                          path:
                                            description: |-
                                              Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                              e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                              which depends on the particular scenario.

                                              Note: Due to that only the key type segment is supported, the path can not specify a list
                                              unless the list is the last segment.
                                            items:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - key
                                              - required:
                                                - key
                                              properties:
                                                key:
                                                  description: Required. If specified,
                                                    use the key to retrieve the value
                                                    in a Struct.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      source:
                                        description: Source of metadata
                                        enum:
                                        - DYNAMIC
                                        - ROUTE_ENTRY
                                        type: string
                                    type: object
                                  remoteAddress:
                                    description: Rate limit on remote address.
                                    type: object
                                  requestHeaders:
                                    description: Rate limit on request headers.
                                    properties:
                                      descriptorKey:
                                        description: The key to use in the descriptor
                                          entry.
                                        type: string
                                      headerName:
                                        description: |-
                                          The header name to be queried from the request headers. The header’s
                                          value is used to populate the value of the descriptor entry for the
                                          descriptor_key.
                                        type: string
                                    type: object
                                  sourceCluster:
                                    description: Rate limit on source cluster.
                                    type: object
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  serverSettings:
                    description: |-
                      Reference to the RatelimitServerSettings to use for this policy.
                      Currently routes on a single VirtualGateway or destination must share a single RatelimitServerSettings.
                      If none is provided, the default Gloo RatelimitServerSettings will be used.
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: Reflects the status of the RateLimitPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedDestinationPorts:
                description: Destination ports selected by the policy
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 11ef6e12ae798539
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitclientconfigs.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitClientConfig
    listKind: RateLimitClientConfigList
    plural: ratelimitclientconfigs
    shortNames:
    - rlcc
    singular: ratelimitclientconfig
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitClientConfig is used to configure the ratelimit rules on routes/destinations.
              All RateLimitPolicy resources in a workspace require an RateLimitClientConfig to in order to function.
              If no RateLimitClientConfig is provided, no ratelimit rules will be enforced.
            oneOf:
            - not:
                anyOf:
                - required:
                  - raw
            - required:
              - raw
            properties:
              raw:
                description: Define a policy using the raw configuration format used
                  by the client (Envoy).
                properties:
                  rateLimits:
                    description: |-
                      Actions specify how the client (Envoy) will compose the descriptors that
                      will be sent to the server to make a rate limiting decision.
                    items:
                      properties:
                        actions:
                          items:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                            - required:
                              - sourceCluster
                            - required:
                              - destinationCluster
                            - required:
                              - requestHeaders
                            - required:
                              - remoteAddress
                            - required:
                              - genericKey
                            - required:
                              - headerValueMatch
                            - required:
                              - metadata
                            properties:
                              destinationCluster:
                                description: Rate limit on destination cluster.
                                type: object
                              genericKey:
                                description: Rate limit on a generic key.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor
                                      entry.
                                    type: string
                                type: object
                              headerValueMatch:
                                description: Rate limit on the existence of request
                                  headers.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor
                                      entry.
                                    type: string
                                  expectMatch:
                                    description: |-
                                      If set to true, the action will append a descriptor entry when the
                                      request matches the headers. If set to false, the action will append a
                                      descriptor entry when the request does not match the headers. The
                                      default value is true.
                                    nullable: true
                                    type: boolean
                                  headers:
                                    description: |-
                                      Specifies a set of headers that the rate limit action should match
                                      on. The action will check the request’s headers against all the
                                      specified headers in the config. A match will happen if all the
                                      headers in the config are present in the request with the same values
                                      (or based on presence if the value field is not in the config).
                                    items:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                      - required:
                                        - exactMatch
                                      - required:
                                        - regexMatch
                                      - required:
                                        - rangeMatch
                                      - required:
                                        - presentMatch
                                      - required:
                                        - prefixMatch
                                      - required:
                                        - suffixMatch
                                      properties:
                                        exactMatch:
                                          description: If specified, header match
                                            will be performed based on the value of
                                            the header.
                                          type: string
                                        invertMatch:
                                          description: |-
                                            If specified, the match result will be inverted before checking. Defaults to false.

                                            Examples:

                                            * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                            * The range [-10,0) will match the value -1, so it will not match when inverted.
                                          type: boolean
                                        name:
                                          description: Specifies the name of the header
                                            in the request.
                                          type: string
                                        prefixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the prefix of the header value.
                                            Note: empty prefix is not allowed, please use present_match instead.

                                            Examples:

                                            * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                          type: string
                                        presentMatch:
                                          description: |-
                                            If specified, header match will be performed based on whether the header is in the
                                            request.
                                          type: boolean
                                        rangeMatch:
                                          description: |-
                                            If specified, header match will be performed based on range.
                                            The rule will match if the request header value is within this range.
                                            The entire request header value must represent an integer in base 10 notation: consisting of
                                            an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                            the header value does not represent an integer. Match will fail for empty values, floating
                                            point numbers or if only a subsequence of the header value is an integer.

                                            Examples:

                                            * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                              "-1somestring"
                                          properties:
                                            end:
                                              description: end of the range (exclusive)
                                              format: int64
                                              type: integer
                                            start:
                                              description: start of the range (inclusive)
                                              format: int64
                                              type: integer
                                          type: object
                                        regexMatch:
                                          description: |-
                                            If specified, this regex string is a regular expression rule which implies the entire request
                                            header value must match the regex. The rule will not match if only a subsequence of the
                                            request header value matches the regex. The regex grammar used in the value field is defined
                                            `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                            Examples:

                                            * The regex *\d{3}* matches the value *123*
                                            * The regex *\d{3}* does not match the value *1234*
                                            * The regex *\d{3}* does not match the value *123.456*
                                          type: string
                                        suffixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the suffix of the header value.
                                            Note: empty suffix is not allowed, please use present_match instead.

                                            Examples:

                                            * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              metadata:
                                description: Rate limit on metadata.
                                properties:
                                  defaultValue:
                                    description: |-
                                      An optional value to use if *metadata_key* is empty. If not set and
                                      no value is present under the metadata_key then no descriptor is generated.
                                    type: string
                                  descriptorKey:
                                    description: Required. The key to use in the descriptor
                                      entry.
                                    type: string
                                  metadataKey:
                                    description: |-
                                      Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                      only happen if the value in the metadata is of type string.
                                    properties:
                                      key:
                                        description: |-
                                          Required. The key name of Metadata to retrieve the Struct from the metadata.
                                          Typically, it represents a builtin subsystem or custom extension.
                                        type: string
                                      path:
                                        description: |-
                                          Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                          e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                          which depends on the particular scenario.

                                          Note: Due to that only the key type segment is supported, the path can not specify a list
                                          unless the list is the last segment.
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - key
                                          - required:
                                            - key
                                          properties:
                                            key:
                                              description: Required. If specified,
                                                use the key to retrieve the value
                                                in a Struct.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  source:
                                    description: Source of metadata
                                    enum:
                                    - DYNAMIC
                                    - ROUTE_ENTRY
                                    type: string
                                type: object
                              remoteAddress:
                                description: Rate limit on remote address.
                                type: object
                              requestHeaders:
                                description: Rate limit on request headers.
                                properties:
                                  descriptorKey:
                                    description: The key to use in the descriptor
                                      entry.
                                    type: string
                                  headerName:
                                    description: |-
                                      The header name to be queried from the request headers. The header’s
                                      value is used to populate the value of the descriptor entry for the
                                      descriptor_key.
                                    type: string
                                type: object
                              sourceCluster:
                                description: Rate limit on source cluster.
                                type: object
                            type: object
                          type: array
                        setActions:
                          items:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                            - required:
                              - sourceCluster
                            - required:
                              - destinationCluster
                            - required:
                              - requestHeaders
                            - required:
                              - remoteAddress
                            - required:
                              - genericKey
                            - required:
                              - headerValueMatch
                            - required:
                              - metadata
                            properties:
                              destinationCluster:
                                description: Rate limit on destination cluster.
                                type: object
                              genericKey:
                                description: Rate limit on a generic key.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor
                                      entry.
                                    type: string
                                type: object
                              headerValueMatch:
                                description: Rate limit on the existence of request
                                  headers.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor
                                      entry.
                                    type: string
                                  expectMatch:
                                    description: |-
                                      If set to true, the action will append a descriptor entry when the
                                      request matches the headers. If set to false, the action will append a
                                      descriptor entry when the request does not match the headers. The
                                      default value is true.
                                    nullable: true
                                    type: boolean
                                  headers:
                                    description: |-
                                      Specifies a set of headers that the rate limit action should match
                                      on. The action will check the request’s headers against all the
                                      specified headers in the config. A match will happen if all the
                                      headers in the config are present in the request with the same values
                                      (or based on presence if the value field is not in the config).
                                    items:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                      - required:
                                        - exactMatch
                                      - required:
                                        - regexMatch
                                      - required:
                                        - rangeMatch
                                      - required:
                                        - presentMatch
                                      - required:
                                        - prefixMatch
                                      - required:
                                        - suffixMatch
                                      properties:
                                        exactMatch:
                                          description: If specified, header match
                                            will be performed based on the value of
                                            the header.
                                          type: string
                                        invertMatch:
                                          description: |-
                                            If specified, the match result will be inverted before checking. Defaults to false.

                                            Examples:

                                            * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                            * The range [-10,0) will match the value -1, so it will not match when inverted.
                                          type: boolean
                                        name:
                                          description: Specifies the name of the header
                                            in the request.
                                          type: string
                                        prefixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the prefix of the header value.
                                            Note: empty prefix is not allowed, please use present_match instead.

                                            Examples:

                                            * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                          type: string
                                        presentMatch:
                                          description: |-
                                            If specified, header match will be performed based on whether the header is in the
                                            request.
                                          type: boolean
                                        rangeMatch:
                                          description: |-
                                            If specified, header match will be performed based on range.
                                            The rule will match if the request header value is within this range.
                                            The entire request header value must represent an integer in base 10 notation: consisting of
                                            an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                            the header value does not represent an integer. Match will fail for empty values, floating
                                            point numbers or if only a subsequence of the header value is an integer.

                                            Examples:

                                            * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                              "-1somestring"
                                          properties:
                                            end:
                                              description: end of the range (exclusive)
                                              format: int64
                                              type: integer
                                            start:
                                              description: start of the range (inclusive)
                                              format: int64
                                              type: integer
                                          type: object
                                        regexMatch:
                                          description: |-
                                            If specified, this regex string is a regular expression rule which implies the entire request
                                            header value must match the regex. The rule will not match if only a subsequence of the
                                            request header value matches the regex. The regex grammar used in the value field is defined
                                            `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                            Examples:

                                            * The regex *\d{3}* matches the value *123*
                                            * The regex *\d{3}* does not match the value *1234*
                                            * The regex *\d{3}* does not match the value *123.456*
                                          type: string
                                        suffixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the suffix of the header value.
                                            Note: empty suffix is not allowed, please use present_match instead.

                                            Examples:

                                            * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              metadata:
                                description: Rate limit on metadata.
                                properties:
                                  defaultValue:
                                    description: |-
                                      An optional value to use if *metadata_key* is empty. If not set and
                                      no value is present under the metadata_key then no descriptor is generated.
                                    type: string
                                  descriptorKey:
                                    description: Required. The key to use in the descriptor
                                      entry.
                                    type: string
                                  metadataKey:
                                    description: |-
                                      Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                      only happen if the value in the metadata is of type string.
                                    properties:
                                      key:
                                        description: |-
                                          Required. The key name of Metadata to retrieve the Struct from the metadata.
                                          Typically, it represents a builtin subsystem or custom extension.
                                        type: string
                                      path:
                                        description: |-
                                          Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                          e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                          which depends on the particular scenario.

                                          Note: Due to that only the key type segment is supported, the path can not specify a list
                                          unless the list is the last segment.
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - key
                                          - required:
                                            - key
                                          properties:
                                            key:
                                              description: Required. If specified,
                                                use the key to retrieve the value
                                                in a Struct.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  source:
                                    description: Source of metadata
                                    enum:
                                    - DYNAMIC
                                    - ROUTE_ENTRY
                                    type: string
                                type: object
                              remoteAddress:
                                description: Rate limit on remote address.
                                type: object
                              requestHeaders:
                                description: Rate limit on request headers.
                                properties:
                                  descriptorKey:
                                    description: The key to use in the descriptor
                                      entry.
                                    type: string
                                  headerName:
                                    description: |-
                                      The header name to be queried from the request headers. The header’s
                                      value is used to populate the value of the descriptor entry for the
                                      descriptor_key.
                                    type: string
                                type: object
                              sourceCluster:
                                description: Rate limit on source cluster.
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: The current status of the `RateLimitClientConfig`.
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a2012d013840135c
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: headermanipulationpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: HeaderManipulationPolicy
    listKind: HeaderManipulationPolicyList
    plural: headermanipulationpolicies
    shortNames:
    - hmp
    singular: headermanipulationpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              HeaderManipulationPolicy is used to transform HTTP requests and responses matching selected routes.
              TransformationPolicies are applied at the *Route* level.
              If no selectors are provided, will apply to all routes in the workspace.
            properties:
              applyToRouteDestinations:
                description: |-
                  Select routes' destinations where the policy will be applied.
                  This field is intended for when the config should be applied to a `forwardTo` route only when
                  it is forwarded to a subset of the route's backing destinations.
                items:
                  properties:
                    onDestinations:
                      description: for the selected routes, select destinations on
                        which to apply this policy
                      items:
                        properties:
                          kind:
                            description: the kind of destination being selected. defaults
                              to Kubernetes Service.
                            enum:
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            type: string
                          port:
                            description: |-
                              the port on the Destination which receives traffic.
                              All ports on the Destination will be selected if left empty.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - number
                                - required:
                                  - name
                            - required:
                              - number
                            - required:
                              - name
                            properties:
                              name:
                                description: the name of the port on the destination
                                  objects being targeted.
                                type: string
                              number:
                                description: the number of the port on the destination
                                  objects being targeted.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          selector:
                            description: selector used to match destination objects
                              by their metadata
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                        type: object
                      type: array
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                        if left empty, configuration will apply to all specified destinations on all routes in the workspace.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToRoutes:
                description: select the routes where the policy will be applied
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the transformation policy to apply to
                  the selected routes or destinations for a given route.
                properties:
                  appendRequestHeaders:
                    additionalProperties:
                      type: string
                    description: Additional HTTP headers to add before forwarding
                      a request to the destination service.
                    type: object
                  appendResponseHeaders:
                    additionalProperties:
                      type: string
                    description: Additional HTTP headers to add before returning a
                      response to the caller.
                    type: object
                  removeRequestHeaders:
                    description: HTTP headers to remove before forwarding a request
                      to the destination service.
                    items:
                      type: string
                    type: array
                  removeResponseHeaders:
                    description: HTTP headers to remove before returning a response
                      to the caller.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: reflects the status of the HeaderManipulationPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 5d52e763e15003c2
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: transformationpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: TransformationPolicy
    listKind: TransformationPolicyList
    plural: transformationpolicies
    shortNames:
    - tp
    singular: transformationpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              TransformationPolicy is used to transform HTTP requests and responses matching selected routes.
              TransformationPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the transformation policy to apply to
                  the selected routes.
                properties:
                  phase:
                    description: |-
                      Specify the phase to indicate where this policy should be applied relative to other policies.
                      If no phase is specified, the default will be post AuthZ.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - preAuthz
                        - required:
                          - postAuthz
                    - required:
                      - preAuthz
                    - required:
                      - postAuthz
                    properties:
                      postAuthz:
                        description: Apply this policy after Authorization policies
                          are applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                      preAuthz:
                        description: Apply this policy before Authorization policies
                          are applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                    type: object
                  request:
                    description: Transformation to be applied before the request is
                      sent to the upstream service.
                    properties:
                      injaTemplate:
                        description: transform HTTP body and headers using Inja templates.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - body
                            - required:
                              - passthrough
                            - required:
                              - mergeExtractorsToBody
                        - required:
                          - body
                        - required:
                          - passthrough
                        - required:
                          - mergeExtractorsToBody
                        properties:
                          advancedTemplates:
                            description: |-
                              If set to true, use JSON pointer notation (e.g. "time/start") instead of
                              dot notation (e.g. "time.start") to access JSON elements. Defaults to
                              false.

                              Please note that, if set to 'true', you will need to use the `extraction`
                              function to access extractors in the template (e.g. '{{
                              extraction("my_extractor") }}'); if the default value of 'false' is used,
                              extractors will simply be available by their name (e.g. '{{ my_extractor
                              }}').
                            type: boolean
                          body:
                            description: Apply a template to the body
                            properties:
                              text:
                                type: string
                            type: object
                          dynamicMetadataValues:
                            description: Use this field to set Dynamic Metadata.
                            items:
                              properties:
                                key:
                                  description: The metadata key.
                                  type: string
                                metadataNamespace:
                                  description: The metadata namespace. Defaults to
                                    the filter namespace.
                                  type: string
                                value:
                                  description: A template that determines the metadata
                                    value.
                                  properties:
                                    text:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          extractors:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - header
                                  - required:
                                    - body
                              - required:
                                - header
                              - required:
                                - body
                              properties:
                                body:
                                  description: Extract information from the request/response
                                    body
                                  maxProperties: 0
                                  type: object
                                header:
                                  description: Extract information from headers
                                  type: string
                                regex:
                                  description: |-
                                    Only strings matching this regular expression will be part of the
                                    extraction. The most simple value for this field is '.*', which matches the
                                    whole source. The field is required. If extraction fails the result is an
                                    empty value.
                                  type: string
                                subgroup:
                                  description: |-
                                    If your regex contains capturing groups, use this field to determine which
                                    group should be selected.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                              type: object
                            description: |-
                              Use this attribute to extract information from the request. It consists of
                              a map of strings to extractors. The extractor will defines which
                              information will be extracted, while the string key will provide the
                              extractor with a name. You can reference extractors by their name in
                              templates, e.g. "{{ my-extractor }}" will render to the value of the
                              "my-extractor" extractor.
                            type: object
                          headers:
                            additionalProperties:
                              properties:
                                text:
                                  type: string
                              type: object
                            description: |-
                              Use this attribute to transform request/response headers. It consists of a
                              map of strings to templates. The string key determines the name of the
                              resulting header, the rendered template will determine the value. Any existing
                              headers with the same header name will be replaced by the transformed header.
                              If a header name is included in `headers` and `headers_to_append`, it will first
                              be replaced the template in `headers`, then additional header values will be appended
                              by the templates defined in `headers_to_append`.
                            type: object
                          headersToAppend:
                            description: |-
                              Use this attribute to transform request/response headers. It consists of
                              an array of string/template objects. Use this attribute to define multiple
                              templates for a single header. Header template(s) defined here will be appended to any
                              existing headers with the same header name, not replace existing ones.
                            items:
                              properties:
                                key:
                                  description: Header name
                                  type: string
                                value:
                                  description: Apply a template to the header value
                                  properties:
                                    text:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          ignoreErrorOnParse:
                            description: |-
                              If set to true, Envoy will not throw an exception in case the body parsing
                              fails.
                            type: boolean
                          mergeExtractorsToBody:
                            description: |-
                              Merge all defined extractors to the request/response body.
                              If you want to nest elements inside the body, use dot separator in the
                              extractor name.
                            type: object
                          parseBodyBehavior:
                            enum:
                            - ParseAsJson
                            - DontParse
                            type: string
                          passthrough:
                            description: |-
                              This will cause the transformation filter not to buffer the body.
                              Use this setting if the response body is large and you don't need to
                              transform nor extract information from it.
                            type: object
                        type: object
                      recalculateRoutingDestination:
                        description: |-
                          If the request was transformed such that it would match a different route,
                          recalculate the routing destination (select a new route) based on the transformed content of the request.
                        type: boolean
                    type: object
                  response:
                    description: Transform the response received from the upstream
                      servidce before returning it to the client.
                    properties:
                      injaTemplate:
                        description: transform response body and headers using Inja
                          templates
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - body
                            - required:
                              - passthrough
                            - required:
                              - mergeExtractorsToBody
                        - required:
                          - body
                        - required:
                          - passthrough
                        - required:
                          - mergeExtractorsToBody
                        properties:
                          advancedTemplates:
                            description: |-
                              If set to true, use JSON pointer notation (e.g. "time/start") instead of
                              dot notation (e.g. "time.start") to access JSON elements. Defaults to
                              false.

                              Please note that, if set to 'true', you will need to use the `extraction`
                              function to access extractors in the template (e.g. '{{
                              extraction("my_extractor") }}'); if the default value of 'false' is used,
                              extractors will simply be available by their name (e.g. '{{ my_extractor
                              }}').
                            type: boolean
                          body:
                            description: Apply a template to the body
                            properties:
                              text:
                                type: string
                            type: object
                          dynamicMetadataValues:
                            description: Use this field to set Dynamic Metadata.
                            items:
                              properties:
                                key:
                                  description: The metadata key.
                                  type: string
                                metadataNamespace:
                                  description: The metadata namespace. Defaults to
                                    the filter namespace.
                                  type: string
                                value:
                                  description: A template that determines the metadata
                                    value.
                                  properties:
                                    text:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          extractors:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - header
                                  - required:
                                    - body
                              - required:
                                - header
                              - required:
                                - body
                              properties:
                                body:
                                  description: Extract information from the request/response
                                    body
                                  maxProperties: 0
                                  type: object
                                header:
                                  description: Extract information from headers
                                  type: string
                                regex:
                                  description: |-
                                    Only strings matching this regular expression will be part of the
                                    extraction. The most simple value for this field is '.*', which matches the
                                    whole source. The field is required. If extraction fails the result is an
                                    empty value.
                                  type: string
                                subgroup:
                                  description: |-
                                    If your regex contains capturing groups, use this field to determine which
                                    group should be selected.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                              type: object
                            description: |-
                              Use this attribute to extract information from the request. It consists of
                              a map of strings to extractors. The extractor will defines which
                              information will be extracted, while the string key will provide the
                              extractor with a name. You can reference extractors by their name in
                              templates, e.g. "{{ my-extractor }}" will render to the value of the
                              "my-extractor" extractor.
                            type: object
                          headers:
                            additionalProperties:
                              properties:
                                text:
                                  type: string
                              type: object
                            description: |-
                              Use this attribute to transform request/response headers. It consists of a
                              map of strings to templates. The string key determines the name of the
                              resulting header, the rendered template will determine the value. Any existing
                              headers with the same header name will be replaced by the transformed header.
                              If a header name is included in `headers` and `headers_to_append`, it will first
                              be replaced the template in `headers`, then additional header values will be appended
                              by the templates defined in `headers_to_append`.
                            type: object
                          headersToAppend:
                            description: |-
                              Use this attribute to transform request/response headers. It consists of
                              an array of string/template objects. Use this attribute to define multiple
                              templates for a single header. Header template(s) defined here will be appended to any
                              existing headers with the same header name, not replace existing ones.
                            items:
                              properties:
                                key:
                                  description: Header name
                                  type: string
                                value:
                                  description: Apply a template to the header value
                                  properties:
                                    text:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          ignoreErrorOnParse:
                            description: |-
                              If set to true, Envoy will not throw an exception in case the body parsing
                              fails.
                            type: boolean
                          mergeExtractorsToBody:
                            description: |-
                              Merge all defined extractors to the request/response body.
                              If you want to nest elements inside the body, use dot separator in the
                              extractor name.
                            type: object
                          parseBodyBehavior:
                            enum:
                            - ParseAsJson
                            - DontParse
                            type: string
                          passthrough:
                            description: |-
                              This will cause the transformation filter not to buffer the body.
                              Use this setting if the response body is large and you don't need to
                              transform nor extract information from it.
                            type: object
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the TransformationPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedRoutes:
                description: Routes selected by the policy
                items:
                  properties:
                    routeIndex:
                      description: The index of the route on the route table
                      format: int32
                      type: integer
                    routeName:
                      description: The name of the route
                      type: string
                    routeTable:
                      description: The route table containing the route
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 4a9952f96d68fe23
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: proxyprotocolpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ProxyProtocolPolicy
    listKind: ProxyProtocolPolicyList
    plural: proxyprotocolpolicies
    singular: proxyprotocolpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ProxyProtocolPolicy is used to enable proxy protocol for gateway listener(s).

              For more details on ProxyProtocol, visit:
              https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt.

              ```
              apiVersion: trafficcontrol.policy.gloo.solo.io/v2
              kind: ProxyProtocolPolicy
              metadata:
                name: my-policy
                namespace: bookinfo
              spec:
                config:
                  enabledProxyProtocol: true
                applyToListeners:
                - virtualGateway:
                    name: virtual-gateway
                    namespace: bookinfo
                    cluster: my-cluster
                  port:
                    number: 443
              ```
            properties:
              applyToListeners:
                description: 'Required: The VirtualGateway(s) and Port(s) to which
                  this policy applies.'
                items:
                  properties:
                    port:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    virtualGateway:
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: 'Required: The configuration to apply to the listener.'
                properties:
                  enableProxyProtocol:
                    type: boolean
                type: object
            type: object
          status:
            description: reflects the status of the ProxyProtocolPolicy
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                  has not processed the most recent version of this object.
                format: int64
                type: integer
              state:
                description: |-
                  Whether the resource has been accepted as valid and processed in the Gloo
                  Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: gloo-mesh-agent/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo-mesh-agent
  name: gloo-mesh-agent
  namespace: gloo-mesh
---
# Source: gloo-mesh-agent/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-mesh-agent
  labels:
    app: gloo-mesh-agent
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps/status
  - namespaces/status
  - nodes/status
  - pods/status
  - services/status
  verbs:
  - get
  - update
- apiGroups:
  - apps
  resources:
  - daemonsets/status
  - deployments/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admin.gloo.solo.io
  resources:
  - kubernetesclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/status
  verbs:
  - get
  - update
- apiGroups:
  - admin.gloo.solo.io
  resources:
  - kubernetesclusters/status
  verbs:
  - get
  - update
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - serviceaccounts
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admin.gloo.solo.io
  resources:
  - dashboards
  - extauthservers
  - gatewaylifecyclemanagers
  - istiolifecyclemanagers
  - kubernetesclusters
  - ratelimitserverconfigs
  - ratelimitserversettings
  - roottrustpolicies
  - workspaces
  - workspacesettings
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apimanagement.gloo.solo.io
  resources:
  - apischemas
  - graphqlresolvermaps
  - graphqlstitchedschemas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions.policy.gloo.solo.io
  resources:
  - wasmdeploymentpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - install.istio.io
  resources:
  - istiooperators
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - discoveredcnis
  - discoveredgateways
  - meshes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.gloo.solo.io
  resources:
  - externalendpoints
  - externalservices
  - routetables
  - virtualdestinations
  - virtualgateways
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - observability.policy.gloo.solo.io
  resources:
  - accesslogpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - resilience.policy.gloo.solo.io
  resources:
  - connectionpolicies
  - failoverpolicies
  - faultinjectionpolicies
  - outlierdetectionpolicies
  - retrytimeoutpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - security.policy.gloo.solo.io
  resources:
  - accesspolicies
  - corspolicies
  - csrfpolicies
  - extauthpolicies
  - jwtpolicies
  - wafpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - trafficcontrol.policy.gloo.solo.io
  resources:
  - headermanipulationpolicies
  - mirrorpolicies
  - proxyprotocolpolicies
  - ratelimitclientconfigs
  - ratelimitpolicies
  - transformationpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/status
  - secrets/status
  - serviceaccounts/status
  - services/status
  verbs:
  - get
  - update
- apiGroups:
  - admin.gloo.solo.io
  resources:
  - dashboards/status
  - extauthservers/status
  - gatewaylifecyclemanagers/status
  - istiolifecyclemanagers/status
  - kubernetesclusters/status
  - ratelimitserverconfigs/status
  - ratelimitserversettings/status
  - roottrustpolicies/status
  - workspaces/status
  - workspacesettings/status
  verbs:
  - get
  - update
- apiGroups:
  - apimanagement.gloo.solo.io
  resources:
  - apischemas/status
  - graphqlresolvermaps/status
  - graphqlstitchedschemas/status
  verbs:
  - get
  - update
- apiGroups:
  - apps
  resources:
  - daemonsets/status
  - deployments/status
  - replicasets/status
  - statefulsets/status
  verbs:
  - get
  - update
- apiGroups:
  - extensions.policy.gloo.solo.io
  resources:
  - wasmdeploymentpolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - install.istio.io
  resources:
  - istiooperators/status
  verbs:
  - get
  - update
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - discoveredcnis/status
  - discoveredgateways/status
  - meshes/status
  verbs:
  - get
  - update
- apiGroups:
  - networking.gloo.solo.io
  resources:
  - externalendpoints/status
  - externalservices/status
  - routetables/status
  - virtualdestinations/status
  - virtualgateways/status
  verbs:
  - get
  - update
- apiGroups:
  - observability.policy.gloo.solo.io
  resources:
  - accesslogpolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - resilience.policy.gloo.solo.io
  resources:
  - connectionpolicies/status
  - failoverpolicies/status
  - faultinjectionpolicies/status
  - outlierdetectionpolicies/status
  - retrytimeoutpolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - security.policy.gloo.solo.io
  resources:
  - accesspolicies/status
  - corspolicies/status
  - csrfpolicies/status
  - extauthpolicies/status
  - jwtpolicies/status
  - wafpolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - trafficcontrol.policy.gloo.solo.io
  resources:
  - headermanipulationpolicies/status
  - mirrorpolicies/status
  - proxyprotocolpolicies/status
  - ratelimitclientconfigs/status
  - ratelimitpolicies/status
  - transformationpolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extauth.solo.io
  resources:
  - authconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - issuedcertificates
  - xdsconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  - envoyfilters
  - gateways
  - serviceentries
  - sidecars
  - virtualservices
  - workloadentries
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ratelimit.solo.io
  resources:
  - ratelimitconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - security.istio.io
  resources:
  - authorizationpolicies
  - peerauthentications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - extauth.solo.io
  resources:
  - authconfigs/status
  verbs:
  - get
  - update
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - issuedcertificates/status
  - xdsconfigs/status
  verbs:
  - get
  - update
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules/status
  - envoyfilters/status
  - gateways/status
  - serviceentries/status
  - sidecars/status
  - virtualservices/status
  - workloadentries/status
  verbs:
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - ratelimit.solo.io
  resources:
  - ratelimitconfigs/status
  verbs:
  - get
  - update
- apiGroups:
  - security.istio.io
  resources:
  - authorizationpolicies/status
  - peerauthentications/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - issuedcertificates
  - meshes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps/status
  - namespaces/status
  - secrets/status
  verbs:
  - get
  - update
- apiGroups:
  - apps
  resources:
  - daemonsets/status
  - deployments/status
  verbs:
  - get
  - update
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - issuedcertificates/status
  - meshes/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - podbouncedirectives
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps/status
  - pods/status
  - secrets/status
  verbs:
  - get
  - update
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - podbouncedirectives/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admin.gloo.solo.io
  resources:
  - gatewaylifecyclemanagers
  - istiolifecyclemanagers
  - kubernetesclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - install.istio.io
  resources:
  - istiooperators
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/status
  - services/status
  verbs:
  - get
  - update
- apiGroups:
  - admin.gloo.solo.io
  resources:
  - gatewaylifecyclemanagers/status
  - istiolifecyclemanagers/status
  - kubernetesclusters/status
  verbs:
  - get
  - update
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - update
- apiGroups:
  - install.istio.io
  resources:
  - istiooperators/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - install.istio.io
  resources:
  - istiooperators
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/status
  - serviceaccounts/status
  - services/status
  verbs:
  - get
  - update
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations/status
  - validatingwebhookconfigurations/status
  verbs:
  - get
  - update
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - update
- apiGroups:
  - install.istio.io
  resources:
  - istiooperators/status
  verbs:
  - get
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings/status
  - clusterroles/status
  verbs:
  - get
  - update
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - xdsconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - xdsconfigs/status
  verbs:
  - get
  - update
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - certificaterequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - certificaterequests/status
  verbs:
  - get
  - update
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - certificaterequests
  - discoveredcnis
  - discoveredgateways
  - issuedcertificates
  - meshes
  - podbouncedirectives
  - xdsconfigs
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - certificaterequests
  - podbouncedirectives
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  verbs:
  - '*'
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - podbouncedirectives
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  verbs:
  - '*'
- apiGroups:
  - extauth.solo.io
  resources:
  - authconfigs
  verbs:
  - '*'
- apiGroups:
  - internal.gloo.solo.io
  resources:
  - issuedcertificates
  - xdsconfigs
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  - envoyfilters
  - gateways
  - serviceentries
  - sidecars
  - virtualservices
  - workloadentries
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - '*'
- apiGroups:
  - ratelimit.solo.io
  resources:
  - ratelimitconfigs
  verbs:
  - '*'
- apiGroups:
  - security.istio.io
  resources:
  - authorizationpolicies
  - peerauthentications
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  - services
  verbs:
  - '*'
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - install.istio.io
  resources:
  - istiooperators
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - serviceaccounts
  - configmaps
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  - clusterroles
  - clusterrolebindings
  verbs:
  - get
  - list
  - watch
---
# Source: gloo-mesh-agent/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-mesh-agent
  labels:
    app: gloo-mesh-agent
subjects:
- kind: ServiceAccount
  name: gloo-mesh-agent
  namespace: gloo-mesh
roleRef:
  kind: ClusterRole
  name: gloo-mesh-agent
  apiGroup: rbac.authorization.k8s.io
---
# Source: gloo-mesh-agent/templates/deployment.yaml
# Service for gloo-mesh-agent

apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo-mesh-agent
  annotations:
    app.kubernetes.io/name: gloo-mesh-agent
  name: gloo-mesh-agent
  namespace: gloo-mesh
spec:
  selector:
    app: gloo-mesh-agent
  type: ClusterIP
  ports:
  - name: http
    port: 9988
  - name: stats
    port: 9091
  - name: grpc
    port: 9977
---
# Source: gloo-mesh-agent/templates/deployment.yaml
---


# Deployment manifest for gloo-mesh-agent

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo-mesh-agent
  annotations:
    app.kubernetes.io/name: gloo-mesh-agent
  name: gloo-mesh-agent
  namespace: gloo-mesh
spec:
  selector:
    matchLabels:
      app: gloo-mesh-agent
  template:
    metadata:
      labels:
        app: gloo-mesh-agent
      annotations:
        app.kubernetes.io/name: gloo-mesh-agent
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: gloo-mesh-agent
      containers:
      - name: gloo-mesh-agent
        image: gcr.io/gloo-mesh/gloo-mesh-agent:2.1.0-rc3
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --cluster=leaf1
        - --stats-port=9091
        - --grpc-port=9977
        - --gloo-network-scrape=false
        - --dev-logger=false
        - --relay-address=172.22.0.3:9900
        - --relay-authority=gloo-mesh-mgmt-server.gloo-mesh
        - --relay-client-cert-secret-name=gloo-agent-tls-cert
        - --relay-client-cert-secret-namespace=gloo-mesh
        - --relay-root-cert-secret-name=relay-root-tls-secret
        - --relay-root-cert-secret-namespace=gloo-mesh
        - --relay-identity-token-secret-name=relay-identity-token-secret
        - --relay-identity-token-secret-namespace=gloo-mesh
        - --relay-identity-token-secret-key=token
        - --max-grpc-message-size=4294967295
        - --metrics-buffer-size=50
        - --access-logs-buffer-size=50
        - --relay-insecure=false
        - --verbose=false
        - --leader-election=true
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
# Source: gloo-mesh-agent/templates/deployment.yaml
# Code generated by skv2. DO NOT EDIT.
---
# Source: gloo-mesh-agent/templates/rbac.yaml
# Code generated by skv2. DO NOT EDIT.


# Rbac manifests for gloo-mesh-agent
