apiVersion: admin.gloo.solo.io/v2
kind: IstioLifecycleManager
metadata:
  name: istiod-control-plane
  namespace: gloo-mesh
spec:
  installations:
      # The revision for this installation, such as 1-14
    - revision: 1-17
      # List all workload clusters to install Istio into
      clusters:
      - name: leaf1
        # If set to true, the spec for this revision is applied in the cluster
        defaultRevision: true
      - name: leaf2
        # If set to true, the spec for this revision is applied in the cluster
        defaultRevision: true
      istioOperatorSpec:
        # Only the control plane components are installed
        # (https://istio.io/latest/docs/setup/additional-setup/config-profiles/)
        profile: minimal
        # Solo.io Istio distribution repository; required for Gloo Istio.
        # You get the repo key from your Solo Account Representative.
        hub: 
        # Any Solo.io Gloo Istio tag
        tag: 1.17.3-solo
        namespace: istio-system
        # Mesh configuration
        meshConfig:
          enableTracing: true
          extensionProviders:
            - name: zipkincustom
              zipkin:
                service: "gloo-telemetry-collector.gloo-mesh.svc.cluster.local"
                port: "9411"
            - name: envoyOtelAls
              envoyOtelAls:
                service: "gloo-telemetry-collector.gloo-mesh.svc.cluster.local"
          # Enable access logging only if using.
          accessLogFile: /dev/stdout
          # Encoding for the proxy access log (TEXT or JSON). Default value is TEXT.
          accessLogEncoding: JSON
          defaultConfig:
            tracing:
              max_path_tag_length: 256
              custom_tags:
                clusterID:
                  environment:
                    name: ISTIO_META_CLUSTER_ID
            # Wait for the istio-proxy to start before starting application pods
            holdApplicationUntilProxyStarts: true
            proxyMetadata:
              # Enable Istio agent to handle DNS requests for known hosts
              # Unknown hosts are automatically resolved using upstream DNS servers
              # in resolv.conf (for proxy-dns)
              ISTIO_META_DNS_CAPTURE: "true"
              # Enable automatic address allocation (for proxy-dns)
              ISTIO_META_DNS_AUTO_ALLOCATE: "true"
          # Set the default behavior of the sidecar for handling outbound traffic
          # from the application
          outboundTrafficPolicy:
            mode: ALLOW_ANY
          # The administrative root namespace for Istio configuration
          rootNamespace: istio-system
        # Traffic management
        values:
          global:
            # use istio-csr for workload certificates
            caAddress: cert-manager-istio-csr.cert-manager.svc:443
            meshID: mesh1
            network: "istio-network"
        # Traffic management
        components:
          # Disable gateways deployments, which are deployed in separate resources
          ingressGateways:
          - name: istio-ingressgateway
            enabled: false
          - name: istio-eastwestgateway
            enabled: false
          egressGateways:
          - name: istio-egressgateway
            enabled: false
          pilot:
            k8s:
              env:
                # Disable selecting workload entries for local service routing.
                # Required for Gloo VirtualDestinaton functionality.
                - name: PILOT_ENABLE_K8S_SELECT_WORKLOAD_ENTRIES
                  value: "false"
                # Virtual Machine registration
                - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
                  value: "true"
                # Virtual Machine health checks
                - name: PILOT_ENABLE_WORKLOAD_ENTRY_HEALTHCHECKS
                  value: "true"
                  # Disable istiod CA Sever functionality
                - name: ENABLE_CA_SERVER
                  value: "false"
              # https://github.com/cert-manager/istio-csr/blob/main/hack/istio-config-1.17.2.yaml
              overlays:
              - apiVersion: apps/v1
                kind: Deployment
                name: istiod
                patches:
                  # Mount istiod serving and webhook certificate from Secret mount
                - path: spec.template.spec.containers.[name:discovery].args[7]
                  value: "--tlsCertFile=/etc/cert-manager/tls/tls.crt"
                - path: spec.template.spec.containers.[name:discovery].args[8]
                  value: "--tlsKeyFile=/etc/cert-manager/tls/tls.key"
                - path: spec.template.spec.containers.[name:discovery].args[9]
                  value: "--caCertFile=/etc/cert-manager/ca/root-cert.pem"
                - path: spec.template.spec.containers.[name:discovery].volumeMounts[6]
                  value:
                    name: cert-manager
                    mountPath: "/etc/cert-manager/tls"
                    readOnly: true
                - path: spec.template.spec.containers.[name:discovery].volumeMounts[7]
                  value:
                    name: ca-root-cert
                    mountPath: "/etc/cert-manager/ca"
                    readOnly: true
                - path: spec.template.spec.volumes[6]
                  value:
                    name: cert-manager
                    secret:
                      secretName: istiod-tls
                - path: spec.template.spec.volumes[7]
                  value:
                    name: ca-root-cert
                    configMap:
                      secretName: istiod-tls
                      defaultMode: 420
                      name: istio-ca-root-cert